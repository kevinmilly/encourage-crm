var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AddContactComponent.html",[0,0.414,1,0.978]],["body/components/AddContactComponent.html",[0,0.5,1,1.181,2,0.962,3,0.071,4,0.062,5,0.647,6,0.62,7,0.62,8,0.062,9,5.481,10,4.501,11,1.723,12,0.887,13,1.261,14,0.527,15,2.275,16,2.246,17,1.425,18,1.152,19,1.002,20,4.045,21,1.002,22,1.706,23,0.251,24,0.694,25,3.501,26,3.501,27,3.501,28,3.501,29,2.265,30,2.265,31,0.694,32,1.509,33,1.853,34,0.448,35,1.082,36,2.299,37,1.174,38,1.99,39,0.754,40,0.016,41,1.463,42,0.859,43,0.694,44,1.99,45,0.694,46,1.261,47,3.215,48,1.99,49,1.973,50,2.052,51,1.878,52,3.705,53,4.153,54,2.286,55,1.045,56,4.153,57,2.235,58,2.08,59,2.677,60,2.677,61,3.441,62,2.783,63,2.498,64,1.974,65,2.937,66,2.783,67,1.747,68,1.239,69,2.677,70,1.974,71,2.286,72,2.286,73,2.331,74,2.783,75,2.498,76,3.929,77,2.286,78,2.518,79,2.286,80,2.963,81,3.301,82,2.498,83,1.568,84,1.747,85,1.853,86,1.99,87,2.498,88,1.819,89,2.498,90,2.498,91,2.77,92,2.498,93,3.245,94,2.498,95,3.07,96,2.498,97,3.875,98,2.498,99,2.286,100,2.498,101,2.286,102,2.498,103,2.498,104,2.498,105,2.498,106,2.498,107,2.116,108,2.498,109,2.498,110,2.498,111,2.286,112,2.498,113,2.286,114,2.498,115,1.99,116,2.783,117,2.783,118,2.783,119,2.783,120,2.783,121,2.783,122,1.99,123,2.783,124,2.783,125,2.783,126,2.783,127,2.783,128,2.783,129,1.99,130,1.974,131,1.974,132,1.974,133,1.974,134,1.974,135,1.99,136,1.974,137,1.974,138,1.99,139,0.296,140,0.159,141,0.596,142,1.723,143,1.222,144,1.723,145,1.147,146,0.971,147,1.147,148,1.147,149,0.071,150,0.169,151,1.547,152,1.547,153,1.547,154,1.547,155,0.802,156,1.99,157,0.62,158,1.002,159,1.002,160,0.62,161,1.389,162,0.62,163,0.62,164,0.506,165,0.62,166,0.506,167,0.527,168,0.596,169,0.62,170,0.527,171,0.62,172,0.527,173,1.261,174,0.506,175,1.002,176,0.506,177,0.62,178,0.527,179,0.62,180,0.527,181,0.596,182,1.002,183,0.527,184,0.62,185,0.506,186,0.62,187,0.527,188,0.596,189,0.527,190,0.723,191,0.506,192,0.527,193,0.62,194,0.527,195,0.62,196,0.527,197,0.62,198,0.527,199,0.395,200,0.506,201,0.572,202,0.62,203,0.62,204,0.004,205,0.006,206,0.004]],["title/components/AddNoteComponent.html",[0,0.414,164,0.978]],["body/components/AddNoteComponent.html",[0,0.547,1,0.724,2,1.271,3,0.102,4,0.089,5,0.925,6,0.888,7,0.888,8,0.089,12,1.171,13,1.584,14,0.754,15,2.395,16,2.376,17,1.576,18,1.007,19,1.324,21,1.324,22,2.142,23,0.359,24,0.917,29,2.748,30,2.748,31,0.917,32,1.83,33,2.449,34,0.641,35,1.548,36,2.665,37,1.282,39,0.996,40,0.016,41,1.426,42,0.827,43,0.917,45,0.917,46,1.584,49,2.479,50,1.897,51,1.828,52,3.098,53,3.473,55,0.641,56,3.473,57,2.041,59,1.641,61,2.449,65,2.761,67,1.548,68,1.097,69,1.641,70,1.749,85,1.641,88,1.881,91,2.613,93,3.061,95,2.184,130,2.609,131,2.609,132,2.609,133,2.609,134,2.609,136,2.609,137,2.609,139,0.386,140,0.227,141,0.852,143,1.749,146,1.389,147,1.641,148,1.641,149,0.102,150,0.242,155,1.147,157,0.888,158,1.324,159,1.324,160,0.888,161,1.685,162,0.888,163,0.888,164,1.432,165,0.888,166,0.724,167,0.754,168,0.852,169,0.888,170,0.754,171,0.888,172,0.754,173,1.584,174,0.724,175,1.324,176,0.724,177,0.888,178,0.754,179,0.888,180,0.754,181,0.852,182,1.324,183,0.754,184,0.888,185,0.724,186,0.888,187,0.754,188,0.852,189,0.754,190,1.652,191,0.724,192,0.754,193,0.888,194,0.754,195,0.888,196,0.754,197,0.888,198,0.754,199,0.566,200,0.724,201,0.818,202,0.888,203,0.888,204,0.006,205,0.008,206,0.006,207,5.954,208,4.89,209,2.465,210,5.081,211,5.081,212,2.479,213,4.398,214,4.248,215,2.848,216,4.248,217,2.848,218,2.848,219,2.245,220,2.449,221,3.301,222,3.301,223,3.301,224,3.301,225,2.848,226,2.848,227,2.848,228,2.465,229,2.848,230,2.449,231,1.749,232,2.848,233,1.874,234,2.213,235,1.05,236,1.641,237,1.548,238,2.024,239,2.465,240,2.848,241,1.749,242,2.465,243,3.612,244,2.848,245,2.024,246,2.213,247,2.213,248,2.213,249,2.465,250,2.465,251,2.465,252,1.201,253,2.213,254,2.848]],["title/components/AddTaskComponent.html",[0,0.414,166,0.978]],["body/components/AddTaskComponent.html",[0,0.552,1,0.735,2,1.285,3,0.103,4,0.09,6,0.901,7,0.901,8,0.09,14,0.766,15,2.38,16,2.358,17,1.364,18,1.014,19,0.901,21,1.339,22,2.162,23,0.365,24,0.928,25,4.437,29,2.768,30,2.768,31,0.928,32,1.844,33,2.476,34,0.65,35,1.571,36,2.68,37,1.287,39,1.007,40,0.016,41,1.434,42,0.83,43,0.928,45,0.928,46,1.598,49,2.501,50,1.905,51,1.839,52,3.118,53,3.495,55,0.65,56,3.495,57,1.922,59,1.666,60,1.666,61,2.476,65,2.775,67,1.571,68,1.114,69,1.666,70,1.775,78,1.219,84,2.786,85,1.666,88,1.825,91,2.633,93,3.084,95,2.918,130,2.638,131,2.638,132,2.638,133,2.638,134,2.638,136,2.638,137,2.638,139,0.375,140,0.23,141,0.865,146,1.41,147,1.666,148,1.666,149,0.103,150,0.246,155,1.165,157,0.901,158,1.339,159,1.339,160,0.901,161,1.698,162,0.901,163,0.901,164,0.735,165,0.901,166,1.443,167,0.766,168,0.865,169,0.901,170,0.766,171,0.901,172,0.766,173,1.598,174,0.735,175,1.339,176,0.735,177,0.901,178,0.766,179,0.901,180,0.766,181,0.865,182,1.339,183,0.766,184,0.901,185,0.735,186,0.901,187,0.766,188,0.865,189,0.766,190,0.967,191,0.735,192,0.766,193,0.901,194,0.766,195,0.901,196,0.766,197,0.901,198,0.766,199,1.417,200,0.735,201,0.83,202,0.901,203,0.901,204,0.006,205,0.008,206,0.006,212,2.501,219,2.266,220,2.476,233,1.902,234,2.246,235,1.066,236,1.666,237,1.571,238,2.055,239,2.502,245,2.055,246,2.246,247,2.246,248,2.246,249,2.502,250,2.502,251,2.502,252,1.219,253,2.246,255,5.978,256,4.91,257,2.502,258,4.437,259,4.296,260,2.891,261,4.296,262,2.891,263,2.891,264,2.891,265,2.891,266,3.338,267,3.338,268,3.338,269,3.338,270,3.719,271,2.891,272,2.335,273,1.571,274,1.775,275,1.902,276,2.891,277,2.055,278,2.502,279,2.891]],["title/modules/AnalyticsModule.html",[280,1.418,281,2.734]],["body/modules/AnalyticsModule.html",[3,0.193,4,0.169,8,0.169,40,0.016,139,0.41,140,0.431,149,0.193,150,0.46,176,1.948,204,0.011,205,0.013,206,0.011,281,5.635,282,1.619,283,2.647,284,4.684,285,4.684,286,4.684,287,5.042,288,3.94,289,2.903,290,2.391,291,2.391,292,5.411,293,3.047,294,2.647,295,2.423,296,4.684,297,5.411,298,3.561,299,6.57,300,4.205,301,4.205]],["title/modules/AnalyticsRoutingModule.html",[280,1.418,287,2.53]],["body/modules/AnalyticsRoutingModule.html",[3,0.208,4,0.182,8,0.182,40,0.016,139,0.397,140,0.464,149,0.208,150,0.496,176,1.481,204,0.011,205,0.014,206,0.011,282,1.743,287,4.518,294,2.347,295,2.533,296,5.043,302,5.826,303,3.957,304,3.967,305,2.842,306,1.973,307,3.834,308,6.866,309,5.826,310,5.043,311,2.842]],["title/components/AppComponent.html",[0,0.414,167,1.018]],["body/components/AppComponent.html",[0,0.649,1,0.983,2,1.581,3,0.138,4,0.121,5,1.255,6,1.205,7,1.205,8,0.121,13,1.205,14,1.023,15,2.475,16,2.447,17,1.189,18,0.884,19,1.647,21,1.205,23,0.487,24,1.141,31,1.141,34,0.869,36,2.859,37,1.333,39,0.906,40,0.016,41,1.181,42,0.736,43,0.834,45,1.141,46,1.647,50,1.066,51,0.906,55,0.869,139,0.369,140,0.308,141,1.156,149,0.138,150,0.329,155,1.557,157,1.205,158,1.647,159,1.647,160,1.205,161,2.095,162,1.205,163,1.205,164,0.983,165,1.205,166,0.983,167,1.715,168,1.802,169,1.205,170,1.023,171,1.205,172,1.023,173,1.878,174,0.983,175,1.647,176,0.983,177,1.205,178,1.023,179,1.205,180,1.023,181,1.156,182,1.647,183,1.023,184,1.205,185,0.983,186,1.205,187,1.023,188,1.156,189,1.023,190,1.189,191,0.983,192,1.796,193,1.205,194,1.023,195,1.205,196,1.023,197,1.205,198,1.023,199,0.768,200,0.983,201,1.11,202,1.205,203,1.205,204,0.008,205,0.01,206,0.008,241,3.699,305,1.885,312,3.345,313,3.245,314,6.023,315,2.717,316,5.285,317,3.33,318,5.032,319,6.476,320,3.864,321,3.732,322,5.095,323,5.285,324,4.575,325,3.864,326,3.864,327,2.227,328,5.285,329,4.107,330,3.757,331,3.864,332,3.864,333,2.747,334,3.864,335,3.345,336,2.036,337,3.345,338,3.864,339,3.345,340,3.864,341,3.864,342,3.864,343,3.864,344,3.345,345,1.987,346,2.872,347,2.731,348,4.107,349,2.336,350,3.003,351,1.949,352,5.285,353,3.046,354,2.543,355,3.003,356,1.708,357,3.864,358,2.543,359,2.373,360,3.003,361,1.489]],["title/modules/AppModule.html",[280,1.418,362,2.734]],["body/modules/AppModule.html",[3,0.167,4,0.146,8,0.146,40,0.016,57,1.585,139,0.428,140,0.373,141,1.795,149,0.167,150,0.398,167,2.077,168,1.4,204,0.009,205,0.012,206,0.009,282,1.4,283,2.417,289,2.651,290,2.068,291,2.068,293,2.783,294,2.417,295,2.213,362,5.545,363,4.05,364,4.05,365,4.05,366,4.05,367,4.863,368,4.863,369,4.679,370,5.999,371,5.999,372,5.193,373,3.635,374,4.679,375,4.05,376,5.999,377,3.635,378,4.679,379,4.679,380,5.999,381,4.679,382,3.635,383,4.679,384,4.679,385,3.326,386,3.079,387,2.406,388,4.679,389,4.05,390,3.635,391,4.679,392,4.679,393,4.679,394,4.679,395,4.679,396,5.193,397,4.679,398,4.679,399,4.679,400,4.679,401,4.679,402,4.679,403,5.999,404,4.679,405,4.679,406,4.679,407,4.679,408,4.679,409,3.326,410,2.543,411,3.326,412,4.679,413,3.635,414,4.679,415,4.05]],["title/modules/AppRoutingModule.html",[280,1.418,367,2.53]],["body/modules/AppRoutingModule.html",[3,0.184,4,0.161,8,0.161,40,0.016,83,2.519,139,0.393,140,0.411,149,0.184,150,0.439,185,1.313,199,1.026,204,0.01,205,0.013,206,0.01,212,2.519,282,1.545,294,2.08,295,2.354,303,3.679,304,3.766,305,2.519,306,1.749,307,4.986,311,2.519,367,4.2,416,5.163,417,5.163,418,5.386,419,5.163,420,5.163,421,7.438,422,6.383,423,6.383,424,6.438,425,4.469,426,5.163,427,4.469,428,5.163,429,5.163,430,5.163,431,5.163,432,5.163,433,5.163,434,5.163]],["title/interfaces/AppState.html",[435,1.15,436,2.988]],["body/interfaces/AppState.html",[3,0.196,4,0.172,8,0.172,23,0.693,24,1.432,40,0.016,42,0.81,139,0.402,141,1.645,149,0.237,204,0.011,205,0.013,206,0.011,275,3.619,306,1.863,435,1.645,436,5.154,437,2.551,438,4.273,439,4.982,440,5.2,441,5.2,442,7.124,443,4.76,444,4.716,445,4.76,446,4.716,447,5.499,448,2.551,449,5.499,450,4.76]],["title/guards/AuthGuard.html",[418,2.734,451,2.988]],["body/guards/AuthGuard.html",[3,0.184,4,0.161,8,0.161,12,1.424,23,0.651,31,1.378,34,1.162,37,1.216,39,1.496,40,0.016,41,1.165,42,0.726,43,1.378,45,1.115,57,1.749,139,0.393,140,0.411,149,0.184,150,0.439,155,2.08,204,0.01,205,0.013,206,0.01,219,3.062,235,1.904,305,2.519,313,3.171,321,4.172,322,5.459,336,1.989,410,3.766,418,4.538,424,6.438,452,5.163,453,4.469,454,4.469,455,5.163,456,5.163,457,7.239,458,7.239,459,5.163,460,6.383,461,3.282,462,6.929,463,6.383,464,2.354,465,4.469,466,3.398,467,5.163,468,5.163,469,5.163,470,1.825]],["title/injectables/AuthService.html",[321,2.216,464,1.418]],["body/injectables/AuthService.html",[3,0.146,4,0.128,8,0.128,22,1.724,23,0.515,24,1.185,31,1.185,34,1.235,37,1.426,39,1.287,40,0.016,41,1.002,42,0.809,43,1.431,45,1.339,50,1.127,51,0.958,52,2.102,57,1.86,78,2.315,80,2.221,139,0.402,140,0.326,149,0.146,150,0.348,204,0.008,205,0.011,206,0.008,219,2.74,235,1.508,237,2.221,305,1.994,306,2.245,313,2.51,317,3.953,321,3.165,322,5.17,336,2.848,339,4.752,377,3.176,461,2.823,464,2.025,466,2.69,470,2.443,471,2.221,472,3.538,473,6.199,474,3.369,475,6.627,476,7.119,477,6.627,478,6.627,479,5.49,480,4.752,481,6.199,482,4.088,483,6.914,484,5.366,485,5.736,486,5.49,487,4.088,488,4.088,489,4.088,490,5.49,491,4.088,492,4.088,493,4.088,494,4.088,495,4.088,496,4.088,497,4.088,498,4.088,499,3.538,500,3.176,501,4.088,502,5.49,503,4.088,504,4.088,505,4.088,506,4.088,507,4.088,508,4.088,509,4.088,510,4.088,511,4.088,512,5.49,513,4.088,514,4.088,515,5.49,516,4.088,517,4.088,518,4.088,519,4.088,520,1.994,521,3.538,522,4.088,523,4.088,524,3.538,525,3.538,526,4.088,527,4.088,528,3.538,529,4.088,530,4.088]],["title/injectables/BackendService.html",[464,1.418,531,2.361]],["body/injectables/BackendService.html",[3,0.118,4,0.103,8,0.103,13,1.028,18,1.239,23,0.416,31,1.021,34,1.064,37,1.434,39,1.699,40,0.016,41,1.322,42,0.824,43,1.565,45,1.614,55,1.244,57,1.873,65,1.391,139,0.348,140,0.263,149,0.118,150,0.281,161,0.987,190,1.725,199,1.523,204,0.007,205,0.009,206,0.007,219,3.03,235,1.217,306,1.873,313,2.026,321,3.482,324,4.787,335,2.855,336,1.823,377,2.563,411,4.295,448,1.53,464,1.745,466,2.171,470,2.662,471,1.793,484,4.094,485,5.229,528,4.787,531,2.905,532,2.855,533,4.73,534,4.73,535,4.73,536,4.094,537,4.73,538,4.094,539,6.042,540,6.042,541,6.042,542,6.042,543,4.73,544,4.73,545,4.73,546,3.299,547,3.299,548,4.73,549,3.299,550,4.73,551,3.299,552,4.73,553,3.299,554,4.73,555,3.299,556,4.73,557,3.299,558,4.73,559,3.299,560,3.299,561,3.299,562,3.299,563,3.299,564,3.299,565,2.131,566,5.531,567,3.299,568,3.299,569,4.73,570,3.299,571,4.73,572,3.299,573,6.042,574,5.531,575,3.299,576,3.299,577,3.299,578,3.299,579,5.531,580,3.299,581,3.299,582,3.299,583,3.299,584,3.299,585,6.042,586,3.299,587,3.299,588,3.299,589,3.299,590,3.299,591,3.299,592,3.299,593,3.299,594,6.042,595,3.299,596,3.299,597,3.299,598,3.299,599,3.299,600,3.299,601,3.299,602,3.299,603,7.141,604,3.299,605,3.299,606,3.299,607,3.299]],["title/components/ButtonComponent.html",[0,0.414,170,1.018]],["body/components/ButtonComponent.html",[0,0.643,1,0.967,2,1.564,3,0.136,4,0.119,5,1.235,6,1.185,7,1.185,8,0.119,12,1.441,13,1.862,14,1.007,15,2.471,16,2.458,17,1.176,18,0.874,19,1.629,21,1.185,22,1.603,23,0.479,31,1.128,32,2.089,34,1.344,37,1.359,40,0.016,41,1.09,42,0.826,45,0.821,46,1.629,50,1.774,51,1.507,55,1.567,78,2.204,139,0.284,140,0.303,149,0.136,150,0.323,157,1.185,158,1.629,159,1.629,160,1.185,161,1.924,162,1.185,163,1.185,164,0.967,165,1.185,166,0.967,167,1.007,168,1.137,169,1.185,170,1.703,171,1.185,172,1.007,173,1.862,174,0.967,175,1.629,176,0.967,177,1.185,178,1.007,179,1.185,180,1.007,181,1.137,182,1.629,183,1.007,184,1.185,185,0.967,186,1.185,187,1.007,188,1.137,189,1.007,190,1.176,191,0.967,192,1.007,193,1.185,194,1.007,195,1.185,196,1.007,197,1.185,198,1.007,199,0.755,200,0.967,201,1.092,202,1.185,203,1.185,204,0.007,205,0.01,206,0.007,315,2.687,351,1.928,356,3.154,461,2.687,608,3.291,609,6.292,610,5.972,611,5.226,612,3.012,613,5.972,614,3.246,615,3.715,616,4.64,617,5.226,618,3.802,619,3.802,620,6.967,621,5.226,622,3.802,623,3.93,624,3.802,625,3.802,626,3.886,627,3.439,628,3.291,629,2.84,630,5.413,631,4.997,632,5.567,633,5.413]],["title/modules/CardsModule.html",[280,1.418,634,2.09]],["body/modules/CardsModule.html",[3,0.185,4,0.162,8,0.162,40,0.016,139,0.405,140,0.414,149,0.185,150,0.441,180,2.106,181,1.553,187,2.106,188,1.553,204,0.01,205,0.013,206,0.01,282,1.553,283,2.58,289,2.83,290,2.293,291,2.293,293,2.97,294,2.58,295,2.362,311,3.124,634,4.322,635,4.492,636,4.492,637,4.492,638,4.492,639,4.123,640,5.19,641,4.032,642,6.404,643,4.032,644,3.932,645,3.187,646,4.492]],["title/interfaces/Contact.html",[18,0.643,435,1.15]],["body/interfaces/Contact.html",[3,0.173,4,0.151,8,0.151,18,1.025,23,0.611,24,1.324,40,0.016,42,0.903,54,5.029,55,1.825,58,3.637,64,4.344,68,2.726,73,4.078,77,5.029,79,5.029,80,3.844,81,5.029,84,3.844,139,0.263,145,4.078,149,0.173,204,0.01,205,0.012,206,0.01,435,1.449,437,2.246,565,3.096,647,4.192,648,6.123,649,7.074,650,4.655,651,4.359,652,5.029]],["title/components/ContactDetailComponent.html",[0,0.414,172,1.018]],["body/components/ContactDetailComponent.html",[0,0.396,1,0.441,2,0.86,3,0.062,4,0.054,5,0.564,6,0.541,7,0.541,8,0.054,12,0.792,13,1.147,14,0.459,15,2.22,16,2.188,17,0.647,18,1.173,19,0.896,21,1.147,23,0.219,24,0.62,26,3.184,27,3.184,28,3.184,29,2.086,30,2.086,31,0.62,32,1.389,33,1.656,34,0.647,36,2.281,37,1.336,39,0.674,40,0.016,41,1.45,42,0.849,43,0.62,45,0.62,46,1.147,49,1.794,50,1.919,51,1.867,52,3.11,53,3.487,54,1.233,55,0.962,56,3.487,57,1.73,58,1.477,59,1.656,60,1.656,61,2.465,62,1.502,63,1.348,64,1.065,65,2.551,66,1.502,67,0.943,68,0.669,69,1.656,70,1.065,71,1.233,72,1.233,73,1.656,74,1.502,75,2.858,76,3.723,77,1.233,78,2.154,79,1.233,80,2.576,81,3.04,82,1.348,83,2.638,84,0.943,85,1,87,2.233,88,1.886,89,2.233,90,2.233,91,2.625,92,2.233,93,3.075,94,2.233,95,2.909,96,2.233,97,3.631,98,2.233,99,2.043,100,2.233,101,2.043,102,2.233,103,2.233,104,2.233,105,2.233,106,2.233,107,2.42,108,2.233,109,2.233,110,2.233,111,2.043,112,2.233,113,2.043,114,2.233,116,2.487,117,2.487,118,2.487,119,2.487,120,2.487,121,2.487,123,2.487,124,2.487,125,2.487,126,2.487,127,2.487,128,2.487,130,1.764,131,1.764,132,1.764,133,1.764,134,1.764,136,1.764,137,1.764,139,0.337,140,0.229,141,0.519,145,1,146,0.846,147,1,148,1,149,0.062,150,0.148,157,0.541,158,0.896,159,0.896,160,0.541,161,1.28,162,0.541,163,0.541,164,0.441,165,0.541,166,0.441,167,0.459,168,0.519,169,0.541,170,0.459,171,0.541,172,1.132,173,1.147,174,0.441,175,0.896,176,0.441,177,0.541,178,0.459,179,0.541,180,0.459,181,0.519,182,0.896,183,0.459,184,0.541,185,0.441,186,0.541,187,0.459,188,0.519,189,0.459,190,0.828,191,0.441,192,0.459,193,0.541,194,0.459,195,0.541,196,0.459,197,0.541,198,0.459,199,0.85,200,0.441,201,1.361,202,0.541,203,0.541,204,0.003,205,0.006,206,0.003,219,2.39,220,2.465,231,1.065,235,0.64,252,1.212,253,3.323,273,0.943,315,1.477,327,1,336,1.107,347,0.732,351,0.64,356,0.767,361,0.669,448,0.805,474,2.776,520,2.76,565,1.107,653,6.122,654,4.654,655,1.233,656,1.477,657,2.858,658,2.233,659,4.3,660,3.184,661,3.184,662,2.858,663,3.678,664,3.678,665,3.184,666,3.678,667,1.348,668,2.42,669,2.12,670,3.323,671,2.874,672,1.735,673,2.233,674,1.735,675,1,676,1.735,677,1.735,678,1.735,679,1.502,680,2.233,681,1.735,682,1.735,683,1.502,684,1.735,685,3.702,686,1.735,687,1.735,688,1.502,689,1.735,690,1.502,691,1.502,692,1.735,693,1.735,694,1.348,695,1.348,696,0.943,697,1.735,698,1.735,699,1.142,700,1.065,701,1.348,702,1.735,703,1.735,704,1.502,705,1.735,706,1.348,707,1.502,708,1.735,709,1.735,710,1.735,711,1.735,712,2.874,713,2.874,714,1.735,715,1.735,716,1.735,717,1.735,718,1.735,719,1.735,720,1.735,721,1.735,722,1.735,723,1.735,724,1.142,725,1.142,726,1.142,727,1.735,728,1.233,729,1.233,730,1.233,731,1.502,732,1.735,733,2.614,734,2.233,735,2.043,736,2.233,737,3.323,738,2.874,739,2.874,740,2.874,741,2.874,742,2.874,743,1.065,744,1.402,745,1.065,746,0.943,747,1.477,748,1.065,749,1.142,750,1.348,751,1.348,752,3.361,753,0.892,754,1.233,755,1.348,756,1.142,757,1.142,758,1.348,759,1,760,2.043,761,2.043,762,1.348,763,1.348,764,2.043,765,2.043,766,1.233]],["title/pipes/ContactDetailTranslatorPipe.html",[767,1.977,768,2.53]],["body/pipes/ContactDetailTranslatorPipe.html",[3,0.141,4,0.123,8,0.123,12,1.088,14,1.045,18,0.659,24,0.852,29,1.924,30,1.924,31,0.852,37,1.021,39,0.925,40,0.016,41,1.111,42,0.609,43,0.852,45,0.852,50,1.088,51,1.256,55,1.621,58,3.13,64,3.291,73,2.274,88,1.876,139,0.355,140,0.314,145,2.274,146,1.924,149,0.141,150,0.335,199,0.784,204,0.008,205,0.011,206,0.008,230,3.509,231,2.422,272,3.308,273,2.144,470,2.702,565,2.346,656,3.13,699,2.596,700,2.422,724,2.596,725,2.596,726,2.596,728,2.804,729,2.804,730,2.804,767,2.756,768,3.527,769,2.596,770,4.73,771,3.414,772,5.36,773,1.924,774,3.81,775,6.097,776,4.164,777,3.945,778,5.36,779,3.414,780,5.36,781,7.869,782,5.36,783,5.36,784,5.36,785,5.36,786,5.36,787,5.36,788,5.36,789,5.36,790,4.639,791,5.36,792,5.36,793,4.639,794,5.36,795,6.531,796,6.531,797,6.531,798,5.36,799,5.36,800,5.36,801,3.945,802,3.81,803,2.804,804,3.945,805,4.639,806,3.738,807,4.659,808,3.065,809,3.414,810,3.945,811,3.065,812,5.36,813,3.414,814,6.531,815,3.945,816,3.065,817,4.73,818,3.065,819,7.045,820,4.73,821,6.088,822,3.065,823,3.414,824,3.945,825,3.065,826,3.945,827,3.414,828,3.945]],["title/injectables/ContactEffects.html",[464,1.418,829,2.988]],["body/injectables/ContactEffects.html",[3,0.143,4,0.125,8,0.125,18,1.272,23,0.506,24,1.171,34,0.903,37,1.308,39,0.94,40,0.016,41,0.732,42,0.456,43,0.866,50,1.814,51,1.542,78,2.286,139,0.393,140,0.32,149,0.143,150,0.341,155,1.616,204,0.008,205,0.011,206,0.008,212,2.645,235,1.48,236,2.313,237,2.18,336,1.546,387,2.063,409,5.033,464,2,470,2.502,471,2.18,531,4.039,829,4.213,830,3.473,831,6.141,832,6.141,833,5.315,834,6.141,835,3.117,836,4.771,837,4.012,838,5.797,839,5.72,840,5.422,841,4.213,842,5.422,843,6.577,844,5.422,845,4.771,846,4.771,847,4.012,848,5.422,849,5.11,850,5.422,851,5.422,852,5.11,853,5.422,854,3.791,855,4.012,856,5.422,857,4.771,858,5.422,859,5.422,860,5.422,861,5.422,862,4.012,863,5.422,864,5.422,865,5.422,866,5.422,867,4.012,868,3.117,869,3.473,870,3.473,871,3.117,872,4.012]],["title/components/ContactListComponent.html",[0,0.414,174,0.978]],["body/components/ContactListComponent.html",[0,0.551,1,0.51,2,0.968,3,0.072,4,0.063,5,0.652,6,0.625,7,0.625,8,0.063,12,0.892,13,1.268,14,0.531,15,2.278,16,2.249,17,0.728,18,1.275,19,1.009,21,1.454,22,1.967,23,0.253,24,0.699,31,0.699,32,1.516,34,0.451,35,1.09,36,2.525,37,1.399,39,1.094,40,0.016,41,1.093,42,0.843,43,1.007,45,1.293,46,1.867,50,1.121,51,1.2,54,1.426,55,1.347,57,2.028,58,2.959,60,1.156,64,1.987,68,1.247,71,1.426,72,1.426,73,1.156,75,1.559,76,2.129,77,1.426,79,1.426,80,1.758,81,2.3,83,1.984,84,2.535,87,1.559,88,1.34,89,1.559,90,1.559,92,1.559,94,1.559,96,1.559,98,1.559,100,1.559,102,1.559,104,1.559,106,1.559,108,1.559,110,1.559,112,1.559,113,1.426,114,1.559,139,0.383,140,0.16,141,0.6,142,1.737,143,1.232,146,0.979,149,0.072,150,0.171,151,1.559,152,1.559,155,0.808,157,0.625,158,1.268,159,1.009,160,0.625,161,1.396,162,0.625,163,0.625,164,0.51,165,0.625,166,0.51,167,0.531,168,0.6,169,0.625,170,0.531,171,0.625,172,0.857,173,1.268,174,1.186,175,1.009,176,0.51,177,0.625,178,0.531,179,0.625,180,0.531,181,0.6,182,1.009,183,0.531,184,0.625,185,0.51,186,0.625,187,0.531,188,1.942,189,0.531,190,1.05,191,0.51,192,0.531,193,0.625,194,0.531,195,0.625,196,0.531,197,0.625,198,0.531,199,0.808,200,0.51,201,1.34,202,0.625,203,0.625,204,0.004,205,0.006,206,0.004,212,1.984,219,1.797,220,1.865,235,0.74,236,1.156,237,1.09,238,1.426,245,2.3,252,1.364,274,1.232,275,1.32,306,1.096,317,1.664,327,2.689,333,1.426,336,1.567,345,1.032,349,0.887,353,1.156,356,0.887,359,1.232,361,0.773,410,1.758,411,1.426,445,1.737,448,1.501,470,1.649,474,3.751,520,3.097,536,2.801,565,1.567,616,3.625,630,2.514,648,4.038,650,1.32,654,1.32,656,2.091,660,5.724,665,5.724,669,1.156,675,2.95,685,1.737,696,1.09,701,2.514,733,2.3,735,2.3,753,1.032,803,1.426,806,1.232,807,2.497,808,1.559,811,1.559,816,1.559,818,1.559,822,1.559,873,1.737,874,2.496,875,4.067,876,3.16,877,2.891,878,4.067,879,4.067,880,4.067,881,3.16,882,3.236,883,3.236,884,4.067,885,5.471,886,6.613,887,2.676,888,4.067,889,3.52,890,4.067,891,4.067,892,4.067,893,4.067,894,4.067,895,4.067,896,4.067,897,4.067,898,4.067,899,3.976,900,4.067,901,4.067,902,4.067,903,3.16,904,2.514,905,4.665,906,3.236,907,3.236,908,4.665,909,3.625,910,3.638,911,3.236,912,2.006,913,3.236,914,3.236,915,2.801,916,3.236,917,5.118,918,2.006,919,3.236,920,2.006,921,3.236,922,3.236,923,2.801,924,3.638,925,3.236,926,2.514,927,3.236,928,3.236,929,3.236,930,3.236,931,4.665,932,3.236,933,2.006,934,3.07,935,3.236,936,6.613,937,3.236,938,2.006,939,3.236,940,3.236,941,3.236,942,2.006,943,2.006,944,2.006,945,5.988,946,2.006,947,2.006,948,2.006,949,2.006,950,2.006,951,3.316,952,2.006,953,3.316,954,2.006,955,2.006,956,2.006,957,2.006,958,2.006,959,2.006,960,2.006,961,2.006,962,2.006,963,2.006,964,3.316,965,2.006,966,2.006,967,1.232,968,2.865,969,1.32,970,1.232,971,1.559,972,1.32,973,1.559,974,2.514,975,1.156,976,2.006,977,1.737,978,2.006,979,2.006,980,2.006,981,2.006,982,2.006,983,2.006,984,2.006,985,2.006,986,3.236,987,2.006,988,1.559,989,2.006,990,2.006,991,2.006,992,1.559,993,2.514,994,2.006,995,2.006,996,2.006,997,1.737,998,2.006,999,2.006,1000,2.006,1001,2.006,1002,2.006,1003,2.006,1004,3.236,1005,2.006,1006,2.006,1007,1.737,1008,2.006,1009,2.006,1010,2.006,1011,2.006,1012,2.006,1013,2.006,1014,3.236,1015,2.006,1016,1.737,1017,2.006,1018,2.006,1019,2.006,1020,2.006,1021,4.067,1022,2.006,1023,2.006,1024,2.006,1025,2.006,1026,1.426,1027,2.006,1028,2.006,1029,2.006,1030,2.006,1031,2.006,1032,2.006,1033,1.559,1034,1.559,1035,1.559,1036,1.559,1037,1.232,1038,2.006,1039,2.006]],["title/injectables/ContactMetricService.html",[464,1.418,659,2.734]],["body/injectables/ContactMetricService.html",[3,0.2,4,0.175,8,0.175,23,0.706,31,1.448,34,1.615,37,1.277,39,1.313,40,0.016,41,1.022,42,0.637,43,1.209,45,1.209,88,1.609,139,0.304,140,0.446,149,0.2,150,0.476,204,0.011,205,0.013,206,0.011,313,3.439,464,2.474,466,3.685,470,1.979,471,3.044,565,2.932,659,4.768,1040,6.215,1041,4.848,1042,6.707,1043,5.601,1044,5.601,1045,6.707,1046,5.601,1047,4.848,1048,5.601,1049,5.601,1050,5.601,1051,5.601,1052,5.601]],["title/modules/ContactRoutingModule.html",[280,1.418,1053,2.53]],["body/modules/ContactRoutingModule.html",[0,0.772,1,1.702,3,0.199,4,0.174,8,0.174,10,3.967,17,1.255,18,1.119,40,0.016,139,0.404,140,0.445,149,0.199,150,0.475,174,1.823,204,0.011,205,0.013,206,0.011,282,1.669,294,2.248,295,2.468,303,3.857,304,3.896,305,2.722,306,1.89,307,4.717,310,4.83,311,2.722,874,2.722,1053,4.404,1054,5.58,1055,3.426,1056,4.83,1057,4.83]],["title/interfaces/ContactState.html",[435,1.15,439,2.53]],["body/interfaces/ContactState.html",[3,0.165,4,0.144,8,0.144,17,1.04,18,0.773,23,0.583,24,1.285,40,0.016,42,0.749,57,2.016,78,2.932,139,0.378,141,1.383,149,0.257,204,0.009,205,0.012,206,0.009,306,2.437,410,4.125,435,1.383,437,2.144,439,3.917,448,2.144,461,3.787,470,2.648,854,4.319,869,4.001,870,4.001,968,2.838,969,3.041,970,2.838,1058,3.591,1059,4.625,1060,5.116,1061,5.326,1062,5.326,1063,4.231,1064,4.231,1065,3.591,1066,3.591,1067,4.625,1068,4.001,1069,3.285,1070,3.591,1071,3.285,1072,4.001,1073,4.27,1074,4.001,1075,4.001,1076,4.231,1077,4.001,1078,4.001,1079,4.001,1080,4.001,1081,5.116,1082,4.001,1083,2.664,1084,4.001,1085,4.001,1086,4.001,1087,3.591,1088,3.285,1089,4.001]],["title/modules/ContactsModule.html",[280,1.418,1090,2.734]],["body/modules/ContactsModule.html",[1,1.956,3,0.177,4,0.155,8,0.155,10,3.515,40,0.016,139,0.422,140,0.394,143,3.037,149,0.177,150,0.421,172,1.985,174,1.906,204,0.01,205,0.012,206,0.01,282,1.479,283,2.503,288,3.854,289,2.746,290,2.185,291,2.185,293,2.882,294,2.503,295,2.292,298,3.254,386,3.254,387,2.543,654,3.254,975,2.85,1053,4.932,1055,3.037,1056,4.28,1057,4.28,1090,5.696,1091,4.28,1092,4.28,1093,4.28,1094,4.932,1095,4.945,1096,4.828,1097,4.945,1098,4.945,1099,4.945,1100,4.945,1101,4.945,1102,4.945]],["title/modules/CoreModule.html",[280,1.418,368,2.53]],["body/modules/CoreModule.html",[3,0.192,4,0.168,8,0.168,40,0.016,139,0.399,140,0.427,149,0.192,150,0.456,185,2.031,204,0.011,205,0.013,206,0.011,282,1.605,283,2.632,289,2.888,290,2.37,291,2.37,293,3.031,294,2.632,295,2.41,311,3.187,368,5.209,644,4.012,645,3.294,1103,4.643,1104,4.643,1105,4.643,1106,4.643,1107,5.255,1108,5.364,1109,5.364,1110,5.364]],["title/components/DashboardComponent.html",[0,0.414,176,0.978]],["body/components/DashboardComponent.html",[0,0.437,1,0.508,2,0.966,3,0.071,4,0.062,5,0.65,6,0.623,7,0.623,8,0.062,12,0.89,13,1.265,14,0.53,15,2.276,16,2.248,17,0.726,18,1.228,19,1.006,21,1.265,23,0.252,24,0.697,31,0.697,32,1.513,34,0.45,36,2.423,37,1.412,39,0.756,40,0.016,41,0.932,42,0.843,43,0.697,45,0.697,46,1.265,50,1.822,51,1.596,55,1.048,57,1.851,58,1.028,60,1.86,65,2.304,88,2.04,91,2.37,93,1.087,95,1.659,139,0.325,140,0.159,141,0.598,146,0.975,149,0.071,150,0.17,155,0.806,157,0.623,158,1.006,159,1.006,160,0.623,161,1.634,162,0.623,163,0.623,164,0.508,165,0.623,166,0.508,167,0.53,168,0.598,169,0.623,170,0.53,171,0.623,172,0.53,173,1.265,174,0.508,175,1.006,176,1.184,177,0.623,178,0.53,179,0.623,180,0.53,181,0.598,182,1.006,183,0.53,184,0.623,185,0.508,186,0.623,187,0.53,188,0.598,189,0.53,190,0.726,191,0.508,192,0.53,193,0.623,194,0.53,195,0.623,196,0.53,197,0.623,198,0.53,199,0.397,200,0.508,201,0.574,202,0.623,203,0.623,204,0.004,205,0.006,206,0.004,212,2.272,233,1.316,235,0.738,238,1.421,241,1.982,252,1.963,300,1.554,301,1.554,315,1.659,336,0.77,345,2.627,347,2.832,349,2.643,350,3.153,351,2.015,356,0.884,358,3.362,361,2.546,448,0.928,474,4.107,520,3.223,565,1.794,612,1.86,614,1.087,626,1.86,629,2.205,668,2.67,701,3.97,743,1.982,744,2.492,745,1.228,746,2.205,747,3.075,748,1.228,752,3.936,753,1.659,756,1.316,757,1.316,759,1.153,760,1.421,761,2.294,762,1.554,763,1.554,764,2.294,765,2.294,766,1.421,773,1.574,887,1.316,951,2.884,1037,1.982,1111,1.731,1112,3.512,1113,4.058,1114,3.227,1115,4.058,1116,4.058,1117,4.058,1118,4.058,1119,4.058,1120,4.058,1121,4.657,1122,4.058,1123,4.058,1124,4.058,1125,4.058,1126,4.058,1127,4.058,1128,4.058,1129,4.058,1130,4.058,1131,4.058,1132,4.058,1133,4.058,1134,4.058,1135,3.227,1136,2,1137,3.31,1138,3.227,1139,3.227,1140,2,1141,3.227,1142,2,1143,2,1144,4.657,1145,3.227,1146,3.227,1147,4.058,1148,3.97,1149,4.657,1150,3.227,1151,2,1152,2,1153,2,1154,5.109,1155,3.227,1156,2,1157,3.227,1158,3.227,1159,3.227,1160,3.227,1161,3.227,1162,3.227,1163,3.227,1164,3.227,1165,3.227,1166,3.227,1167,3.227,1168,3.227,1169,3.227,1170,3.227,1171,3.227,1172,2,1173,2,1174,2,1175,2,1176,2,1177,2,1178,2,1179,2,1180,2,1181,2,1182,4.058,1183,2,1184,2,1185,2,1186,4.058,1187,3.227,1188,2,1189,4.657,1190,2,1191,2,1192,2,1193,1.731,1194,3.227,1195,3.227,1196,2.793,1197,2,1198,2,1199,2,1200,5.981,1201,2,1202,4.058,1203,2,1204,3.227,1205,2,1206,3.227,1207,2,1208,2,1209,2,1210,2,1211,2,1212,3.227,1213,2,1214,2,1215,2,1216,2,1217,2,1218,2,1219,2,1220,2,1221,2,1222,3.227,1223,2.793,1224,3.227,1225,4.657,1226,4.657,1227,3.227,1228,2,1229,2,1230,4.058,1231,2,1232,2,1233,2.205,1234,3.31,1235,2.507,1236,2.294,1237,3.632,1238,2,1239,2.294,1240,2.507,1241,1.554,1242,1.554,1243,2,1244,2.339,1245,2,1246,1.554,1247,1.421,1248,1.554,1249,1.554,1250,2,1251,1.554,1252,2,1253,4.058,1254,2,1255,1.228,1256,1.228,1257,1.554,1258,2,1259,2.491,1260,2,1261,2.124,1262,1.554,1263,1.554,1264,1.554,1265,1.982,1266,1.731,1267,1.554,1268,2,1269,2,1270,3.227,1271,2.507,1272,2,1273,1.731,1274,1.731,1275,3.227,1276,3.227,1277,3.227,1278,3.227,1279,1.731,1280,2,1281,1.731,1282,1.731,1283,2,1284,2,1285,2,1286,1.731,1287,2]],["title/interfaces/Day.html",[435,1.15,651,2.734]],["body/interfaces/Day.html",[3,0.213,4,0.186,8,0.186,23,0.75,24,1.501,40,0.015,41,1.385,42,0.79,55,1.762,76,4.995,149,0.213,204,0.012,205,0.014,206,0.012,435,1.781,437,2.761,651,4.942,1288,5.151]],["title/pipes/EnumUserDisplayTranslatorPipe.html",[767,1.977,1289,2.53]],["body/pipes/EnumUserDisplayTranslatorPipe.html",[3,0.168,4,0.147,8,0.147,12,1.296,14,1.245,18,0.786,29,2.293,30,2.293,31,1.015,37,0.895,39,1.102,40,0.016,41,1.211,42,0.534,43,1.015,45,1.015,51,1.102,55,1.665,58,2.417,63,3.652,68,2.557,71,3.341,72,3.341,73,2.709,139,0.38,140,0.375,145,2.709,146,2.293,149,0.168,150,0.4,199,0.934,204,0.009,205,0.012,206,0.009,230,2.709,231,2.886,272,2.554,273,2.554,470,2.774,565,2.557,699,3.093,700,2.886,724,3.093,725,3.093,726,3.093,728,3.341,729,3.341,730,3.341,767,3.094,769,3.093,770,4.675,773,2.293,774,4.277,775,6.26,776,4.675,802,4.277,803,3.341,805,5.208,806,4.075,807,4.793,808,3.652,809,4.069,811,3.652,813,4.069,816,3.652,817,5.157,818,3.652,820,5.157,822,3.652,823,4.069,825,3.652,827,4.069,934,3.959,1289,3.959,1290,3.652,1291,6.017,1292,4.701,1293,4.701,1294,5.208]],["title/components/FormComponent.html",[0,0.414,178,1.018]],["body/components/FormComponent.html",[0,0.431,1,0.498,2,0.95,3,0.07,4,0.061,5,0.637,6,0.611,7,0.611,8,0.061,12,0.876,13,1.248,14,0.519,15,2.269,16,2.24,17,0.9,18,0.531,19,0.99,21,0.99,22,2.894,23,0.247,24,0.686,31,0.686,32,1.495,33,2.652,34,0.9,37,1.251,39,0.744,40,0.016,41,0.923,42,0.675,43,0.686,45,0.994,46,1.434,49,2.64,50,1.394,51,1.185,55,0.9,57,1.075,59,1.13,69,1.13,76,2.634,80,1.065,85,1.13,88,0.563,91,0.909,139,0.275,140,0.156,147,1.13,148,1.13,149,0.07,150,0.167,154,4.429,157,0.611,158,0.99,159,1.248,160,0.611,161,1.513,162,0.611,163,0.611,164,0.498,165,0.611,166,0.498,167,0.519,168,0.586,169,0.611,170,0.519,171,0.611,172,0.519,173,1.248,174,0.498,175,0.99,176,0.498,177,0.611,178,1.219,179,0.611,180,0.519,181,0.586,182,0.99,183,0.519,184,0.611,185,0.498,186,0.611,187,0.519,188,0.586,189,0.519,190,0.714,191,0.498,192,0.519,193,0.611,194,0.519,195,0.611,196,0.519,197,0.611,198,0.519,199,0.389,200,0.498,201,0.563,202,0.611,203,0.611,204,0.004,205,0.006,206,0.004,246,1.523,247,1.523,252,1.339,315,1.632,347,1.688,349,2.034,351,2.324,356,1.403,360,1.523,361,1.542,461,2.058,470,1.122,480,2.748,565,1.773,612,1.83,614,3.333,615,2.257,623,2.634,626,3.12,627,2.089,628,1.696,629,1.725,631,1.523,632,1.696,744,1.952,747,2.058,748,1.203,752,2.089,759,1.13,760,1.393,761,1.393,764,1.393,773,0.956,806,1.203,807,3.869,887,1.29,953,2.257,967,1.203,974,2.467,977,1.696,1007,1.696,1148,2.467,1233,3.226,1244,3.632,1246,2.467,1247,1.393,1259,1.203,1261,1.29,1265,1.203,1267,1.523,1271,1.523,1281,1.696,1282,2.748,1295,1.696,1296,4.002,1297,3.175,1298,4.002,1299,4.002,1300,3.175,1301,3.175,1302,4.602,1303,4.602,1304,4.002,1305,4.002,1306,5.056,1307,1.96,1308,1.96,1309,1.96,1310,3.175,1311,1.96,1312,1.96,1313,3.175,1314,1.96,1315,3.175,1316,1.96,1317,1.96,1318,1.96,1319,5.056,1320,4.002,1321,1.96,1322,1.96,1323,1.96,1324,1.96,1325,1.96,1326,1.96,1327,1.96,1328,6.571,1329,1.96,1330,1.96,1331,6.301,1332,6.301,1333,6.301,1334,6.301,1335,5.579,1336,1.96,1337,1.96,1338,1.96,1339,1.96,1340,1.96,1341,3.175,1342,1.96,1343,1.96,1344,1.96,1345,1.96,1346,1.96,1347,1.96,1348,3.175,1349,3.175,1350,1.96,1351,1.96,1352,1.96,1353,1.96,1354,1.96,1355,1.96,1356,1.96,1357,1.96,1358,1.96,1359,7.697,1360,7.697,1361,8.022,1362,5.413,1363,3.175,1364,2.748,1365,3.175,1366,4.602,1367,1.96,1368,1.696,1369,4.002,1370,1.96,1371,1.523,1372,3.175,1373,1.96,1374,1.696,1375,3.983,1376,3.983,1377,3.929,1378,3.11,1379,2.748,1380,3.175,1381,1.96,1382,1.96,1383,1.96,1384,1.696,1385,1.96,1386,1.696,1387,1.96,1388,1.96,1389,1.393,1390,1.96,1391,1.96,1392,1.96]],["title/interfaces/FormSetupModel.html",[49,1.876,435,1.15]],["body/interfaces/FormSetupModel.html",[3,0.187,4,0.163,8,0.163,23,0.659,24,1.388,40,0.016,42,0.908,43,1.679,49,3.137,50,2.004,52,3.737,53,4.19,55,1.763,56,4.19,61,4.19,139,0.284,149,0.187,204,0.01,205,0.013,206,0.01,219,3.212,235,1.927,248,5.648,435,1.563,437,2.424,461,3.582,565,2.928,1393,4.523,1394,4.523,1395,7.269,1396,7.269]],["title/components/GeneralCardComponent.html",[0,0.414,180,1.018]],["body/components/GeneralCardComponent.html",[0,0.689,1,1.108,2,1.714,3,0.156,4,0.136,5,1.416,6,1.358,7,1.358,8,0.136,12,1.58,13,1.995,14,1.154,15,2.501,16,2.491,17,1.289,18,0.958,19,1.786,21,1.786,23,0.549,31,1.237,32,2.208,34,1.44,37,1.091,40,0.016,41,1.168,45,0.941,46,1.786,88,1.952,139,0.311,140,0.347,149,0.156,150,0.371,157,1.358,158,1.786,159,1.786,160,1.358,161,2.034,162,1.358,163,1.358,164,1.108,165,1.358,166,1.108,167,1.154,168,1.304,169,1.358,170,1.154,171,1.358,172,1.154,173,1.995,174,1.108,175,1.786,176,1.108,177,1.358,178,1.154,179,1.358,180,1.8,181,2.169,182,1.786,183,1.154,184,1.358,185,1.108,186,1.358,187,1.154,188,1.304,189,1.154,190,1.289,191,1.108,192,1.154,193,1.358,194,1.154,195,1.358,196,1.154,197,1.358,198,1.154,199,0.866,200,1.108,201,1.251,202,1.358,203,1.358,204,0.009,205,0.011,206,0.009,346,2.368,347,1.837,349,1.926,351,1.607,361,1.679,643,4.972,1233,2.368,1234,4.549,1235,3.385,1236,3.097,1237,3.097,1239,3.097,1240,3.385,1241,3.385,1242,3.385,1248,3.385,1249,3.385,1255,2.675,1256,2.675,1257,3.385,1397,5.539,1398,3.385,1399,5.539,1400,4.357,1401,4.357,1402,3.771,1403,3.097,1404,4.357]],["title/components/HeaderComponent.html",[0,0.414,183,1.018]],["body/components/HeaderComponent.html",[0,0.613,1,0.884,2,1.469,3,0.124,4,0.109,5,1.129,6,1.083,7,1.083,8,0.109,12,1.354,13,1.775,14,0.92,15,2.449,16,2.434,17,1.105,18,0.821,19,1.53,21,1.53,22,2.07,23,0.438,31,1.06,32,2.01,34,1.281,37,1.326,40,0.016,41,1.039,42,0.647,45,1.229,46,1.928,88,0.998,99,2.471,139,0.267,140,0.277,149,0.124,150,0.296,157,1.083,158,1.53,159,1.53,160,1.083,161,2.026,162,1.083,163,1.083,164,0.884,165,1.083,166,0.884,167,0.92,168,1.04,169,1.083,170,0.92,171,1.083,172,0.92,173,1.775,174,0.884,175,1.53,176,0.884,177,1.083,178,0.92,179,1.083,180,0.92,181,1.04,182,1.53,183,1.638,184,1.083,185,0.884,186,1.083,187,0.92,188,1.04,189,0.92,190,1.105,191,0.884,192,0.92,193,1.083,194,0.92,195,1.083,196,0.92,197,1.083,198,0.92,199,0.69,200,0.884,201,0.998,202,1.083,203,1.083,204,0.007,205,0.01,206,0.007,252,1.466,317,3.181,318,5.524,322,2.471,330,4.047,345,1.787,346,2.668,347,2.856,348,2.701,351,1.282,353,2.003,354,2.287,356,2.17,359,3.015,612,2.83,614,3.783,615,3.49,616,4.423,623,4.294,626,2.83,627,3.746,629,1.889,633,3.815,743,3.015,744,2.395,746,1.889,747,2.927,749,2.287,753,2.524,756,2.287,757,2.287,766,2.471,773,1.696,887,3.746,1037,2.134,1233,2.668,1244,4.224,1246,4.423,1247,4.047,1261,2.287,1262,2.701,1265,2.134,1266,3.008,1271,3.815,1274,3.008,1371,2.701,1378,2.701,1389,2.471,1405,3.008,1406,5.693,1407,5.693,1408,5.693,1409,5.693,1410,4.927,1411,5.693,1412,6.186,1413,5.693,1414,4.91,1415,3.476,1416,3.476,1417,3.476,1418,3.476,1419,3.476,1420,3.008,1421,3.476,1422,3.476,1423,5.693,1424,3.476,1425,3.476,1426,3.476,1427,3.008,1428,3.476,1429,3.476,1430,3.476,1431,3.008,1432,3.476,1433,3.476,1434,3.476,1435,3.476,1436,3.476,1437,3.476,1438,2.701,1439,3.008,1440,3.476,1441,3.476,1442,2.701,1443,3.476,1444,3.476,1445,3.476,1446,3.476,1447,3.476]],["title/modules/LayoutModule.html",[280,1.418,1107,2.53]],["body/modules/LayoutModule.html",[3,0.189,4,0.165,8,0.165,40,0.016,139,0.397,140,0.421,149,0.189,150,0.45,183,2.111,192,2.111,204,0.01,205,0.013,206,0.01,282,1.582,283,2.61,288,3.919,289,2.863,290,2.337,291,2.337,293,3.005,294,2.61,295,2.39,298,3.48,311,3.16,1107,5.246,1448,4.578,1449,4.578,1450,5.289,1451,4.578,1452,5.289,1453,5.289,1454,5.289]],["title/components/LoginComponent.html",[0,0.414,185,0.978]],["body/components/LoginComponent.html",[0,0.648,1,0.981,2,1.58,3,0.138,4,0.121,5,1.254,6,1.203,7,1.203,8,0.121,12,1.456,13,1.876,14,1.022,15,2.474,16,2.462,17,1.188,18,0.883,19,1.646,21,1.646,23,0.882,31,1.14,32,2.103,34,0.868,37,1.146,39,0.905,40,0.016,41,1.181,42,0.439,43,0.833,45,1.14,46,1.646,65,1.627,88,1.859,139,0.287,140,0.308,149,0.138,150,0.328,155,1.555,157,1.203,158,1.646,159,1.646,160,1.203,161,1.936,162,1.203,163,1.203,164,0.981,165,1.203,166,0.981,167,1.022,168,1.155,169,1.203,170,1.022,171,1.203,172,1.022,173,1.876,174,0.981,175,1.646,176,0.981,177,1.203,178,1.022,179,1.203,180,1.022,181,1.155,182,1.646,183,1.022,184,1.203,185,1.646,186,1.203,187,1.022,188,1.155,189,1.022,190,1.188,191,0.981,192,1.022,193,1.203,194,1.022,195,1.203,196,1.022,197,1.203,198,1.022,199,0.767,200,0.981,201,1.109,202,1.203,203,1.203,204,0.008,205,0.01,206,0.008,321,4.034,345,1.984,346,3.517,347,2.227,349,2.334,351,2.22,353,2.225,354,2.54,358,2.54,359,3.696,425,6.058,454,3.341,465,3.341,609,3.341,614,2.87,629,3.683,887,3.961,1239,2.744,1244,3.73,1247,2.744,1259,3.696,1286,3.341,1371,2.999,1374,3.341,1384,3.341,1386,3.341,1431,3.341,1455,3.341,1456,6.02,1457,6.02,1458,5.21,1459,3.86,1460,3.86,1461,3.86,1462,3.86,1463,3.86,1464,5.602,1465,3.341,1466,3.86,1467,5.281,1468,5.281,1469,6.778,1470,3.86,1471,5.21,1472,3.86,1473,6.02,1474,3.86,1475,3.86,1476,3.341,1477,3.86,1478,3.86,1479,5.281,1480,3.86,1481,3.86,1482,3.86,1483,3.341,1484,3.86]],["title/modules/MaterialModule.html",[280,1.418,639,2.09]],["body/modules/MaterialModule.html",[3,0.143,4,0.125,8,0.125,40,0.016,139,0.438,140,0.318,149,0.143,150,0.34,204,0.008,205,0.011,206,0.008,282,1.965,283,2.178,289,2.39,290,1.766,291,1.766,293,1.854,294,2.178,295,1.995,306,1.832,311,2.638,361,1.54,415,3.459,634,4.051,639,4.307,696,2.172,874,1.95,1251,3.105,1377,3.105,1485,3.459,1486,3.459,1487,3.459,1488,4.297,1489,3.105,1490,5.407,1491,6.129,1492,4.68,1493,3.459,1494,4.68,1495,3.459,1496,4.68,1497,3.459,1498,4.68,1499,3.459,1500,3.459,1501,4.68,1502,3.996,1503,4.68,1504,3.996,1505,4.68,1506,3.996,1507,4.68,1508,5.407,1509,4.68,1510,3.459,1511,4.68,1512,3.996,1513,4.68,1514,4.68,1515,3.996,1516,4.68,1517,3.996,1518,4.68,1519,4.68,1520,5.407,1521,3.996,1522,4.68,1523,3.996,1524,4.68,1525,3.996,1526,5.305,1527,3.996,1528,4.68,1529,3.459,1530,4.68,1531,3.996,1532,4.68,1533,3.996,1534,4.68,1535,3.996,1536,4.68,1537,3.996,1538,4.68,1539,4.68,1540,3.996,1541,4.68,1542,3.996,1543,4.68,1544,3.996,1545,4.68,1546,3.996,1547,4.68,1548,4.68,1549,3.996,1550,3.459,1551,3.459,1552,4.68,1553,3.459,1554,4.762,1555,3.459,1556,3.459,1557,3.996,1558,3.996]],["title/injectables/MetricsService.html",[464,1.418,1137,2.734]],["body/injectables/MetricsService.html",[3,0.139,4,0.121,8,0.121,18,1.309,23,0.49,31,1.145,34,1.359,37,1.294,39,1.521,40,0.016,41,1.184,42,0.772,43,1.401,45,1.401,51,1.862,55,1.193,58,1.997,60,2.239,65,2.547,88,2.286,91,2.46,93,2.882,95,2.727,97,3.77,99,2.761,101,2.761,103,3.018,105,3.018,107,2.556,109,3.018,111,2.761,113,2.761,139,0.288,140,0.309,145,4.137,146,1.895,149,0.139,150,0.33,204,0.008,205,0.01,206,0.008,212,2.946,306,2.046,313,2.385,464,1.956,466,2.556,470,2.293,471,2.111,565,2.044,668,2.556,1137,3.77,1196,6.749,1223,4.591,1559,3.362,1560,5.304,1561,5.304,1562,5.304,1563,5.304,1564,3.884,1565,5.304,1566,3.884,1567,5.304,1568,3.884,1569,5.304,1570,3.884,1571,5.304,1572,3.884,1573,3.884,1574,5.304,1575,5.227,1576,5.304,1577,5.304,1578,5.304,1579,3.884,1580,3.884,1581,3.884,1582,3.884,1583,3.884,1584,3.884,1585,3.884,1586,3.884,1587,3.884,1588,3.884,1589,3.884,1590,3.884]],["title/components/ModalCardComponent.html",[0,0.414,187,1.018]],["body/components/ModalCardComponent.html",[0,0.684,1,1.089,2,1.695,3,0.153,4,0.134,5,1.392,6,1.335,7,1.335,8,0.134,12,1.562,13,1.978,14,1.134,15,2.497,16,2.487,17,1.274,18,0.947,19,1.766,21,1.766,23,0.54,31,1.223,32,2.194,34,1.428,37,1.079,40,0.016,41,1.158,45,0.925,46,1.766,88,1.939,139,0.308,140,0.341,149,0.153,150,0.364,157,1.335,158,1.766,159,1.766,160,1.335,161,2.02,162,1.335,163,1.335,164,1.089,165,1.335,166,1.089,167,1.134,168,1.282,169,1.335,170,1.134,171,1.335,172,1.134,173,1.978,174,1.089,175,1.766,176,1.089,177,1.335,178,1.134,179,1.335,180,1.134,181,1.282,182,1.766,183,1.134,184,1.335,185,1.089,186,1.335,187,1.788,188,2.158,189,1.134,190,1.274,191,1.089,192,1.134,193,1.335,194,1.134,195,1.335,196,1.134,197,1.335,198,1.134,199,0.851,200,1.089,201,1.23,202,1.335,203,1.335,204,0.008,205,0.011,206,0.008,252,1.806,345,2.202,346,2.328,347,1.806,349,1.893,351,1.58,356,1.893,361,1.65,629,2.328,641,4.931,746,2.328,747,2.202,753,2.202,1037,2.63,1233,2.328,1234,4.8,1235,3.328,1236,3.045,1237,3.045,1239,3.045,1240,3.328,1241,3.328,1242,3.328,1248,3.328,1249,3.328,1255,2.63,1256,2.63,1257,3.328,1259,2.63,1279,3.708,1398,3.328,1399,5.493,1402,3.708,1403,3.045,1591,5.493,1592,4.284,1593,4.284]],["title/interfaces/Note.html",[190,0.865,435,1.15]],["body/interfaces/Note.html",[3,0.199,4,0.174,8,0.174,18,1.197,23,0.701,24,1.442,40,0.016,42,0.877,55,1.819,68,2.861,149,0.199,190,1.502,204,0.011,205,0.013,206,0.011,230,4.279,241,4.559,243,5.277,435,1.663,437,2.579,650,4.885,652,5.088,1594,4.812,1595,4.812]],["title/components/NoteDetailComponent.html",[0,0.414,189,1.018]],["body/components/NoteDetailComponent.html",[0,0.514,1,0.653,2,1.175,3,0.092,4,0.08,5,0.834,6,0.8,7,0.8,8,0.08,12,1.083,13,1.487,14,0.68,15,2.363,16,2.341,17,0.884,18,0.657,19,1.224,21,1.487,23,0.324,24,0.848,29,2.607,30,2.607,31,0.848,32,1.736,33,2.264,34,0.884,36,2.665,37,1.321,39,0.921,40,0.016,41,1.411,42,0.839,43,0.848,45,0.848,46,1.487,49,2.327,50,1.843,51,1.808,52,2.748,53,3.08,55,0.577,56,3.08,57,1.81,59,1.479,61,2.264,65,2.665,67,1.395,68,0.989,69,1.479,70,1.576,78,1.656,83,2.607,85,1.479,88,1.919,91,2.479,93,2.904,95,2.019,130,2.412,131,2.412,132,2.412,133,2.412,134,2.412,136,2.412,137,2.412,139,0.354,140,0.313,141,0.768,147,1.479,148,1.479,149,0.092,150,0.218,157,0.8,158,1.224,159,1.224,160,0.8,161,1.599,162,0.8,163,0.8,164,0.653,165,0.8,166,0.653,167,0.68,168,0.768,169,0.8,170,0.68,171,0.8,172,0.68,173,1.487,174,0.653,175,1.224,176,0.653,177,0.8,178,0.68,179,0.8,180,0.68,181,0.768,182,1.224,183,0.68,184,0.8,185,0.653,186,0.8,187,0.68,188,0.768,189,1.415,190,1.69,191,0.653,192,0.68,193,0.8,194,0.68,195,0.8,196,0.68,197,0.8,198,0.68,199,0.51,200,0.653,201,0.737,202,0.8,203,0.8,204,0.005,205,0.008,206,0.005,213,4.129,219,2.362,220,2.264,221,3.051,222,3.051,223,3.051,224,3.051,230,2.264,231,1.576,235,0.947,241,1.576,242,2.222,243,3.798,252,1.656,315,2.019,327,1.479,336,1.513,347,1.082,351,0.947,356,1.134,361,0.989,448,1.191,474,2.592,520,2.607,655,1.824,656,2.019,657,3.706,658,3.051,662,3.706,667,1.994,668,3.139,669,2.749,670,4.152,673,3.051,675,1.479,679,2.222,680,3.051,688,2.222,690,2.222,694,1.994,695,1.994,696,1.395,706,1.994,707,2.222,733,3.391,734,3.051,735,2.792,736,3.051,737,4.152,743,1.576,744,2.327,745,2.412,746,2.134,747,2.019,748,1.576,749,1.689,750,1.994,751,1.994,752,3.997,753,1.32,754,1.824,755,1.994,756,1.689,757,1.689,758,1.994,759,1.479,760,2.792,761,2.792,762,1.994,763,1.994,764,2.792,765,2.792,766,1.824,1596,6.089,1597,5.001,1598,4.77,1599,3.927,1600,2.567,1601,2.567,1602,2.222,1603,2.567,1604,2.567,1605,2.567,1606,2.567,1607,2.567,1608,2.567,1609,5.344,1610,3.927,1611,3.927]],["title/injectables/NoteEffects.html",[464,1.418,1612,2.734]],["body/injectables/NoteEffects.html",[3,0.138,4,0.121,8,0.121,23,0.488,24,1.143,34,0.872,37,1.292,39,0.908,40,0.016,41,0.707,42,0.44,43,0.837,50,1.788,51,1.519,83,2.583,139,0.397,140,0.309,149,0.138,150,0.33,155,1.561,190,1.746,204,0.008,205,0.01,206,0.008,235,1.429,236,2.233,237,2.105,336,1.493,387,1.992,409,4.981,464,1.953,470,2.58,471,2.105,531,3.981,835,3.01,836,4.686,838,5.754,839,5.673,841,4.114,845,4.686,846,4.686,849,5.037,852,5.444,854,4.039,857,4.686,868,3.01,871,3.01,1073,2.379,1612,3.763,1613,3.353,1614,6.031,1615,6.031,1616,5.22,1617,6.031,1618,3.874,1619,5.294,1620,5.294,1621,7.007,1622,5.294,1623,3.874,1624,5.294,1625,5.294,1626,5.294,1627,5.294,1628,3.874,1629,5.294,1630,5.294,1631,5.294,1632,5.294,1633,5.294,1634,3.874,1635,5.294,1636,5.294,1637,5.294,1638,5.294,1639,3.874,1640,3.874,1641,3.353,1642,3.874,1643,3.874]],["title/components/NoteListComponent.html",[0,0.414,191,0.978]],["body/components/NoteListComponent.html",[0,0.527,1,0.68,2,1.213,3,0.096,4,0.084,5,0.869,6,0.834,7,0.834,8,0.084,12,1.118,13,1.525,14,0.708,15,2.376,16,2.355,17,1.101,18,1.032,19,1.263,21,1.263,22,2.704,23,0.337,24,0.875,31,0.875,32,1.773,34,0.602,35,1.454,36,2.603,37,1.415,39,1.147,40,0.016,41,1.126,42,0.85,43,1.056,45,1.266,46,1.924,50,1.865,51,1.585,55,1.486,68,2.103,83,2.387,88,1.405,139,0.394,140,0.213,141,0.8,143,1.643,149,0.096,150,0.228,155,1.078,157,0.834,158,1.263,159,1.263,160,0.834,161,1.633,162,0.834,163,0.834,164,0.68,165,0.834,166,0.68,167,0.708,168,0.8,169,0.834,170,0.708,171,0.834,172,0.708,173,1.525,174,0.68,175,1.263,176,0.68,177,0.834,178,0.708,179,0.834,180,0.708,181,0.8,182,1.263,183,0.708,184,0.834,185,0.68,186,0.834,187,0.708,188,0.8,189,1.073,190,1.691,191,1.388,192,0.708,193,0.834,194,0.708,195,0.834,196,0.708,197,0.834,198,0.708,199,0.805,200,0.68,201,0.768,202,0.834,203,0.834,204,0.005,205,0.008,206,0.005,219,2.162,220,2.336,221,3.149,222,3.149,223,3.149,224,3.149,228,2.315,230,2.82,231,1.643,235,0.987,236,1.542,237,1.454,241,3.352,243,3.88,274,1.643,275,1.76,306,0.906,336,1.885,345,1.375,349,1.791,351,0.987,353,1.542,361,1.031,448,1.88,474,2.659,520,3.299,652,4.695,669,1.542,675,2.82,696,1.454,699,1.76,706,2.078,728,1.901,729,1.901,730,1.901,731,2.315,759,2.82,874,2.861,876,3.802,877,3.478,881,3.802,899,4.558,903,3.802,904,3.802,909,4.241,910,4.17,951,4.17,953,4.17,964,3.88,967,1.643,970,1.643,972,1.76,973,2.078,975,1.542,988,2.078,993,3.149,997,2.315,1026,1.901,1033,2.078,1034,2.078,1035,2.078,1036,2.078,1083,1.542,1597,1.901,1644,2.315,1645,4.893,1646,4.235,1647,4.235,1648,4.235,1649,4.053,1650,4.053,1651,4.893,1652,3.802,1653,4.235,1654,3.802,1655,4.893,1656,4.893,1657,3.508,1658,4.053,1659,5.459,1660,4.053,1661,4.053,1662,6.173,1663,2.675,1664,4.053,1665,2.675,1666,2.675,1667,2.675,1668,2.675,1669,2.675,1670,2.675,1671,2.675,1672,2.675,1673,2.675,1674,2.675,1675,2.675,1676,2.675,1677,2.675,1678,2.675,1679,2.675,1680,2.675,1681,2.675,1682,2.675,1683,2.675,1684,3.149,1685,2.078,1686,2.675,1687,2.675,1688,2.315,1689,2.675,1690,2.675,1691,2.315,1692,2.078,1693,2.315,1694,2.675,1695,2.675,1696,2.675]],["title/interfaces/NoteState.html",[435,1.15,440,2.53]],["body/interfaces/NoteState.html",[3,0.162,4,0.142,8,0.142,17,1.02,23,0.571,24,1.269,40,0.016,42,0.742,57,1.991,78,2.91,139,0.375,141,1.356,149,0.255,190,1.02,204,0.009,205,0.012,206,0.009,306,2.422,410,4.109,435,1.356,437,2.102,440,3.868,444,3.222,448,2.102,461,3.767,470,2.672,854,4.299,968,2.783,969,2.982,970,2.783,1059,4.567,1060,5.068,1061,5.302,1062,5.302,1063,4.178,1064,4.178,1069,3.222,1071,3.222,1073,4.238,1076,4.178,1081,5.363,1083,2.612,1087,4.567,1088,3.222,1641,3.923,1697,3.522,1698,4.532,1699,3.522,1700,3.522,1701,4.567,1702,3.923,1703,3.923,1704,3.923,1705,3.923,1706,3.923,1707,3.923,1708,3.923,1709,3.923,1710,3.923,1711,3.923,1712,3.923,1713,3.923,1714,3.923,1715,3.923]],["title/modules/NotesModule.html",[280,1.418,1716,2.734]],["body/modules/NotesModule.html",[3,0.177,4,0.155,8,0.155,40,0.016,139,0.428,140,0.396,141,1.487,149,0.177,150,0.423,164,1.87,189,1.987,191,1.87,204,0.01,205,0.012,206,0.01,208,3.532,282,1.487,283,2.511,288,3.859,289,2.754,290,2.196,291,2.196,293,2.891,294,2.511,295,2.299,298,3.27,385,3.532,386,3.27,387,2.555,644,3.827,645,3.051,975,2.864,1055,3.051,1096,3.861,1597,3.532,1612,3.532,1716,5.665,1717,4.301,1718,4.301,1719,4.301,1720,4.939,1721,4.969,1722,4.969,1723,4.969,1724,4.969,1725,4.969,1726,4.301,1727,4.301,1728,4.969,1729,4.969,1730,4.969,1731,4.969,1732,4.969,1733,4.969]],["title/modules/NotesRoutingModule.html",[280,1.418,1720,2.53]],["body/modules/NotesRoutingModule.html",[0,0.779,3,0.204,4,0.178,8,0.178,17,1.284,40,0.016,139,0.407,140,0.455,149,0.204,150,0.485,164,1.724,191,1.84,204,0.011,205,0.013,206,0.011,208,4.056,282,1.707,295,2.501,303,3.289,304,3.101,305,2.783,306,1.933,307,3.754,874,2.783,1055,3.504,1720,4.463,1726,4.939,1727,4.939,1734,5.706,1735,4.939,1736,6.782,1737,4.939,1738,4.939]],["title/pipes/RatingColorPipe.html",[767,1.977,1094,2.53]],["body/pipes/RatingColorPipe.html",[3,0.205,4,0.179,8,0.179,12,1.579,14,1.517,31,1.237,37,1.091,39,1.342,40,0.016,41,1.322,42,0.651,43,1.237,45,1.237,51,1.593,55,1.529,57,1.94,139,0.311,140,0.456,149,0.205,150,0.487,204,0.011,205,0.013,206,0.011,565,2.793,767,3.495,769,3.769,773,2.794,774,4.832,802,4.832,806,3.517,807,3.517,1094,4.473,1739,5.883,1740,4.957,1741,6.797,1742,5.727]],["title/modules/SharedModule.html",[280,1.418,288,1.977]],["body/modules/SharedModule.html",[3,0.145,4,0.127,8,0.127,40,0.016,139,0.429,140,0.323,141,1.213,149,0.145,150,0.345,170,2.033,178,2.033,196,2.033,204,0.008,205,0.011,206,0.008,234,3.151,252,1.71,275,2.668,282,1.976,283,2.2,288,4.141,289,2.413,290,1.792,291,1.792,293,2.533,294,2.2,295,2.014,303,3.147,305,1.978,306,1.374,311,2.664,385,2.882,386,2.668,387,2.085,634,4.143,639,4.143,644,3.353,645,2.49,656,2.085,768,5.053,934,2.668,967,2.49,1289,5.053,1488,4.394,1743,3.51,1744,3.51,1745,4.055,1746,3.51,1747,3.151,1748,4.055,1749,4.055,1750,4.055,1751,4.055,1752,4.727,1753,4.727,1754,4.055,1755,5.461,1756,4.055,1757,4.055,1758,3.51,1759,4.055,1760,4.055,1761,4.055,1762,4.055,1763,2.668,1764,3.151,1765,3.151,1766,3.151,1767,3.51,1768,3.51,1769,3.51,1770,3.51]],["title/components/SidenavComponent.html",[0,0.414,192,1.018]],["body/components/SidenavComponent.html",[0,0.566,1,0.767,2,1.327,3,0.108,4,0.094,5,0.98,6,0.941,7,0.941,8,0.094,12,1.223,13,1.639,14,0.799,15,2.411,16,2.394,17,1.54,18,1.079,19,1.382,21,0.941,23,0.38,24,0.957,31,0.957,32,1.882,34,0.679,35,1.64,36,2.443,37,1.175,39,0.707,40,0.016,41,1.057,42,0.598,43,0.651,45,0.957,46,1.639,50,0.832,51,0.707,65,1.272,83,2.163,88,1.664,91,1.4,139,0.336,140,0.353,141,0.903,149,0.108,150,0.257,155,1.216,157,0.941,158,1.382,159,1.382,160,0.941,161,1.847,162,0.941,163,0.941,164,0.767,165,0.941,166,0.767,167,0.799,168,0.903,169,0.941,170,0.799,171,0.941,172,0.799,173,1.639,174,0.767,175,1.382,176,0.767,177,0.941,178,0.799,179,0.941,180,0.799,181,0.903,182,1.382,183,0.799,184,0.941,185,0.767,186,0.941,187,0.799,188,0.903,189,0.799,190,1.452,191,0.767,192,1.534,193,0.941,194,0.799,195,0.941,196,0.799,197,0.941,198,0.799,199,1.226,200,0.767,201,1.51,202,0.941,203,0.941,204,0.006,205,0.009,206,0.006,212,2.826,252,1.272,315,2.28,317,3.519,318,2.344,327,1.739,333,2.145,337,2.612,345,2.28,346,3.625,347,2.603,348,2.344,349,2.728,350,2.344,351,2.461,353,3.34,354,2.918,355,2.344,356,2.323,358,2.918,359,3.228,360,2.344,361,1.708,524,3.838,612,2.556,614,3.355,623,1.985,626,2.556,627,1.985,629,3.355,633,2.344,744,2.826,745,1.853,746,2.41,747,3.318,749,2.918,753,1.551,773,1.472,874,3.254,926,3.445,1037,1.853,1112,3.838,1233,3.355,1244,3.845,1255,1.853,1256,1.853,1259,3.79,1263,4.084,1264,4.084,1265,1.853,1368,2.612,1378,3.445,1379,2.612,1389,2.145,1410,3.838,1420,2.612,1438,2.344,1442,2.344,1464,5.015,1465,3.838,1471,3.838,1483,2.612,1510,5.015,1529,2.612,1771,2.612,1772,6.844,1773,5.257,1774,4.434,1775,4.434,1776,3.017,1777,3.017,1778,3.017,1779,4.434,1780,3.017,1781,3.017,1782,3.838,1783,4.434,1784,4.434,1785,3.017,1786,3.017,1787,3.017,1788,3.017,1789,3.017,1790,3.017,1791,3.838,1792,3.017,1793,3.017,1794,3.017,1795,3.017,1796,3.017,1797,5.794,1798,2.612,1799,5.257,1800,4.434,1801,4.55,1802,5.257,1803,3.017,1804,3.017,1805,3.017,1806,3.017,1807,3.017,1808,4.434,1809,3.017,1810,3.017,1811,3.017,1812,3.017,1813,3.017,1814,3.017,1815,3.017,1816,3.017,1817,3.017,1818,3.017,1819,3.017,1820,3.017,1821,4.434,1822,3.017,1823,3.017,1824,3.017]],["title/components/TabComponent.html",[0,0.414,194,1.018]],["body/components/TabComponent.html",[0,0.648,1,0.98,2,1.578,3,0.138,4,0.12,5,1.252,6,1.202,7,1.202,8,0.12,12,1.455,13,1.875,14,1.021,15,2.474,16,2.462,17,1.187,18,0.882,19,1.645,21,1.645,23,0.486,31,1.139,32,2.102,34,1.353,37,1.232,40,0.016,41,1.097,42,0.6,45,0.832,46,1.645,50,1.455,51,1.237,55,1.187,67,2.095,88,1.728,91,2.79,139,0.327,140,0.42,149,0.138,150,0.328,157,1.202,158,1.645,159,1.645,160,1.202,161,1.935,162,1.202,163,1.202,164,0.98,165,1.202,166,0.98,167,1.021,168,1.153,169,1.202,170,1.021,171,1.202,172,1.021,173,1.875,174,0.98,175,1.645,176,0.98,177,1.202,178,1.021,179,1.202,180,1.021,181,1.153,182,1.645,183,1.021,184,1.202,185,0.98,186,1.202,187,1.021,188,1.153,189,1.021,190,1.187,191,0.98,192,1.021,193,1.202,194,1.713,195,1.202,196,1.021,197,1.202,198,1.021,199,0.766,200,0.98,201,1.107,202,1.202,203,1.202,204,0.008,205,0.01,206,0.008,346,2.867,347,2.728,349,1.703,351,1.422,355,2.995,361,1.485,565,2.033,612,3.041,614,2.867,626,3.467,630,2.995,743,2.367,744,1.88,748,2.367,773,1.88,874,1.88,1148,4.099,1233,3.963,1234,3.75,1236,2.74,1244,3.467,1251,4.099,1255,3.24,1256,2.367,1261,2.536,1263,2.995,1264,2.995,1265,2.367,1375,5.599,1376,5.599,1403,2.74,1438,2.995,1442,2.995,1825,3.336,1826,7.293,1827,6.016,1828,6.016,1829,6.016,1830,6.016,1831,5.276,1832,3.855,1833,3.855,1834,3.855,1835,3.855,1836,3.855,1837,3.855,1838,3.855,1839,3.855,1840,5.276,1841,3.855]],["title/modules/TabModule.html",[280,1.418,1488,2.216]],["body/modules/TabModule.html",[3,0.19,4,0.166,8,0.166,40,0.016,139,0.408,140,0.424,149,0.19,150,0.453,194,2.104,204,0.011,205,0.013,206,0.011,282,1.593,283,2.621,289,2.875,290,2.354,291,2.354,293,3.018,294,2.621,295,2.4,311,2.598,634,4.149,639,4.149,644,3.995,645,3.27,646,4.61,1488,4.58,1842,4.61,1843,4.61,1844,5.326,1845,4.61,1846,5.326,1847,5.326,1848,5.326,1849,5.326]],["title/components/TableComponent.html",[0,0.414,196,1.018]],["body/components/TableComponent.html",[0,0.44,1,0.514,2,0.973,3,0.072,4,0.063,5,0.656,6,0.63,7,0.63,8,0.063,12,0.897,13,1.273,14,0.535,15,2.28,16,2.252,17,0.919,18,0.783,19,1.014,21,0.63,22,2.314,23,0.255,24,0.702,31,0.702,32,1.522,34,0.732,35,1.098,36,2.314,37,1.408,39,1.286,40,0.016,41,1.131,42,0.827,43,1.185,45,1.338,46,2.027,50,1.827,51,1.553,55,1.587,65,1.372,78,1.372,82,1.569,88,1.345,97,1.436,107,1.329,139,0.337,140,0.161,141,0.604,144,1.748,149,0.072,150,0.172,153,2.528,154,1.569,157,0.63,158,1.014,159,1.014,160,0.63,161,1.903,162,0.63,163,0.63,164,0.514,165,0.63,166,0.514,167,0.535,168,0.604,169,0.63,170,0.535,171,0.63,172,0.861,173,1.273,174,0.514,175,1.014,176,0.514,177,0.63,178,0.535,179,0.63,180,0.535,181,0.604,182,1.014,183,0.535,184,0.63,185,0.514,186,0.63,187,0.535,188,0.604,189,0.535,190,1.054,191,0.514,192,0.535,193,0.63,194,0.535,195,0.63,196,1.24,197,0.63,198,0.535,199,0.401,200,0.514,201,0.58,202,0.63,203,0.63,204,0.004,205,0.009,206,0.004,252,1.722,306,1.102,315,1.673,327,1.875,333,1.436,336,0.778,344,1.748,345,2.408,346,2.982,347,2.531,349,2.07,351,2.024,353,2.96,354,2.141,356,1.438,358,3.082,359,2.508,361,1.574,396,1.748,461,1.038,520,3.023,612,1.875,614,3.136,615,2.312,623,2.688,626,3.46,627,2.141,629,2.982,650,1.329,654,1.329,669,1.164,675,3.46,696,1.098,744,2.505,745,2.876,746,2.22,747,1.673,753,1.673,759,2.354,765,1.436,773,0.985,776,3.174,877,2.312,910,1.436,924,4.267,968,1.24,975,1.164,992,3.639,1016,1.748,1026,1.436,1036,1.569,1037,2.508,1073,2.508,1083,1.164,1233,2.22,1237,1.436,1244,3.326,1255,2.508,1256,1.24,1259,1.24,1261,1.329,1262,1.569,1265,1.24,1267,1.569,1335,1.748,1364,1.748,1377,1.569,1389,2.312,1403,3.329,1427,1.748,1439,1.748,1493,1.748,1495,1.748,1497,1.748,1499,1.748,1500,3.536,1652,3.174,1654,3.174,1684,1.569,1685,1.569,1692,1.569,1798,1.748,1801,1.748,1850,1.748,1851,4.085,1852,3.253,1853,4.085,1854,4.085,1855,5.135,1856,4.085,1857,3.536,1858,3.253,1859,3.253,1860,4.683,1861,4.683,1862,3.253,1863,3.253,1864,4.683,1865,4.085,1866,4.085,1867,4.085,1868,3.253,1869,2.02,1870,2.02,1871,2.02,1872,2.02,1873,2.02,1874,2.02,1875,2.02,1876,2.02,1877,3.253,1878,2.02,1879,3.253,1880,4.683,1881,2.02,1882,3.253,1883,2.02,1884,2.02,1885,2.02,1886,2.02,1887,2.02,1888,3.253,1889,2.02,1890,3.253,1891,4.085,1892,2.02,1893,2.02,1894,2.02,1895,5.135,1896,2.02,1897,2.02,1898,4.085,1899,3.253,1900,2.02,1901,2.02,1902,5.135,1903,3.253,1904,2.02,1905,2.02,1906,2.02,1907,2.02,1908,2.02,1909,2.02,1910,2.02,1911,2.02,1912,2.02,1913,2.02,1914,3.253,1915,2.02,1916,2.02,1917,2.02,1918,2.02,1919,2.02,1920,2.02,1921,2.02,1922,2.02,1923,3.253,1924,2.02,1925,2.02,1926,2.02,1927,2.02,1928,2.02,1929,2.02,1930,2.02,1931,2.02,1932,2.02,1933,1.748,1934,3.536,1935,2.02,1936,2.02,1937,2.02,1938,2.02,1939,2.02,1940,2.02,1941,2.02,1942,2.02,1943,3.253,1944,2.02,1945,2.02,1946,3.253,1947,2.02,1948,2.02,1949,3.253,1950,6.362,1951,4.683,1952,3.253,1953,2.816,1954,3.253,1955,2.02,1956,2.02,1957,2.02,1958,3.253,1959,3.253,1960,2.02,1961,2.02,1962,2.02,1963,2.02,1964,2.02,1965,2.02,1966,2.02,1967,2.02,1968,2.02,1969,3.253,1970,3.253,1971,2.02,1972,2.02,1973,2.02,1974,2.02,1975,2.02,1976,2.02,1977,2.02,1978,3.253,1979,2.02,1980,2.02,1981,2.02,1982,3.253,1983,4.085,1984,3.253,1985,2.02,1986,2.02,1987,2.02,1988,2.02,1989,2.02,1990,2.02,1991,2.02,1992,3.253,1993,2.02,1994,2.02,1995,2.02,1996,2.02,1997,3.253,1998,2.02,1999,2.02,2000,2.02,2001,3.253,2002,2.02,2003,2.02]],["title/interfaces/Task.html",[199,0.764,435,1.15]],["body/interfaces/Task.html",[3,0.198,4,0.173,8,0.173,18,1.24,23,0.7,24,1.44,40,0.016,42,0.876,55,1.819,68,2.859,84,4.032,149,0.198,199,1.325,204,0.011,205,0.013,206,0.011,272,4.032,277,5.274,435,1.66,437,2.574,650,4.882,1595,4.803,2004,4.803,2005,5.55,2006,5.55]],["title/components/TaskDetailComponent.html",[0,0.414,198,1.018]],["body/components/TaskDetailComponent.html",[0,0.515,1,0.656,2,1.18,3,0.092,4,0.081,5,0.838,6,0.804,7,0.804,8,0.081,12,1.087,13,1.492,14,0.683,15,2.365,16,2.343,17,0.887,18,0.8,19,1.229,21,0.804,23,0.325,24,0.851,29,2.614,30,2.614,31,0.851,32,1.741,33,2.272,34,0.887,37,1.3,39,0.924,40,0.016,41,1.422,42,0.859,43,0.851,45,0.851,46,1.492,49,2.334,50,1.966,51,1.819,52,3.357,53,3.764,55,0.887,56,3.764,57,2.062,59,2.272,60,2.272,61,3.088,65,2.753,67,2.143,68,1.519,69,2.272,70,2.421,78,2.259,84,2.912,85,2.272,88,1.875,91,2.485,93,2.912,95,2.755,130,2.421,131,2.421,132,2.421,133,2.421,134,2.421,136,2.421,137,2.421,139,0.331,140,0.206,146,1.258,147,1.487,148,1.487,149,0.092,150,0.219,157,0.804,158,1.229,159,1.229,160,0.804,161,1.603,162,0.804,163,0.804,164,0.656,165,0.804,166,0.656,167,0.683,168,0.772,169,0.804,170,0.683,171,0.804,172,0.683,173,1.492,174,0.656,175,1.229,176,0.656,177,0.804,178,0.683,179,0.804,180,0.683,181,0.772,182,1.229,183,0.683,184,0.804,185,0.656,186,0.804,187,0.683,188,0.772,189,0.683,190,0.887,191,0.656,192,0.683,193,0.804,194,0.683,195,0.804,196,0.683,197,0.804,198,1.419,199,1.493,200,0.656,201,0.741,202,0.804,203,0.804,204,0.005,205,0.008,206,0.005,252,1.088,258,4.142,266,3.063,267,3.063,268,3.063,269,3.063,270,3.412,272,2.6,273,1.402,277,2.802,278,3.412,315,2.027,327,1.487,336,0.994,347,1.088,351,0.952,356,1.14,361,0.994,474,2.6,520,2.614,655,1.834,656,2.027,657,3.718,658,3.063,661,4.142,662,3.718,667,2.004,668,3.149,669,2.758,670,4.163,673,3.063,675,1.487,680,3.063,683,2.233,691,2.233,694,2.004,695,2.004,696,1.402,733,3.401,734,3.063,735,2.802,736,3.063,737,4.163,743,1.584,744,2.334,745,2.421,746,2.143,747,2.027,748,1.584,749,1.697,750,2.004,751,2.004,752,1.697,753,1.326,754,1.834,755,2.004,756,1.697,757,1.697,758,2.004,1602,2.233,2007,6.01,2008,4.936,2009,2.58,2010,2.58,2011,2.58,2012,2.58,2013,2.58,2014,2.58,2015,2.58,2016,2.58,2017,2.58,2018,2.58,2019,5.358,2020,3.943]],["title/injectables/TaskEffects.html",[464,1.418,1763,2.53]],["body/injectables/TaskEffects.html",[3,0.139,4,0.122,8,0.122,23,0.491,24,1.147,34,0.876,37,1.295,39,0.913,40,0.016,41,0.71,42,0.443,43,0.841,50,1.791,51,1.523,139,0.39,140,0.31,149,0.139,150,0.331,155,1.569,199,1.542,201,1.526,204,0.008,205,0.01,206,0.008,219,1.721,235,1.436,236,2.245,237,2.116,273,2.116,336,1.5,387,2.002,409,4.988,464,1.96,470,2.583,471,2.116,531,3.989,835,3.026,836,4.699,838,5.761,839,5.68,841,4.128,845,4.699,846,4.699,849,5.048,852,5.452,854,4.045,857,4.699,868,3.026,871,3.026,1763,3.496,2021,3.371,2022,6.047,2023,6.047,2024,5.234,2025,6.047,2026,3.894,2027,5.313,2028,5.313,2029,7.018,2030,5.313,2031,3.894,2032,5.313,2033,5.313,2034,5.313,2035,5.313,2036,3.894,2037,5.313,2038,5.313,2039,5.313,2040,5.313,2041,5.313,2042,3.894,2043,5.313,2044,5.313,2045,5.313,2046,5.313,2047,3.894,2048,3.371,2049,3.371]],["title/pipes/TaskEnumDisplayPipe.html",[767,1.977,2050,2.988]],["body/pipes/TaskEnumDisplayPipe.html",[3,0.192,4,0.168,8,0.168,12,1.484,14,1.425,29,2.626,30,2.626,31,1.162,37,1.025,39,1.262,40,0.016,41,1.288,42,0.612,43,1.162,45,1.162,51,1.262,55,1.652,68,2.074,139,0.356,140,0.429,149,0.192,150,0.458,204,0.011,205,0.013,206,0.011,272,2.925,273,2.925,470,2.595,565,2.719,700,3.305,724,3.542,725,3.542,726,3.542,767,3.367,769,3.542,773,2.626,774,4.655,802,4.655,806,3.305,807,4.334,817,4.182,820,4.182,825,4.182,934,4.309,1290,4.182,1294,4.659,2050,5.088,2051,5.668,2052,6.548,2053,7.058,2054,5.383,2055,5.383]],["title/modules/TaskModule.html",[280,1.418,2056,2.734]],["body/modules/TaskModule.html",[3,0.178,4,0.156,8,0.156,40,0.016,139,0.425,140,0.397,141,1.492,149,0.178,150,0.424,166,1.91,198,2.018,200,1.91,204,0.01,205,0.012,206,0.01,256,3.544,282,1.492,283,2.516,288,3.862,289,2.76,290,2.203,291,2.203,293,2.897,294,2.516,295,2.304,298,3.281,311,2.432,385,3.544,386,3.281,387,2.563,975,2.874,1055,3.061,1096,3.874,1758,4.315,1763,3.281,1764,3.874,1765,3.874,1766,3.874,2008,3.544,2056,5.668,2057,4.315,2058,4.315,2059,4.315,2060,4.943,2061,4.986,2062,4.986,2063,4.986,2064,4.315,2065,4.986,2066,4.986,2067,4.315,2068,4.986]],["title/modules/TaskRoutingModule.html",[280,1.418,2060,2.53]],["body/modules/TaskRoutingModule.html",[3,0.205,4,0.18,8,0.18,17,1.293,40,0.016,139,0.408,140,0.458,149,0.205,150,0.489,166,1.462,200,1.462,204,0.011,205,0.013,206,0.011,256,4.087,282,1.72,295,2.513,303,3.314,304,3.124,305,2.804,306,1.947,307,3.783,874,2.804,1055,3.53,1735,4.976,1737,4.976,1738,4.976,2060,4.483,2064,4.976,2067,4.976,2069,5.749,2070,6.812,2071,6.812,2072,5.749]],["title/interfaces/TaskState.html",[435,1.15,441,2.53]],["body/interfaces/TaskState.html",[3,0.172,4,0.15,8,0.15,23,0.607,24,1.319,40,0.016,42,0.763,57,2.069,78,2.976,139,0.396,141,1.44,149,0.26,199,0.956,204,0.009,205,0.012,206,0.009,274,2.955,306,2.468,410,4.159,435,1.44,437,2.232,441,4.019,446,3.421,448,2.232,461,3.827,470,2.494,854,4.359,969,3.166,970,2.955,1059,4.746,1060,5.214,1061,5.375,1062,5.375,1063,4.342,1064,4.342,1069,3.421,1073,4.473,1076,4.342,1088,3.421,2048,4.165,2049,5.287,2073,3.739,2074,3.739,2075,3.739,2076,4.746,2077,4.165,2078,4.165,2079,4.165,2080,4.165,2081,4.165,2082,4.165,2083,4.165,2084,4.165]],["title/components/TasksComponent.html",[0,0.414,200,0.978]],["body/components/TasksComponent.html",[0,0.536,1,0.699,2,1.237,3,0.098,4,0.086,5,0.893,6,0.856,7,0.856,8,0.086,12,1.14,13,1.55,14,0.728,15,2.384,16,2.364,17,1.119,18,1.043,19,1.289,21,1.289,22,2.728,23,0.346,24,0.893,31,0.893,32,1.798,34,0.618,35,1.493,36,2.629,37,1.421,39,1.166,40,0.016,41,1.215,42,0.853,43,1.074,45,1.281,46,1.944,50,1.879,51,1.597,55,1.498,68,2.132,84,3.007,88,1.428,139,0.383,140,0.219,141,0.822,143,1.687,149,0.098,150,0.234,155,1.107,157,0.856,158,1.289,159,1.289,160,0.856,161,1.655,162,0.856,163,0.856,164,0.699,165,0.856,166,0.699,167,0.728,168,0.822,169,0.856,170,0.728,171,0.856,172,0.728,173,1.55,174,0.699,175,1.289,176,0.699,177,0.856,178,0.728,179,0.856,180,0.728,181,0.822,182,1.289,183,0.728,184,0.856,185,0.699,186,0.856,187,0.728,188,0.822,189,0.728,190,0.93,191,0.699,192,0.728,193,0.856,194,0.728,195,0.856,196,0.728,197,0.856,198,1.095,199,1.419,200,1.407,201,1.791,202,0.856,203,0.856,204,0.005,205,0.008,206,0.005,219,2.198,220,2.384,235,1.013,266,3.213,267,3.213,268,3.213,269,3.213,272,2.702,273,1.493,277,2.94,306,0.931,336,1.916,349,1.214,351,1.013,448,1.274,474,2.702,520,3.323,538,3.579,652,4.733,669,1.584,675,2.866,696,1.493,700,1.687,704,2.378,724,1.808,725,1.808,726,1.808,759,2.866,874,2.426,876,3.864,877,3.535,881,3.864,899,4.611,903,3.864,904,3.864,909,4.299,910,4.218,951,4.218,953,4.218,964,3.933,967,1.687,970,1.687,972,1.808,973,2.135,975,1.584,988,2.135,993,3.213,1026,1.953,1033,2.135,1034,2.135,1035,2.135,1083,1.584,1646,4.304,1647,4.304,1648,4.304,1652,3.864,1653,4.304,1654,3.864,1684,3.213,1685,2.135,1688,2.378,1691,2.378,1692,2.135,1693,2.378,2008,1.953,2085,2.378,2086,4.973,2087,4.136,2088,4.136,2089,4.973,2090,4.973,2091,4.973,2092,4.136,2093,5.533,2094,4.136,2095,4.136,2096,6.236,2097,2.747,2098,4.136,2099,2.747,2100,2.747,2101,2.747,2102,2.747,2103,2.747,2104,2.747,2105,2.747,2106,2.747,2107,2.747,2108,2.747,2109,2.747,2110,2.747,2111,2.747,2112,2.747,2113,2.747,2114,2.747,2115,2.747,2116,2.747,2117,2.747,2118,2.747,2119,2.747,2120,2.747,2121,2.747,2122,2.747,2123,2.747,2124,2.747]],["title/interfaces/User.html",[317,1.977,435,1.15]],["body/interfaces/User.html",[3,0.2,4,0.175,8,0.175,23,0.705,24,1.447,40,0.016,42,0.865,43,1.667,52,3.824,55,1.806,80,4.042,149,0.2,204,0.011,205,0.013,206,0.011,317,3.445,435,1.673,437,2.593,521,6.438,525,6.438,565,2.764,2125,4.839,2126,7.438]],["title/coverage.html",[2127,4.559]],["body/coverage.html",[0,0.834,1,0.821,8,0.101,9,2.795,10,2.295,11,2.795,18,0.54,22,1.361,40,0.016,42,0.367,49,1.575,88,2.348,111,2.295,164,0.821,166,0.821,167,0.855,170,0.855,172,0.855,174,0.821,176,0.821,178,0.855,180,0.855,183,0.855,185,0.821,187,0.855,189,0.855,190,0.726,191,0.821,192,0.855,194,0.855,196,0.855,198,0.855,199,0.641,200,0.821,204,0.006,205,0.009,206,0.006,207,2.795,208,2.295,209,2.795,233,2.124,255,2.795,256,2.295,257,2.795,274,1.983,282,1.394,312,2.795,317,1.66,321,1.861,382,3.619,390,2.509,418,2.295,435,2.158,436,2.509,438,3.619,439,2.124,440,2.124,441,2.124,444,2.295,446,2.295,451,2.509,453,2.795,464,2.513,472,2.795,531,1.983,532,2.795,608,2.795,641,2.509,643,2.509,647,2.795,651,2.295,653,2.795,654,2.124,655,3.884,656,1.66,659,2.295,767,3.076,768,2.124,770,3.619,771,2.795,829,2.509,830,2.795,873,2.795,924,2.295,934,3.065,971,2.509,972,2.124,1040,2.795,1041,2.795,1058,5.135,1065,2.509,1066,2.509,1067,2.509,1070,2.509,1094,2.124,1111,2.795,1137,2.295,1288,2.795,1289,2.124,1290,3.619,1295,2.795,1393,2.795,1394,2.795,1397,2.795,1398,3.619,1405,2.795,1455,2.795,1489,3.619,1554,2.509,1559,2.795,1591,2.795,1594,2.795,1596,2.795,1597,2.295,1612,2.295,1613,2.795,1644,2.795,1697,5.135,1699,2.509,1700,2.509,1701,2.509,1739,2.795,1740,2.795,1747,2.509,1763,2.124,1771,2.795,1825,2.795,1850,2.795,2004,2.795,2007,2.795,2008,2.295,2021,2.795,2050,2.509,2051,2.795,2073,5.135,2074,2.509,2075,2.509,2076,2.509,2085,2.795,2125,2.795,2127,2.795,2128,3.229,2129,3.229,2130,3.229,2131,3.229,2132,6.608,2133,5.464,2134,6.343,2135,6.343,2136,5.464,2137,4.658,2138,4.658,2139,4.658,2140,3.229,2141,3.229,2142,7.985,2143,2.509,2144,7.938,2145,2.795,2146,4.032,2147,2.795,2148,4.658,2149,4.658,2150,2.509,2151,2.795,2152,4.032,2153,2.795,2154,3.229,2155,2.509,2156,4.032,2157,2.795,2158,3.229,2159,3.229,2160,2.795,2161,2.795,2162,3.229]],["title/dependencies.html",[283,1.865,2163,3.202]],["body/dependencies.html",[36,2.262,40,0.016,140,0.427,141,1.955,204,0.011,205,0.013,206,0.011,235,1.978,283,2.161,300,4.167,301,4.167,305,2.616,372,5.656,373,5.077,375,4.643,387,2.758,389,4.643,500,4.167,645,3.294,964,3.813,967,3.294,969,3.529,974,4.167,1193,4.643,1547,4.643,1550,4.643,1551,4.643,1553,4.643,2164,5.364,2165,7.916,2166,5.364,2167,5.364,2168,5.364,2169,5.364,2170,5.364,2171,5.364,2172,5.364,2173,7.335,2174,5.364,2175,5.364,2176,5.364,2177,5.364,2178,5.364,2179,5.364,2180,5.364,2181,5.364,2182,5.364,2183,5.364,2184,5.364,2185,5.364,2186,5.364]],["title/miscellaneous/enumerations.html",[2187,2.276,2188,4.008]],["body/miscellaneous/enumerations.html",[0,0.798,17,1.667,18,0.55,23,0.415,29,3.245,30,3.533,40,0.016,51,1.879,58,2.84,64,2.021,68,2.326,73,3.184,83,3.822,145,2.722,153,2.557,190,0.741,199,1.56,204,0.006,205,0.009,206,0.006,212,3.822,230,3.184,272,3.28,413,3.67,656,2.84,699,3.108,700,3.706,744,1.606,793,2.849,803,3.357,874,2.695,968,4.383,1071,5.074,1083,4.114,1782,2.849,1791,4.781,2143,2.557,2150,2.557,2155,2.557,2187,2.34,2188,2.849,2189,4.723,2190,2.849,2191,4.723,2192,6.036,2193,6.652,2194,3.292,2195,3.292,2196,4.723,2197,4.723,2198,2.849,2199,4.723,2200,6.036,2201,5.524,2202,5.524,2203,4.723,2204,2.849,2205,5.524,2206,3.292,2207,3.292,2208,7.855,2209,7.408,2210,3.292,2211,7.408,2212,3.292,2213,3.292,2214,3.292,2215,3.292,2216,3.292,2217,3.292,2218,3.292,2219,3.292,2220,3.292,2221,4.723,2222,3.292,2223,3.292,2224,3.292,2225,3.292,2226,3.292,2227,3.292,2228,3.292,2229,3.292,2230,3.292,2231,3.292,2232,3.292,2233,3.292,2234,3.292,2235,3.292,2236,3.292,2237,3.292,2238,2.849,2239,3.292,2240,4.723,2241,3.292,2242,3.292,2243,3.292,2244,6.036,2245,3.292,2246,3.292,2247,3.292,2248,3.292,2249,3.292,2250,3.292,2251,3.292,2252,3.292,2253,3.292,2254,3.292,2255,3.292,2256,3.292,2257,3.292,2258,3.292,2259,3.292,2260,4.723,2261,4.723,2262,4.723,2263,3.292,2264,3.292,2265,5.524,2266,5.524,2267,5.524,2268,3.292,2269,3.292,2270,3.292,2271,3.292,2272,3.292,2273,3.292,2274,3.292,2275,3.292,2276,3.292,2277,3.292,2278,3.292,2279,3.292,2280,3.292,2281,3.292,2282,3.292,2283,3.292,2284,3.292,2285,3.292,2286,3.292,2287,3.292,2288,5.524,2289,3.292]],["title/index.html",[23,0.404,2290,2.772,2291,2.772]],["body/index.html",[4,0.124,17,1.54,18,1.245,22,2.27,40,0.014,42,0.451,67,2.158,80,2.158,83,3.195,151,3.085,152,5.319,201,1.881,204,0.008,205,0.011,206,0.008,212,3.582,245,3.827,317,3.367,329,5.088,330,4.866,410,2.158,411,2.822,413,4.183,427,3.437,499,3.437,500,3.085,520,1.937,631,3.085,656,3.141,754,3.827,790,3.437,889,4.66,915,3.437,923,6.248,924,3.827,926,4.183,992,3.085,1047,3.437,1458,3.437,1575,3.437,1857,3.437,1933,4.66,1934,3.437,2238,5.668,2290,4.66,2291,4.66,2292,6.108,2293,3.97,2294,3.97,2295,3.97,2296,3.97,2297,7.058,2298,3.97,2299,3.97,2300,3.97,2301,5.384,2302,5.384,2303,3.97,2304,6.108,2305,5.384,2306,5.384,2307,5.384,2308,5.384,2309,6.549,2310,3.97,2311,6.108,2312,6.108,2313,3.97,2314,3.97,2315,5.384,2316,3.97,2317,3.97,2318,3.97,2319,3.97,2320,3.97,2321,3.97,2322,3.97,2323,3.97,2324,3.97,2325,3.97,2326,3.97,2327,3.97,2328,5.384,2329,3.97,2330,6.108,2331,3.97,2332,3.97,2333,3.97,2334,3.97,2335,3.97,2336,3.97,2337,3.97,2338,3.97,2339,3.97,2340,3.97,2341,3.97,2342,3.97,2343,6.549,2344,6.108,2345,5.384,2346,3.97,2347,3.97,2348,3.97,2349,3.97,2350,3.97,2351,3.97,2352,3.97,2353,3.97,2354,5.384,2355,3.97,2356,3.97,2357,3.97,2358,3.97,2359,6.108,2360,3.97,2361,3.97,2362,3.97,2363,3.97,2364,3.97,2365,3.97,2366,3.97,2367,3.97,2368,3.97,2369,3.97,2370,3.97,2371,3.97,2372,3.97,2373,3.97,2374,3.97,2375,3.97,2376,3.97,2377,3.97,2378,3.97,2379,3.97,2380,3.97,2381,3.97,2382,5.384,2383,3.97,2384,3.97,2385,3.97,2386,3.97,2387,3.97,2388,3.97,2389,5.384,2390,3.97,2391,3.97,2392,3.97,2393,5.384,2394,3.97,2395,3.97,2396,3.97,2397,5.384,2398,3.97,2399,3.97,2400,3.97,2401,3.97,2402,3.97,2403,3.97,2404,5.384,2405,3.97,2406,3.97,2407,3.97,2408,5.384,2409,6.108,2410,3.97,2411,5.384,2412,5.384,2413,3.97,2414,3.97,2415,5.384,2416,3.97,2417,3.97,2418,3.97,2419,3.97,2420,3.97,2421,3.97,2422,3.97,2423,3.97,2424,3.97,2425,3.97,2426,3.97]],["title/modules.html",[282,1.576]],["body/modules.html",[40,0.013,204,0.011,205,0.013,206,0.011,281,3.895,282,1.639,287,3.606,288,2.817,362,3.895,367,3.606,368,3.606,373,6.198,634,2.978,639,2.978,1053,3.606,1090,3.895,1107,3.606,1273,6.547,1488,3.158,1716,3.895,1720,3.606,1953,6.547,2056,3.895,2060,3.606,2427,7.977,2428,7.977,2429,8.093]],["title/overview.html",[2430,4.559]],["body/overview.html",[1,1.427,2,1.013,40,0.016,65,1.428,95,1.741,101,2.407,107,2.229,164,1.427,166,1.427,167,1.83,170,1.83,172,1.486,174,1.427,176,1.427,178,1.83,180,1.83,183,1.83,185,1.757,187,1.83,189,1.486,191,1.427,192,1.83,194,1.83,196,1.83,198,1.486,200,1.427,204,0.007,205,0.01,206,0.007,281,5.02,282,1.013,283,1.942,284,2.931,285,2.931,286,2.931,287,3.693,288,4.103,289,2.13,290,1.497,291,1.497,304,1.841,362,5.108,363,2.931,364,2.931,365,2.931,366,2.931,367,3.693,368,4.729,437,1.571,451,2.632,471,1.841,634,4.216,635,2.931,636,2.931,637,2.931,638,2.931,639,4.245,768,4.546,769,2.229,1053,3.693,1090,5.378,1091,2.931,1092,2.931,1093,2.931,1094,3.693,1103,2.931,1104,2.931,1105,2.931,1106,2.931,1107,5.01,1289,4.546,1448,2.931,1449,2.931,1451,2.931,1476,2.931,1485,2.931,1486,2.931,1487,2.931,1488,4.435,1716,5.294,1717,2.931,1718,2.931,1719,2.931,1720,3.693,1743,2.931,1744,2.931,1746,2.931,1842,2.931,1843,2.931,1845,2.931,2056,5.294,2057,2.931,2058,2.931,2059,2.931,2060,3.693,2430,2.931,2431,3.387,2432,3.387]],["title/routes.html",[304,2.863]],["body/routes.html",[40,0.014,204,0.012,205,0.014,206,0.012,304,3.443]],["title/miscellaneous/variables.html",[2187,2.276,2433,4.008]],["body/miscellaneous/variables.html",[17,0.836,18,0.399,23,0.301,40,0.016,42,0.787,50,2.128,51,1.809,55,1.026,57,2.087,78,2.956,190,0.538,199,0.475,204,0.005,205,0.007,206,0.005,233,2.445,274,2.282,282,1.539,303,1.377,329,4.585,330,2.642,361,0.921,382,3.997,390,2.887,410,4.114,438,1.856,439,1.572,440,1.572,441,1.572,443,2.068,444,3.242,446,3.242,450,2.068,470,2.61,634,1.298,639,1.298,644,1.467,779,4.824,833,2.068,854,3.771,968,2.282,971,2.887,972,2.445,1058,1.856,1061,4.65,1062,4.65,1063,3.242,1064,3.242,1065,3.543,1066,2.887,1067,3.543,1068,2.068,1069,3.242,1070,2.887,1071,2.642,1072,2.068,1073,4.248,1074,2.068,1075,2.068,1076,4.195,1077,2.068,1078,2.068,1079,2.068,1080,2.068,1081,4.786,1082,2.068,1083,2.142,1084,2.068,1085,2.068,1086,2.068,1087,3.543,1088,2.642,1089,2.068,1488,1.377,1489,1.856,1492,2.068,1494,2.068,1496,2.068,1498,2.068,1501,2.068,1503,2.068,1505,2.068,1507,2.068,1509,2.068,1511,2.068,1513,2.068,1514,2.068,1516,2.068,1518,2.068,1519,2.068,1522,2.068,1524,2.068,1526,3.216,1528,2.068,1530,2.068,1532,2.068,1534,2.068,1536,2.068,1538,2.068,1539,2.068,1541,2.068,1543,2.068,1545,2.068,1548,2.068,1552,2.068,1554,3.543,1555,2.068,1556,2.068,1616,2.068,1657,2.068,1697,1.856,1699,2.887,1700,2.887,1701,3.543,1702,2.068,1703,2.068,1704,2.068,1705,2.068,1706,2.068,1707,2.068,1708,2.068,1709,2.068,1710,2.068,1711,2.068,1712,2.068,1713,2.068,1714,2.068,1715,2.068,1747,1.856,1752,2.068,1753,2.068,1764,1.856,1765,1.856,1766,1.856,1767,2.068,1768,2.068,1769,2.068,1770,2.068,2024,2.068,2073,1.856,2074,2.887,2075,2.887,2076,3.543,2077,2.068,2078,2.068,2079,2.068,2080,2.068,2081,2.068,2082,2.068,2083,2.068,2084,2.068,2143,1.856,2145,3.216,2146,2.068,2147,3.947,2150,1.856,2151,3.216,2152,2.068,2153,3.947,2155,1.856,2156,2.068,2157,3.947,2160,2.068,2161,2.068,2187,1.698,2190,2.068,2198,2.068,2204,2.068,2433,2.068,2434,3.716,2435,5.573,2436,2.389,2437,2.389,2438,5.573,2439,5.573,2440,2.389,2441,2.389,2442,3.716,2443,3.716,2444,3.716,2445,2.389,2446,2.389,2447,7.65,2448,2.389,2449,7.735,2450,2.389,2451,2.389,2452,2.389,2453,2.389,2454,2.389,2455,2.389,2456,2.389,2457,2.389,2458,2.389,2459,2.389,2460,2.389,2461,2.389,2462,2.389,2463,2.389,2464,2.389,2465,2.389,2466,3.716,2467,3.716,2468,3.716,2469,3.716,2470,3.716,2471,3.716,2472,3.716,2473,3.716,2474,3.716,2475,3.716,2476,3.716,2477,3.716,2478,3.716,2479,3.716,2480,3.716,2481,2.389,2482,2.389,2483,2.389,2484,2.389,2485,2.389,2486,2.389,2487,2.389,2488,2.389,2489,2.389,2490,2.389,2491,2.389,2492,2.389,2493,2.389,2494,2.389,2495,2.389,2496,2.389,2497,2.389,2498,2.389,2499,2.389,2500,2.389,2501,2.389,2502,2.389,2503,4.56,2504,4.56,2505,2.389,2506,2.389,2507,2.389,2508,2.389,2509,2.389,2510,2.389,2511,2.389,2512,2.389,2513,2.389,2514,2.389,2515,2.389,2516,2.389,2517,2.389,2518,2.389,2519,2.389,2520,2.389,2521,2.389,2522,2.389,2523,2.389,2524,2.389,2525,2.389,2526,2.389,2527,2.389,2528,2.389,2529,2.389,2530,2.389]]],"invertedIndex":[["",{"_index":40,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"modules/AnalyticsModule.html":{},"modules/AnalyticsRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"components/ButtonComponent.html":{},"modules/CardsModule.html":{},"interfaces/Contact.html":{},"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"injectables/ContactEffects.html":{},"components/ContactListComponent.html":{},"injectables/ContactMetricService.html":{},"modules/ContactRoutingModule.html":{},"interfaces/ContactState.html":{},"modules/ContactsModule.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"interfaces/Day.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"components/FormComponent.html":{},"interfaces/FormSetupModel.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"injectables/MetricsService.html":{},"components/ModalCardComponent.html":{},"interfaces/Note.html":{},"components/NoteDetailComponent.html":{},"injectables/NoteEffects.html":{},"components/NoteListComponent.html":{},"interfaces/NoteState.html":{},"modules/NotesModule.html":{},"modules/NotesRoutingModule.html":{},"pipes/RatingColorPipe.html":{},"modules/SharedModule.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"modules/TabModule.html":{},"components/TableComponent.html":{},"interfaces/Task.html":{},"components/TaskDetailComponent.html":{},"injectables/TaskEffects.html":{},"pipes/TaskEnumDisplayPipe.html":{},"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{},"interfaces/TaskState.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":88,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"components/ContactListComponent.html":{},"injectables/ContactMetricService.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MetricsService.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["0).tostring(16).substring(1",{"_index":607,"title":{},"body":{"injectables/BackendService.html":{}}}],["0.11.4",{"_index":2186,"title":{},"body":{"dependencies.html":{}}}],["0.1vmax",{"_index":1812,"title":{},"body":{"components/SidenavComponent.html":{}}}],["0.2",{"_index":1240,"title":{},"body":{"components/DashboardComponent.html":{},"components/GeneralCardComponent.html":{},"components/ModalCardComponent.html":{}}}],["0.2vmax",{"_index":1814,"title":{},"body":{"components/SidenavComponent.html":{}}}],["0.3s",{"_index":1242,"title":{},"body":{"components/DashboardComponent.html":{},"components/GeneralCardComponent.html":{},"components/ModalCardComponent.html":{}}}],["0.4rem",{"_index":1243,"title":{},"body":{"components/DashboardComponent.html":{}}}],["0.5rem",{"_index":1249,"title":{},"body":{"components/DashboardComponent.html":{},"components/GeneralCardComponent.html":{},"components/ModalCardComponent.html":{}}}],["0.5vh",{"_index":1816,"title":{},"body":{"components/SidenavComponent.html":{}}}],["0.7",{"_index":1474,"title":{},"body":{"components/LoginComponent.html":{}}}],["0.7rem",{"_index":1372,"title":{},"body":{"components/FormComponent.html":{}}}],["0.7vmax",{"_index":1257,"title":{},"body":{"components/DashboardComponent.html":{},"components/GeneralCardComponent.html":{},"components/ModalCardComponent.html":{}}}],["0/1",{"_index":2142,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2139,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2154,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2148,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2138,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2149,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":2140,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":2159,"title":{},"body":{"coverage.html":{}}}],["0/26",{"_index":2131,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2134,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2135,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2158,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2132,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2133,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2137,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2136,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":765,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/DashboardComponent.html":{},"components/NoteDetailComponent.html":{},"components/TableComponent.html":{}}}],["0x10000",{"_index":606,"title":{},"body":{"injectables/BackendService.html":{}}}],["1",{"_index":65,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"injectables/BackendService.html":{},"components/ContactDetailComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"injectables/MetricsService.html":{},"components/NoteDetailComponent.html":{},"components/SidenavComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"overview.html":{}}}],["1.0.2",{"_index":2182,"title":{},"body":{"dependencies.html":{}}}],["1.2rem",{"_index":1439,"title":{},"body":{"components/HeaderComponent.html":{},"components/TableComponent.html":{}}}],["1.2vmax",{"_index":1821,"title":{},"body":{"components/SidenavComponent.html":{}}}],["1.3rem",{"_index":1445,"title":{},"body":{"components/HeaderComponent.html":{}}}],["1.4vmax",{"_index":1841,"title":{},"body":{"components/TabComponent.html":{}}}],["1.5vmax",{"_index":1369,"title":{},"body":{"components/FormComponent.html":{}}}],["10",{"_index":107,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{},"injectables/MetricsService.html":{},"components/TableComponent.html":{},"overview.html":{}}}],["100",{"_index":629,"title":{},"body":{"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/SidenavComponent.html":{},"components/TableComponent.html":{}}}],["1000",{"_index":1473,"title":{},"body":{"components/LoginComponent.html":{}}}],["100vh",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/SidenavComponent.html":{}}}],["100vmax",{"_index":352,"title":{},"body":{"components/AppComponent.html":{}}}],["100vw",{"_index":1785,"title":{},"body":{"components/SidenavComponent.html":{}}}],["10rem",{"_index":1388,"title":{},"body":{"components/FormComponent.html":{}}}],["10vh",{"_index":1260,"title":{},"body":{"components/DashboardComponent.html":{}}}],["10vmax",{"_index":1379,"title":{},"body":{"components/FormComponent.html":{},"components/SidenavComponent.html":{}}}],["11",{"_index":109,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{},"injectables/MetricsService.html":{}}}],["11.0.1",{"_index":2180,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":111,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{},"injectables/MetricsService.html":{},"coverage.html":{}}}],["12.0.0",{"_index":2169,"title":{},"body":{"dependencies.html":{}}}],["12.1.0",{"_index":2173,"title":{},"body":{"dependencies.html":{}}}],["12.1.4",{"_index":2165,"title":{},"body":{"dependencies.html":{}}}],["12.2.0",{"_index":2175,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":113,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"injectables/MetricsService.html":{}}}],["13].includes(c.contacttype",{"_index":1212,"title":{},"body":{"components/DashboardComponent.html":{}}}],["14",{"_index":60,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddTaskComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"injectables/MetricsService.html":{},"components/TaskDetailComponent.html":{}}}],["14vmax",{"_index":1788,"title":{},"body":{"components/SidenavComponent.html":{}}}],["15",{"_index":1387,"title":{},"body":{"components/FormComponent.html":{}}}],["15vmax",{"_index":1484,"title":{},"body":{"components/LoginComponent.html":{}}}],["16",{"_index":2431,"title":{},"body":{"overview.html":{}}}],["163",{"_index":1392,"title":{},"body":{"components/FormComponent.html":{}}}],["1:398173868163:web:292c880186afef78cf8bb6",{"_index":2480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1fr",{"_index":761,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/NoteDetailComponent.html":{}}}],["1rem",{"_index":1267,"title":{},"body":{"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/TableComponent.html":{}}}],["1vh",{"_index":1258,"title":{},"body":{"components/DashboardComponent.html":{}}}],["1vmax",{"_index":1378,"title":{},"body":{"components/FormComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["2",{"_index":91,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/ContactDetailComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"injectables/MetricsService.html":{},"components/NoteDetailComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TaskDetailComponent.html":{}}}],["2.0.0",{"_index":2184,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":2178,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":2179,"title":{},"body":{"dependencies.html":{}}}],["2.9.3",{"_index":2176,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":2432,"title":{},"body":{"overview.html":{}}}],["20vmax",{"_index":1282,"title":{},"body":{"components/DashboardComponent.html":{},"components/FormComponent.html":{}}}],["231",{"_index":2000,"title":{},"body":{"components/TableComponent.html":{}}}],["25",{"_index":396,"title":{},"body":{"modules/AppModule.html":{},"components/TableComponent.html":{}}}],["25rem",{"_index":1383,"title":{},"body":{"components/FormComponent.html":{}}}],["28",{"_index":1476,"title":{},"body":{"components/LoginComponent.html":{},"overview.html":{}}}],["2rem",{"_index":1237,"title":{},"body":{"components/DashboardComponent.html":{},"components/GeneralCardComponent.html":{},"components/ModalCardComponent.html":{},"components/TableComponent.html":{}}}],["2vh",{"_index":1813,"title":{},"body":{"components/SidenavComponent.html":{}}}],["2vmax",{"_index":749,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/HeaderComponent.html":{},"components/NoteDetailComponent.html":{},"components/SidenavComponent.html":{},"components/TaskDetailComponent.html":{}}}],["3",{"_index":93,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/ContactDetailComponent.html":{},"components/DashboardComponent.html":{},"injectables/MetricsService.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["3.5rem",{"_index":1370,"title":{},"body":{"components/FormComponent.html":{}}}],["3/24",{"_index":2141,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1386,"title":{},"body":{"components/FormComponent.html":{},"components/LoginComponent.html":{}}}],["300435",{"_index":1840,"title":{},"body":{"components/TabComponent.html":{}}}],["30vw",{"_index":1254,"title":{},"body":{"components/DashboardComponent.html":{}}}],["36",{"_index":1444,"title":{},"body":{"components/HeaderComponent.html":{}}}],["361c12",{"_index":1787,"title":{},"body":{"components/SidenavComponent.html":{}}}],["38",{"_index":1276,"title":{},"body":{"components/DashboardComponent.html":{}}}],["39",{"_index":1819,"title":{},"body":{"components/SidenavComponent.html":{}}}],["398173868163",{"_index":2478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3rem",{"_index":1271,"title":{},"body":{"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/HeaderComponent.html":{}}}],["3vamx",{"_index":1283,"title":{},"body":{"components/DashboardComponent.html":{}}}],["3vmax",{"_index":1279,"title":{},"body":{"components/DashboardComponent.html":{},"components/ModalCardComponent.html":{}}}],["3vw",{"_index":1974,"title":{},"body":{"components/TableComponent.html":{}}}],["4",{"_index":95,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/ContactDetailComponent.html":{},"components/DashboardComponent.html":{},"injectables/MetricsService.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{},"overview.html":{}}}],["4.2rem",{"_index":1434,"title":{},"body":{"components/HeaderComponent.html":{}}}],["40",{"_index":1384,"title":{},"body":{"components/FormComponent.html":{},"components/LoginComponent.html":{}}}],["40vw",{"_index":1269,"title":{},"body":{"components/DashboardComponent.html":{}}}],["45rem",{"_index":1692,"title":{},"body":{"components/NoteListComponent.html":{},"components/TableComponent.html":{},"components/TasksComponent.html":{}}}],["45vw",{"_index":1250,"title":{},"body":{"components/DashboardComponent.html":{}}}],["47",{"_index":1277,"title":{},"body":{"components/DashboardComponent.html":{}}}],["4mc_utgieezg5d7gq8lvqq",{"_index":2471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4rem",{"_index":1238,"title":{},"body":{"components/DashboardComponent.html":{}}}],["4s",{"_index":1984,"title":{},"body":{"components/TableComponent.html":{}}}],["4vmax",{"_index":1374,"title":{},"body":{"components/FormComponent.html":{},"components/LoginComponent.html":{}}}],["5",{"_index":97,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{},"injectables/MetricsService.html":{},"components/TableComponent.html":{}}}],["50",{"_index":1808,"title":{},"body":{"components/SidenavComponent.html":{}}}],["500",{"_index":1264,"title":{},"body":{"components/DashboardComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{}}}],["50vh",{"_index":1988,"title":{},"body":{"components/TableComponent.html":{}}}],["5px",{"_index":1963,"title":{},"body":{"components/TableComponent.html":{}}}],["5vh",{"_index":1815,"title":{},"body":{"components/SidenavComponent.html":{}}}],["5vmax",{"_index":360,"title":{},"body":{"components/AppComponent.html":{},"components/FormComponent.html":{},"components/SidenavComponent.html":{}}}],["5vw",{"_index":1978,"title":{},"body":{"components/TableComponent.html":{}}}],["6",{"_index":99,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{},"components/HeaderComponent.html":{},"injectables/MetricsService.html":{}}}],["6.1.5",{"_index":2168,"title":{},"body":{"dependencies.html":{}}}],["6.6.0",{"_index":2181,"title":{},"body":{"dependencies.html":{}}}],["65vh",{"_index":1955,"title":{},"body":{"components/TableComponent.html":{}}}],["68",{"_index":1820,"title":{},"body":{"components/SidenavComponent.html":{}}}],["7",{"_index":101,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{},"injectables/MetricsService.html":{},"overview.html":{}}}],["70vw",{"_index":758,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["74",{"_index":1391,"title":{},"body":{"components/FormComponent.html":{}}}],["75",{"_index":1995,"title":{},"body":{"components/TableComponent.html":{}}}],["75vmax",{"_index":1835,"title":{},"body":{"components/TabComponent.html":{}}}],["75vw",{"_index":1274,"title":{},"body":{"components/DashboardComponent.html":{},"components/HeaderComponent.html":{}}}],["7vmax",{"_index":1836,"title":{},"body":{"components/TabComponent.html":{}}}],["8",{"_index":103,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{},"injectables/MetricsService.html":{}}}],["8.6.1",{"_index":2177,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":1472,"title":{},"body":{"components/LoginComponent.html":{}}}],["80vmax",{"_index":1404,"title":{},"body":{"components/GeneralCardComponent.html":{}}}],["80vw",{"_index":1252,"title":{},"body":{"components/DashboardComponent.html":{}}}],["83",{"_index":1999,"title":{},"body":{"components/TableComponent.html":{}}}],["85",{"_index":1286,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{}}}],["8b4513",{"_index":1169,"title":{},"body":{"components/DashboardComponent.html":{}}}],["8vmax",{"_index":1817,"title":{},"body":{"components/SidenavComponent.html":{}}}],["9",{"_index":105,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{},"injectables/MetricsService.html":{}}}],["90",{"_index":1036,"title":{},"body":{"components/ContactListComponent.html":{},"components/NoteListComponent.html":{},"components/TableComponent.html":{}}}],["90vw",{"_index":1691,"title":{},"body":{"components/NoteListComponent.html":{},"components/TasksComponent.html":{}}}],["95",{"_index":1807,"title":{},"body":{"components/SidenavComponent.html":{}}}],["98vh",{"_index":357,"title":{},"body":{"components/AppComponent.html":{}}}],["9rem",{"_index":1975,"title":{},"body":{"components/TableComponent.html":{}}}],["9vmax",{"_index":1438,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{}}}],["__background",{"_index":1470,"title":{},"body":{"components/LoginComponent.html":{}}}],["__bar",{"_index":1272,"title":{},"body":{"components/DashboardComponent.html":{}}}],["__buttons",{"_index":1382,"title":{},"body":{"components/FormComponent.html":{}}}],["__content",{"_index":1446,"title":{},"body":{"components/HeaderComponent.html":{}}}],["__context",{"_index":1475,"title":{},"body":{"components/LoginComponent.html":{}}}],["__edit",{"_index":750,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["__graph",{"_index":1268,"title":{},"body":{"components/DashboardComponent.html":{}}}],["__header",{"_index":1368,"title":{},"body":{"components/FormComponent.html":{},"components/SidenavComponent.html":{}}}],["__horiz",{"_index":1373,"title":{},"body":{"components/FormComponent.html":{}}}],["__login",{"_index":1482,"title":{},"body":{"components/LoginComponent.html":{}}}],["__title",{"_index":1266,"title":{},"body":{"components/DashboardComponent.html":{},"components/HeaderComponent.html":{}}}],["__vert",{"_index":1381,"title":{},"body":{"components/FormComponent.html":{}}}],["_firsttimeuser",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{}}}],["a+b",{"_index":1051,"title":{},"body":{"injectables/ContactMetricService.html":{}}}],["a.energylevel",{"_index":1576,"title":{},"body":{"injectables/MetricsService.html":{}}}],["a.priority",{"_index":1577,"title":{},"body":{"injectables/MetricsService.html":{}}}],["a.value",{"_index":1586,"title":{},"body":{"injectables/MetricsService.html":{}}}],["a0522d",{"_index":1170,"title":{},"body":{"components/DashboardComponent.html":{}}}],["a52a2a",{"_index":1171,"title":{},"body":{"components/DashboardComponent.html":{}}}],["a:focus",{"_index":1822,"title":{},"body":{"components/SidenavComponent.html":{}}}],["a:target",{"_index":1823,"title":{},"body":{"components/SidenavComponent.html":{}}}],["absolute",{"_index":1471,"title":{},"body":{"components/LoginComponent.html":{},"components/SidenavComponent.html":{}}}],["accent",{"_index":348,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["accessors",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{},"components/FormComponent.html":{}}}],["acknowledgements",{"_index":2310,"title":{},"body":{"index.html":{}}}],["acquaintance",{"_index":2235,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["acquaintancemetric",{"_index":891,"title":{},"body":{"components/ContactListComponent.html":{}}}],["action",{"_index":1073,"title":{},"body":{"interfaces/ContactState.html":{},"injectables/NoteEffects.html":{},"interfaces/NoteState.html":{},"components/TableComponent.html":{},"interfaces/TaskState.html":{},"miscellaneous/variables.html":{}}}],["action.contact.changes",{"_index":865,"title":{},"body":{"injectables/ContactEffects.html":{}}}],["action.error",{"_index":1076,"title":{},"body":{"interfaces/ContactState.html":{},"interfaces/NoteState.html":{},"interfaces/TaskState.html":{},"miscellaneous/variables.html":{}}}],["actionable",{"_index":2337,"title":{},"body":{"index.html":{}}}],["actionreducermap",{"_index":443,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":409,"title":{},"body":{"modules/AppModule.html":{},"injectables/ContactEffects.html":{},"injectables/NoteEffects.html":{},"injectables/TaskEffects.html":{}}}],["actions/notes.actions",{"_index":1641,"title":{},"body":{"injectables/NoteEffects.html":{},"interfaces/NoteState.html":{}}}],["actions/task.actions",{"_index":2049,"title":{},"body":{"injectables/TaskEffects.html":{},"interfaces/TaskState.html":{}}}],["activatedroutesnapshot",{"_index":457,"title":{},"body":{"guards/AuthGuard.html":{}}}],["active",{"_index":1442,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{}}}],["activity",{"_index":2367,"title":{},"body":{"index.html":{}}}],["actual_component",{"_index":203,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["add",{"_index":17,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"modules/ContactRoutingModule.html":{},"interfaces/ContactState.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"interfaces/NoteState.html":{},"modules/NotesRoutingModule.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"modules/TaskRoutingModule.html":{},"components/TasksComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["add_contact",{"_index":2212,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["add_contact_fail",{"_index":2213,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["add_contact_success",{"_index":2214,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["add_note",{"_index":2251,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["add_note_fail",{"_index":2252,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["add_note_success",{"_index":2253,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["add_task",{"_index":1782,"title":{},"body":{"components/SidenavComponent.html":{},"miscellaneous/enumerations.html":{}}}],["add_task_fail",{"_index":2280,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["add_task_success",{"_index":2281,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["addconceptcontrols",{"_index":25,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddTaskComponent.html":{}}}],["addcontact",{"_index":2452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addcontactcomponent",{"_index":1,"title":{"components/AddContactComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"modules/ContactRoutingModule.html":{},"modules/ContactsModule.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addcontactfail",{"_index":2454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addcontacts",{"_index":831,"title":{},"body":{"injectables/ContactEffects.html":{}}}],["addcontactsuccess",{"_index":2456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addcontacttodb",{"_index":533,"title":{},"body":{"injectables/BackendService.html":{}}}],["addcontacttodb(contact",{"_index":548,"title":{},"body":{"injectables/BackendService.html":{}}}],["adding",{"_index":1000,"title":{},"body":{"components/ContactListComponent.html":{}}}],["additional",{"_index":2356,"title":{},"body":{"index.html":{}}}],["addnote",{"_index":2486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addnotecomponent",{"_index":164,"title":{"components/AddNoteComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"modules/NotesModule.html":{},"modules/NotesRoutingModule.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addnotecontrols",{"_index":211,"title":{},"body":{"components/AddNoteComponent.html":{}}}],["addnotefail",{"_index":2488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addnoteindb",{"_index":534,"title":{},"body":{"injectables/BackendService.html":{}}}],["addnoteindb(note",{"_index":550,"title":{},"body":{"injectables/BackendService.html":{}}}],["addnotes",{"_index":1614,"title":{},"body":{"injectables/NoteEffects.html":{}}}],["addnotesuccess",{"_index":2490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addtask",{"_index":2513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addtaskcomponent",{"_index":166,"title":{"components/AddTaskComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addtaskfail:createaction",{"_index":2515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addtaskindb",{"_index":535,"title":{},"body":{"injectables/BackendService.html":{}}}],["addtaskindb(task",{"_index":552,"title":{},"body":{"injectables/BackendService.html":{}}}],["addtasks",{"_index":2022,"title":{},"body":{"injectables/TaskEffects.html":{}}}],["addtasksuccess:createaction",{"_index":2517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["afauth",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{}}}],["afterviewinit",{"_index":1904,"title":{},"body":{"components/TableComponent.html":{}}}],["age",{"_index":648,"title":{},"body":{"interfaces/Contact.html":{},"components/ContactListComponent.html":{}}}],["aizasydwmd",{"_index":2469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["akaya",{"_index":1477,"title":{},"body":{"components/LoginComponent.html":{}}}],["align",{"_index":745,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/DashboardComponent.html":{},"components/NoteDetailComponent.html":{},"components/SidenavComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{}}}],["allow",{"_index":927,"title":{},"body":{"components/ContactListComponent.html":{}}}],["amazing",{"_index":2400,"title":{},"body":{"index.html":{}}}],["amazingfeature",{"_index":2414,"title":{},"body":{"index.html":{}}}],["amongst",{"_index":2294,"title":{},"body":{"index.html":{}}}],["analytics",{"_index":427,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{}}}],["analytics.routing.module",{"_index":297,"title":{},"body":{"modules/AnalyticsModule.html":{}}}],["analytics/services/metrics.service",{"_index":1192,"title":{},"body":{"components/DashboardComponent.html":{}}}],["analyticsmodule",{"_index":281,"title":{"modules/AnalyticsModule.html":{}},"body":{"modules/AnalyticsModule.html":{},"modules.html":{},"overview.html":{}}}],["analyticsroutingmodule",{"_index":287,"title":{"modules/AnalyticsRoutingModule.html":{}},"body":{"modules/AnalyticsModule.html":{},"modules/AnalyticsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["angular",{"_index":2396,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2164,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2166,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/drag",{"_index":1499,"title":{},"body":{"modules/MaterialModule.html":{},"components/TableComponent.html":{}}}],["angular/common",{"_index":645,"title":{},"body":{"modules/CardsModule.html":{},"modules/CoreModule.html":{},"modules/NotesModule.html":{},"modules/SharedModule.html":{},"modules/TabModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":2167,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":140,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"modules/AnalyticsModule.html":{},"modules/AnalyticsRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"components/ButtonComponent.html":{},"modules/CardsModule.html":{},"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"injectables/ContactEffects.html":{},"components/ContactListComponent.html":{},"injectables/ContactMetricService.html":{},"modules/ContactRoutingModule.html":{},"modules/ContactsModule.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"injectables/MetricsService.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"injectables/NoteEffects.html":{},"components/NoteListComponent.html":{},"modules/NotesModule.html":{},"modules/NotesRoutingModule.html":{},"pipes/RatingColorPipe.html":{},"modules/SharedModule.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"modules/TabModule.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"injectables/TaskEffects.html":{},"pipes/TaskEnumDisplayPipe.html":{},"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{},"components/TasksComponent.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":375,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/fire/auth",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["angular/fire/firestore",{"_index":377,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{}}}],["angular/flex",{"_index":1550,"title":{},"body":{"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":967,"title":{},"body":{"components/ContactListComponent.html":{},"components/FormComponent.html":{},"components/NoteListComponent.html":{},"modules/SharedModule.html":{},"components/TasksComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2171,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":1525,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/button",{"_index":1508,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/card",{"_index":1504,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/chips",{"_index":1544,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/core",{"_index":1540,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/datepicker",{"_index":1537,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/dialog",{"_index":696,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"modules/MaterialModule.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["angular/material/divider",{"_index":1515,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/expansion",{"_index":1517,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/form",{"_index":1521,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/grid",{"_index":1527,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":1506,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/input",{"_index":1523,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/list",{"_index":1531,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/paginator",{"_index":1495,"title":{},"body":{"modules/MaterialModule.html":{},"components/TableComponent.html":{}}}],["angular/material/progress",{"_index":1546,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/select",{"_index":1535,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":1529,"title":{},"body":{"modules/MaterialModule.html":{},"components/SidenavComponent.html":{}}}],["angular/material/snack",{"_index":1502,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sort",{"_index":1497,"title":{},"body":{"modules/MaterialModule.html":{},"components/TableComponent.html":{}}}],["angular/material/table",{"_index":1493,"title":{},"body":{"modules/MaterialModule.html":{},"components/TableComponent.html":{}}}],["angular/material/tabs",{"_index":1512,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/toolbar",{"_index":1533,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tooltip",{"_index":1542,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":305,"title":{},"body":{"modules/AnalyticsRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/ContactRoutingModule.html":{},"modules/NotesRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TaskRoutingModule.html":{},"dependencies.html":{}}}],["angularfireauth",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{}}}],["angularfiremodule",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebaseconfig",{"_index":414,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestore",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BackendService.html":{}}}],["angularfirestoredocument",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["angularfirestoremodule",{"_index":376,"title":{},"body":{"modules/AppModule.html":{}}}],["animation",{"_index":1982,"title":{},"body":{"components/TableComponent.html":{}}}],["apikey",{"_index":2468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":168,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["app.component",{"_index":379,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":316,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":314,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":167,"title":{"components/AppComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearance",{"_index":1554,"title":{},"body":{"modules/MaterialModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appid",{"_index":2479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applicable",{"_index":937,"title":{},"body":{"components/ContactListComponent.html":{}}}],["applysearchfilter",{"_index":1858,"title":{},"body":{"components/TableComponent.html":{}}}],["applysearchfilter(event",{"_index":1877,"title":{},"body":{"components/TableComponent.html":{}}}],["appmodule",{"_index":362,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appreciated",{"_index":2406,"title":{},"body":{"index.html":{}}}],["approutingmodule",{"_index":367,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appstate",{"_index":436,"title":{"interfaces/AppState.html":{}},"body":{"interfaces/AppState.html":{},"coverage.html":{}}}],["area",{"_index":1230,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aren't",{"_index":2332,"title":{},"body":{"index.html":{}}}],["assisting",{"_index":2335,"title":{},"body":{"index.html":{}}}],["async",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["attractions",{"_index":791,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{}}}],["aunt",{"_index":2232,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth",{"_index":324,"title":{},"body":{"components/AppComponent.html":{},"injectables/BackendService.html":{}}}],["auth/login/login.component",{"_index":1109,"title":{},"body":{"modules/CoreModule.html":{}}}],["authdomain",{"_index":2472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authguard",{"_index":418,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authservice",{"_index":321,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["authservice:authservice",{"_index":467,"title":{},"body":{"guards/AuthGuard.html":{}}}],["auto",{"_index":361,"title":{},"body":{"components/AppComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"modules/MaterialModule.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"miscellaneous/variables.html":{}}}],["autocomplete",{"_index":246,"title":{},"body":{"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/FormComponent.html":{}}}],["autocompleteoptions",{"_index":248,"title":{},"body":{"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"interfaces/FormSetupModel.html":{}}}],["autopause",{"_index":406,"title":{},"body":{"modules/AppModule.html":{}}}],["available",{"_index":1953,"title":{},"body":{"components/TableComponent.html":{},"modules.html":{}}}],["average",{"_index":2245,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["await",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{}}}],["b",{"_index":1575,"title":{},"body":{"injectables/MetricsService.html":{},"index.html":{}}}],["b.energylevel",{"_index":1578,"title":{},"body":{"injectables/MetricsService.html":{}}}],["b.priority))[0",{"_index":1580,"title":{},"body":{"injectables/MetricsService.html":{}}}],["b.priority))[contacts.length",{"_index":1579,"title":{},"body":{"injectables/MetricsService.html":{}}}],["b.value",{"_index":1587,"title":{},"body":{"injectables/MetricsService.html":{}}}],["baby_changing_station",{"_index":783,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{}}}],["backend",{"_index":836,"title":{},"body":{"injectables/ContactEffects.html":{},"injectables/NoteEffects.html":{},"injectables/TaskEffects.html":{}}}],["backendservice",{"_index":531,"title":{"injectables/BackendService.html":{}},"body":{"injectables/BackendService.html":{},"injectables/ContactEffects.html":{},"injectables/NoteEffects.html":{},"injectables/TaskEffects.html":{},"coverage.html":{}}}],["background",{"_index":346,"title":{},"body":{"components/AppComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{}}}],["backgroundcolor",{"_index":1144,"title":{},"body":{"components/DashboardComponent.html":{}}}],["bar",{"_index":1251,"title":{},"body":{"components/DashboardComponent.html":{},"modules/MaterialModule.html":{},"components/TabComponent.html":{}}}],["barchartcolors",{"_index":1115,"title":{},"body":{"components/DashboardComponent.html":{}}}],["barchartdata",{"_index":1116,"title":{},"body":{"components/DashboardComponent.html":{}}}],["barchartlabels",{"_index":1117,"title":{},"body":{"components/DashboardComponent.html":{}}}],["barchartlegend",{"_index":1118,"title":{},"body":{"components/DashboardComponent.html":{}}}],["barcharttype",{"_index":1119,"title":{},"body":{"components/DashboardComponent.html":{}}}],["based",{"_index":2359,"title":{},"body":{"index.html":{}}}],["bc8f8f",{"_index":1164,"title":{},"body":{"components/DashboardComponent.html":{}}}],["bdb76b",{"_index":1145,"title":{},"body":{"components/DashboardComponent.html":{}}}],["beta.34",{"_index":2170,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":1428,"title":{},"body":{"components/HeaderComponent.html":{}}}],["big",{"_index":632,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormComponent.html":{}}}],["birth",{"_index":75,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{}}}],["birthdate",{"_index":77,"title":{},"body":{"components/AddContactComponent.html":{},"interfaces/Contact.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{}}}],["black",{"_index":1969,"title":{},"body":{"components/TableComponent.html":{}}}],["blanchedalmond",{"_index":1994,"title":{},"body":{"components/TableComponent.html":{}}}],["block",{"_index":1281,"title":{},"body":{"components/DashboardComponent.html":{},"components/FormComponent.html":{}}}],["blue",{"_index":755,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["body",{"_index":243,"title":{},"body":{"components/AddNoteComponent.html":{},"interfaces/Note.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{}}}],["boolean",{"_index":461,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"interfaces/ContactState.html":{},"components/FormComponent.html":{},"interfaces/FormSetupModel.html":{},"interfaces/NoteState.html":{},"components/TableComponent.html":{},"interfaces/TaskState.html":{}}}],["bootstrap",{"_index":370,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":1255,"title":{},"body":{"components/DashboardComponent.html":{},"components/GeneralCardComponent.html":{},"components/ModalCardComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{}}}],["bottom",{"_index":748,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/NoteDetailComponent.html":{},"components/TabComponent.html":{},"components/TaskDetailComponent.html":{}}}],["box",{"_index":1235,"title":{},"body":{"components/DashboardComponent.html":{},"components/GeneralCardComponent.html":{},"components/ModalCardComponent.html":{}}}],["branch",{"_index":2408,"title":{},"body":{"index.html":{}}}],["break",{"_index":1335,"title":{},"body":{"components/FormComponent.html":{},"components/TableComponent.html":{}}}],["breakpoint",{"_index":1549,"title":{},"body":{"modules/MaterialModule.html":{}}}],["bring",{"_index":2372,"title":{},"body":{"index.html":{}}}],["brother",{"_index":2224,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["browse",{"_index":2429,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":373,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":381,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":380,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["bug",{"_index":2300,"title":{},"body":{"index.html":{}}}],["buildcharts",{"_index":1135,"title":{},"body":{"components/DashboardComponent.html":{}}}],["buildcharts(contactdistribution",{"_index":1141,"title":{},"body":{"components/DashboardComponent.html":{}}}],["building",{"_index":2376,"title":{},"body":{"index.html":{}}}],["built",{"_index":2306,"title":{},"body":{"index.html":{}}}],["business",{"_index":790,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{},"index.html":{}}}],["businesses",{"_index":2314,"title":{},"body":{"index.html":{}}}],["button",{"_index":609,"title":{},"body":{"components/ButtonComponent.html":{},"components/LoginComponent.html":{}}}],["button'},{'name",{"_index":171,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["button.component.html",{"_index":611,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button.component.scss",{"_index":610,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button/button.component",{"_index":1751,"title":{},"body":{"modules/SharedModule.html":{}}}],["buttoncomponent",{"_index":170,"title":{"components/ButtonComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"modules/SharedModule.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["buttons",{"_index":1957,"title":{},"body":{"components/TableComponent.html":{}}}],["c",{"_index":1364,"title":{},"body":{"components/FormComponent.html":{},"components/TableComponent.html":{}}}],["c.contacttype",{"_index":1202,"title":{},"body":{"components/DashboardComponent.html":{}}}],["c.name",{"_index":1362,"title":{},"body":{"components/FormComponent.html":{}}}],["c.numbermax",{"_index":1336,"title":{},"body":{"components/FormComponent.html":{}}}],["c.numbermin",{"_index":1337,"title":{},"body":{"components/FormComponent.html":{}}}],["c.required",{"_index":1331,"title":{},"body":{"components/FormComponent.html":{}}}],["c.type",{"_index":1330,"title":{},"body":{"components/FormComponent.html":{}}}],["c7a4ca",{"_index":1839,"title":{},"body":{"components/TabComponent.html":{}}}],["calculation",{"_index":1001,"title":{},"body":{"components/ContactListComponent.html":{}}}],["calendar",{"_index":2381,"title":{},"body":{"index.html":{}}}],["call",{"_index":2262,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["canactivate",{"_index":424,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":456,"title":{},"body":{"guards/AuthGuard.html":{}}}],["card",{"_index":1234,"title":{},"body":{"components/DashboardComponent.html":{},"components/GeneralCardComponent.html":{},"components/ModalCardComponent.html":{},"components/TabComponent.html":{}}}],["card'},{'name",{"_index":182,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["card.component",{"_index":642,"title":{},"body":{"modules/CardsModule.html":{}}}],["card.component.scss",{"_index":1399,"title":{},"body":{"components/GeneralCardComponent.html":{},"components/ModalCardComponent.html":{}}}],["card.component.ts",{"_index":1398,"title":{},"body":{"components/GeneralCardComponent.html":{},"components/ModalCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:12",{"_index":1400,"title":{},"body":{"components/GeneralCardComponent.html":{}}}],["card.component.ts:14",{"_index":1592,"title":{},"body":{"components/ModalCardComponent.html":{}}}],["card.component.ts:16",{"_index":1401,"title":{},"body":{"components/GeneralCardComponent.html":{}}}],["card.component.ts:18",{"_index":1593,"title":{},"body":{"components/ModalCardComponent.html":{}}}],["card/general",{"_index":643,"title":{},"body":{"modules/CardsModule.html":{},"components/GeneralCardComponent.html":{},"coverage.html":{}}}],["card/modal",{"_index":641,"title":{},"body":{"modules/CardsModule.html":{},"components/ModalCardComponent.html":{},"coverage.html":{}}}],["cards/cards.module",{"_index":1749,"title":{},"body":{"modules/SharedModule.html":{}}}],["cardsmodule",{"_index":634,"title":{"modules/CardsModule.html":{}},"body":{"modules/CardsModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/TabModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["case",{"_index":807,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{},"components/ContactListComponent.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"components/FormComponent.html":{},"pipes/RatingColorPipe.html":{},"pipes/TaskEnumDisplayPipe.html":{}}}],["catcherror",{"_index":845,"title":{},"body":{"injectables/ContactEffects.html":{},"injectables/NoteEffects.html":{},"injectables/TaskEffects.html":{}}}],["catcherror(error",{"_index":852,"title":{},"body":{"injectables/ContactEffects.html":{},"injectables/NoteEffects.html":{},"injectables/TaskEffects.html":{}}}],["categorize",{"_index":2351,"title":{},"body":{"index.html":{}}}],["cc997f",{"_index":1797,"title":{},"body":{"components/SidenavComponent.html":{}}}],["cd853f",{"_index":1167,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cdkdragdrop",{"_index":1880,"title":{},"body":{"components/TableComponent.html":{}}}],["cell",{"_index":1962,"title":{},"body":{"components/TableComponent.html":{}}}],["center",{"_index":746,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/SidenavComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{}}}],["changes",{"_index":411,"title":{},"body":{"modules/AppModule.html":{},"injectables/BackendService.html":{},"components/ContactListComponent.html":{},"index.html":{}}}],["chart.js",{"_index":1193,"title":{},"body":{"components/DashboardComponent.html":{},"dependencies.html":{}}}],["chartcolors",{"_index":1120,"title":{},"body":{"components/DashboardComponent.html":{}}}],["chartdatasets",{"_index":1147,"title":{},"body":{"components/DashboardComponent.html":{}}}],["chartoptions",{"_index":1186,"title":{},"body":{"components/DashboardComponent.html":{}}}],["charts",{"_index":301,"title":{},"body":{"modules/AnalyticsModule.html":{},"components/DashboardComponent.html":{},"dependencies.html":{}}}],["chartsmodule",{"_index":299,"title":{},"body":{"modules/AnalyticsModule.html":{}}}],["charttype",{"_index":1154,"title":{},"body":{"components/DashboardComponent.html":{}}}],["check",{"_index":1360,"title":{},"body":{"components/FormComponent.html":{}}}],["checkout",{"_index":2410,"title":{},"body":{"index.html":{}}}],["child",{"_index":153,"title":{},"body":{"components/AddContactComponent.html":{},"components/TableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["child(1),td:nth",{"_index":1971,"title":{},"body":{"components/TableComponent.html":{}}}],["child(2",{"_index":1972,"title":{},"body":{"components/TableComponent.html":{}}}],["child(3",{"_index":1973,"title":{},"body":{"components/TableComponent.html":{}}}],["child(even",{"_index":1980,"title":{},"body":{"components/TableComponent.html":{}}}],["choice",{"_index":751,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["choices",{"_index":652,"title":{},"body":{"interfaces/Contact.html":{},"interfaces/Note.html":{},"components/NoteListComponent.html":{},"components/TasksComponent.html":{}}}],["chrome",{"_index":1986,"title":{},"body":{"components/TableComponent.html":{}}}],["class",{"_index":150,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"modules/AnalyticsModule.html":{},"modules/AnalyticsRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"components/ButtonComponent.html":{},"modules/CardsModule.html":{},"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"injectables/ContactEffects.html":{},"components/ContactListComponent.html":{},"injectables/ContactMetricService.html":{},"modules/ContactRoutingModule.html":{},"modules/ContactsModule.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"injectables/MetricsService.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"injectables/NoteEffects.html":{},"components/NoteListComponent.html":{},"modules/NotesModule.html":{},"modules/NotesRoutingModule.html":{},"pipes/RatingColorPipe.html":{},"modules/SharedModule.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"modules/TabModule.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"injectables/TaskEffects.html":{},"pipes/TaskEnumDisplayPipe.html":{},"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{},"components/TasksComponent.html":{}}}],["clicked",{"_index":616,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContactListComponent.html":{},"components/HeaderComponent.html":{}}}],["clients",{"_index":2319,"title":{},"body":{"index.html":{}}}],["clone",{"_index":2389,"title":{},"body":{"index.html":{}}}],["close",{"_index":930,"title":{},"body":{"components/ContactListComponent.html":{}}}],["closed",{"_index":2274,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cluster_analyticsmodule",{"_index":284,"title":{},"body":{"modules/AnalyticsModule.html":{},"overview.html":{}}}],["cluster_analyticsmodule_declarations",{"_index":286,"title":{},"body":{"modules/AnalyticsModule.html":{},"overview.html":{}}}],["cluster_analyticsmodule_imports",{"_index":285,"title":{},"body":{"modules/AnalyticsModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":363,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":366,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":364,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_cardsmodule",{"_index":635,"title":{},"body":{"modules/CardsModule.html":{},"overview.html":{}}}],["cluster_cardsmodule_declarations",{"_index":636,"title":{},"body":{"modules/CardsModule.html":{},"overview.html":{}}}],["cluster_cardsmodule_exports",{"_index":637,"title":{},"body":{"modules/CardsModule.html":{},"overview.html":{}}}],["cluster_cardsmodule_imports",{"_index":638,"title":{},"body":{"modules/CardsModule.html":{},"overview.html":{}}}],["cluster_contactsmodule",{"_index":1091,"title":{},"body":{"modules/ContactsModule.html":{},"overview.html":{}}}],["cluster_contactsmodule_declarations",{"_index":1093,"title":{},"body":{"modules/ContactsModule.html":{},"overview.html":{}}}],["cluster_contactsmodule_imports",{"_index":1092,"title":{},"body":{"modules/ContactsModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":1103,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_declarations",{"_index":1105,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_exports",{"_index":1104,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":1106,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_layoutmodule",{"_index":1448,"title":{},"body":{"modules/LayoutModule.html":{},"overview.html":{}}}],["cluster_layoutmodule_declarations",{"_index":1451,"title":{},"body":{"modules/LayoutModule.html":{},"overview.html":{}}}],["cluster_layoutmodule_exports",{"_index":1449,"title":{},"body":{"modules/LayoutModule.html":{},"overview.html":{}}}],["cluster_layoutmodule_imports",{"_index":1450,"title":{},"body":{"modules/LayoutModule.html":{}}}],["cluster_materialmodule",{"_index":1485,"title":{},"body":{"modules/MaterialModule.html":{},"overview.html":{}}}],["cluster_materialmodule_exports",{"_index":1487,"title":{},"body":{"modules/MaterialModule.html":{},"overview.html":{}}}],["cluster_materialmodule_imports",{"_index":1486,"title":{},"body":{"modules/MaterialModule.html":{},"overview.html":{}}}],["cluster_notesmodule",{"_index":1717,"title":{},"body":{"modules/NotesModule.html":{},"overview.html":{}}}],["cluster_notesmodule_declarations",{"_index":1719,"title":{},"body":{"modules/NotesModule.html":{},"overview.html":{}}}],["cluster_notesmodule_imports",{"_index":1718,"title":{},"body":{"modules/NotesModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":1743,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":1746,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1744,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_imports",{"_index":1745,"title":{},"body":{"modules/SharedModule.html":{}}}],["cluster_tabmodule",{"_index":1842,"title":{},"body":{"modules/TabModule.html":{},"overview.html":{}}}],["cluster_tabmodule_declarations",{"_index":1843,"title":{},"body":{"modules/TabModule.html":{},"overview.html":{}}}],["cluster_tabmodule_exports",{"_index":1845,"title":{},"body":{"modules/TabModule.html":{},"overview.html":{}}}],["cluster_tabmodule_imports",{"_index":1844,"title":{},"body":{"modules/TabModule.html":{}}}],["cluster_taskmodule",{"_index":2057,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_declarations",{"_index":2058,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_imports",{"_index":2059,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["color",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"components/ContactDetailComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{}}}],["color.pipe",{"_index":1101,"title":{},"body":{"modules/ContactsModule.html":{}}}],["color.pipe.ts",{"_index":1740,"title":{},"body":{"pipes/RatingColorPipe.html":{},"coverage.html":{}}}],["color.pipe.ts:8",{"_index":1742,"title":{},"body":{"pipes/RatingColorPipe.html":{}}}],["column",{"_index":763,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/DashboardComponent.html":{},"components/NoteDetailComponent.html":{}}}],["columnheadernames",{"_index":892,"title":{},"body":{"components/ContactListComponent.html":{}}}],["columns",{"_index":759,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/TableComponent.html":{},"components/TasksComponent.html":{}}}],["columns]=\"columns",{"_index":1647,"title":{},"body":{"components/NoteListComponent.html":{},"components/TasksComponent.html":{}}}],["columns]=\"columnsfortable",{"_index":879,"title":{},"body":{"components/ContactListComponent.html":{}}}],["columnsfortable",{"_index":893,"title":{},"body":{"components/ContactListComponent.html":{}}}],["comes",{"_index":2362,"title":{},"body":{"index.html":{}}}],["commit",{"_index":2412,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":644,"title":{},"body":{"modules/CardsModule.html":{},"modules/CoreModule.html":{},"modules/NotesModule.html":{},"modules/SharedModule.html":{},"modules/TabModule.html":{},"miscellaneous/variables.html":{}}}],["community",{"_index":2398,"title":{},"body":{"index.html":{}}}],["companies",{"_index":2326,"title":{},"body":{"index.html":{}}}],["company",{"_index":649,"title":{},"body":{"interfaces/Contact.html":{}}}],["complete",{"_index":2276,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["component",{"_index":0,"title":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"modules/ContactRoutingModule.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"modules/NotesRoutingModule.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["component:addtaskcomponent",{"_index":2072,"title":{},"body":{"modules/TaskRoutingModule.html":{}}}],["component:dashboardcomponent",{"_index":308,"title":{},"body":{"modules/AnalyticsRoutingModule.html":{}}}],["component:logincomponent",{"_index":426,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:taskscomponent",{"_index":2070,"title":{},"body":{"modules/TaskRoutingModule.html":{}}}],["component_template",{"_index":162,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{},"overview.html":{}}}],["components/add",{"_index":1055,"title":{},"body":{"modules/ContactRoutingModule.html":{},"modules/ContactsModule.html":{},"modules/NotesModule.html":{},"modules/NotesRoutingModule.html":{},"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{}}}],["components/contact",{"_index":1097,"title":{},"body":{"modules/ContactsModule.html":{}}}],["components/contacts/contacts.component",{"_index":1057,"title":{},"body":{"modules/ContactRoutingModule.html":{},"modules/ContactsModule.html":{}}}],["components/dashboard/dashboard.component",{"_index":296,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AnalyticsRoutingModule.html":{}}}],["components/note",{"_index":1728,"title":{},"body":{"modules/NotesModule.html":{}}}],["components/notes/notes.component",{"_index":1726,"title":{},"body":{"modules/NotesModule.html":{},"modules/NotesRoutingModule.html":{}}}],["components/task",{"_index":2066,"title":{},"body":{"modules/TaskModule.html":{}}}],["components/tasks/tasks.component",{"_index":2064,"title":{},"body":{"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{}}}],["concatmap",{"_index":857,"title":{},"body":{"injectables/ContactEffects.html":{},"injectables/NoteEffects.html":{},"injectables/TaskEffects.html":{}}}],["concatmap((action",{"_index":849,"title":{},"body":{"injectables/ContactEffects.html":{},"injectables/NoteEffects.html":{},"injectables/TaskEffects.html":{}}}],["concatmap(action",{"_index":841,"title":{},"body":{"injectables/ContactEffects.html":{},"injectables/NoteEffects.html":{},"injectables/TaskEffects.html":{}}}],["concept",{"_index":1934,"title":{},"body":{"components/TableComponent.html":{},"index.html":{}}}],["connect",{"_index":2423,"title":{},"body":{"index.html":{}}}],["console.dir(contacttosubmit",{"_index":580,"title":{},"body":{"injectables/BackendService.html":{}}}],["console.dir(notetosubmit",{"_index":598,"title":{},"body":{"injectables/BackendService.html":{}}}],["console.dir(tasktosubmit",{"_index":589,"title":{},"body":{"injectables/BackendService.html":{}}}],["console.dir(this.controlstocreate",{"_index":1326,"title":{},"body":{"components/FormComponent.html":{}}}],["console.dir(this.linksneeded",{"_index":1908,"title":{},"body":{"components/TableComponent.html":{}}}],["console.dir(this.pipesneeded",{"_index":1909,"title":{},"body":{"components/TableComponent.html":{}}}],["console.dir(this.user",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(\"found",{"_index":1345,"title":{},"body":{"components/FormComponent.html":{}}}],["console.log(\"need",{"_index":1033,"title":{},"body":{"components/ContactListComponent.html":{},"components/NoteListComponent.html":{},"components/TasksComponent.html":{}}}],["console.log({result",{"_index":1027,"title":{},"body":{"components/ContactListComponent.html":{}}}],["console.log({user",{"_index":340,"title":{},"body":{"components/AppComponent.html":{}}}],["const",{"_index":306,"title":{},"body":{"modules/AnalyticsRoutingModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"components/ContactListComponent.html":{},"modules/ContactRoutingModule.html":{},"interfaces/ContactState.html":{},"modules/MaterialModule.html":{},"injectables/MetricsService.html":{},"components/NoteListComponent.html":{},"interfaces/NoteState.html":{},"modules/NotesRoutingModule.html":{},"modules/SharedModule.html":{},"components/TableComponent.html":{},"modules/TaskRoutingModule.html":{},"interfaces/TaskState.html":{},"components/TasksComponent.html":{}}}],["constructor",{"_index":34,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"injectables/ContactEffects.html":{},"components/ContactListComponent.html":{},"injectables/ContactMetricService.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MetricsService.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"injectables/NoteEffects.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"injectables/TaskEffects.html":{},"components/TasksComponent.html":{}}}],["constructor(actions",{"_index":835,"title":{},"body":{"injectables/ContactEffects.html":{},"injectables/NoteEffects.html":{},"injectables/TaskEffects.html":{}}}],["constructor(afauth",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(auth",{"_index":320,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(authservice",{"_index":454,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["constructor(data",{"_index":667,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["constructor(firestore",{"_index":546,"title":{},"body":{"injectables/BackendService.html":{}}}],["constructor(metricservice",{"_index":1136,"title":{},"body":{"components/DashboardComponent.html":{}}}],["constructor(private",{"_index":155,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/ContactEffects.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"injectables/NoteEffects.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"injectables/TaskEffects.html":{},"components/TasksComponent.html":{}}}],["constructor(store",{"_index":35,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/ContactListComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TableComponent.html":{},"components/TasksComponent.html":{}}}],["contact",{"_index":18,"title":{"interfaces/Contact.html":{}},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"injectables/BackendService.html":{},"components/ButtonComponent.html":{},"interfaces/Contact.html":{},"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"injectables/ContactEffects.html":{},"components/ContactListComponent.html":{},"modules/ContactRoutingModule.html":{},"interfaces/ContactState.html":{},"components/DashboardComponent.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MetricsService.html":{},"components/ModalCardComponent.html":{},"interfaces/Note.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"interfaces/Task.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["contact'},{'name",{"_index":163,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["contact.actions",{"_index":870,"title":{},"body":{"injectables/ContactEffects.html":{},"interfaces/ContactState.html":{}}}],["contact.birthdate",{"_index":741,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["contact.component",{"_index":1056,"title":{},"body":{"modules/ContactRoutingModule.html":{},"modules/ContactsModule.html":{}}}],["contact.component.scss",{"_index":20,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.ts",{"_index":11,"title":{},"body":{"components/AddContactComponent.html":{},"coverage.html":{}}}],["contact.component.ts:158",{"_index":38,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.ts:162",{"_index":44,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.ts:167",{"_index":48,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.ts:37",{"_index":115,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.ts:54",{"_index":122,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.ts:62",{"_index":129,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.ts:70",{"_index":135,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.ts:77",{"_index":138,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.ts:83",{"_index":86,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.contactname",{"_index":253,"title":{},"body":{"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/ContactDetailComponent.html":{}}}],["contact.description",{"_index":738,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["contact.email",{"_index":739,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["contact.id",{"_index":251,"title":{},"body":{"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{}}}],["contact.otherdate",{"_index":742,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["contact.phone",{"_index":740,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["contact/add",{"_index":10,"title":{},"body":{"components/AddContactComponent.html":{},"modules/ContactRoutingModule.html":{},"modules/ContactsModule.html":{},"coverage.html":{}}}],["contact:any",{"_index":1595,"title":{},"body":{"interfaces/Note.html":{},"interfaces/Task.html":{}}}],["contact:event",{"_index":1941,"title":{},"body":{"components/TableComponent.html":{}}}],["contactactions",{"_index":2145,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contactactiontypes",{"_index":2189,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["contactactiontypes.add_contact",{"_index":2453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contactactiontypes.add_contact_fail",{"_index":2455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contactactiontypes.add_contact_success",{"_index":2457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contactactiontypes.delete_contact",{"_index":2461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contactactiontypes.delete_contact_fail",{"_index":2463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contactactiontypes.delete_contact_success",{"_index":2465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contactactiontypes.load_contacts_fail",{"_index":2448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contactactiontypes.load_contacts_success",{"_index":2451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contactactiontypes.update_contact",{"_index":2459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contactadapter",{"_index":1066,"title":{},"body":{"interfaces/ContactState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["contactadapter.addone(action.contact",{"_index":1078,"title":{},"body":{"interfaces/ContactState.html":{},"miscellaneous/variables.html":{}}}],["contactadapter.getinitialstate",{"_index":1068,"title":{},"body":{"interfaces/ContactState.html":{},"miscellaneous/variables.html":{}}}],["contactadapter.getselectors",{"_index":1089,"title":{},"body":{"interfaces/ContactState.html":{},"miscellaneous/variables.html":{}}}],["contactadapter.removeone(action.contact,state",{"_index":1085,"title":{},"body":{"interfaces/ContactState.html":{},"miscellaneous/variables.html":{}}}],["contactadapter.setall(action.contacts",{"_index":1074,"title":{},"body":{"interfaces/ContactState.html":{},"miscellaneous/variables.html":{}}}],["contactadapter.updateone(action.contact,state",{"_index":1082,"title":{},"body":{"interfaces/ContactState.html":{},"miscellaneous/variables.html":{}}}],["contactdetailcomponent",{"_index":172,"title":{"components/ContactDetailComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"modules/ContactsModule.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactdetailtranslator",{"_index":772,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{}}}],["contactdetailtranslatorpipe",{"_index":768,"title":{"pipes/ContactDetailTranslatorPipe.html":{}},"body":{"pipes/ContactDetailTranslatorPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["contactdistribution",{"_index":1121,"title":{},"body":{"components/DashboardComponent.html":{}}}],["contactdistribution.foreach(distribution",{"_index":1217,"title":{},"body":{"components/DashboardComponent.html":{}}}],["contacteffects",{"_index":829,"title":{"injectables/ContactEffects.html":{}},"body":{"injectables/ContactEffects.html":{},"coverage.html":{}}}],["contactfeaturekey",{"_index":1065,"title":{},"body":{"interfaces/ContactState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["contactfilter",{"_index":905,"title":{},"body":{"components/ContactListComponent.html":{}}}],["contactid",{"_index":568,"title":{},"body":{"injectables/BackendService.html":{}}}],["contactlistcomponent",{"_index":174,"title":{"components/ContactListComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"modules/ContactRoutingModule.html":{},"modules/ContactsModule.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactmetricservice",{"_index":659,"title":{"injectables/ContactMetricService.html":{}},"body":{"components/ContactDetailComponent.html":{},"injectables/ContactMetricService.html":{},"coverage.html":{}}}],["contactname",{"_index":54,"title":{},"body":{"components/AddContactComponent.html":{},"interfaces/Contact.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{}}}],["contactoptions",{"_index":803,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{},"components/ContactListComponent.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"miscellaneous/enumerations.html":{}}}],["contactoptions[0",{"_index":808,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{},"components/ContactListComponent.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{}}}],["contactoptions[1",{"_index":811,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{},"components/ContactListComponent.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{}}}],["contactoptions[2",{"_index":816,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{},"components/ContactListComponent.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{}}}],["contactoptions[3",{"_index":818,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{},"components/ContactListComponent.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{}}}],["contactoptions[4",{"_index":822,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{},"components/ContactListComponent.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{}}}],["contactreducer",{"_index":1070,"title":{},"body":{"interfaces/ContactState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["contactroutingmodule",{"_index":1053,"title":{"modules/ContactRoutingModule.html":{}},"body":{"modules/ContactRoutingModule.html":{},"modules/ContactsModule.html":{},"modules.html":{},"overview.html":{}}}],["contacts",{"_index":212,"title":{},"body":{"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/ContactEffects.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"injectables/MetricsService.html":{},"components/SidenavComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["contacts.component.scss",{"_index":875,"title":{},"body":{"components/ContactListComponent.html":{}}}],["contacts.foreach(contact",{"_index":1589,"title":{},"body":{"injectables/MetricsService.html":{}}}],["contacts.map(contact",{"_index":250,"title":{},"body":{"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{}}}],["contacts.routing.module",{"_index":1098,"title":{},"body":{"modules/ContactsModule.html":{}}}],["contacts.sort((a",{"_index":1574,"title":{},"body":{"injectables/MetricsService.html":{}}}],["contactsmodule",{"_index":1090,"title":{"modules/ContactsModule.html":{}},"body":{"modules/ContactsModule.html":{},"modules.html":{},"overview.html":{}}}],["contactsretrieved",{"_index":894,"title":{},"body":{"components/ContactListComponent.html":{}}}],["contactsretrievedsaved",{"_index":895,"title":{},"body":{"components/ContactListComponent.html":{}}}],["contactsretrievedsub",{"_index":896,"title":{},"body":{"components/ContactListComponent.html":{}}}],["contactstate",{"_index":439,"title":{"interfaces/ContactState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/ContactState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["contactsub",{"_index":1122,"title":{},"body":{"components/DashboardComponent.html":{}}}],["contacttosubmit",{"_index":577,"title":{},"body":{"injectables/BackendService.html":{}}}],["contacttosubmit['id",{"_index":578,"title":{},"body":{"injectables/BackendService.html":{}}}],["contacttype",{"_index":58,"title":{},"body":{"components/AddContactComponent.html":{},"interfaces/Contact.html":{},"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"injectables/MetricsService.html":{},"miscellaneous/enumerations.html":{}}}],["contacttype[0",{"_index":87,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{}}}],["contacttype[1",{"_index":89,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{}}}],["contacttype[10",{"_index":106,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{}}}],["contacttype[11",{"_index":108,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{}}}],["contacttype[12",{"_index":110,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{}}}],["contacttype[13",{"_index":112,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{}}}],["contacttype[14",{"_index":114,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{}}}],["contacttype[2",{"_index":90,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{}}}],["contacttype[3",{"_index":92,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{}}}],["contacttype[4",{"_index":94,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{}}}],["contacttype[5",{"_index":96,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{}}}],["contacttype[6",{"_index":98,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{}}}],["contacttype[7",{"_index":100,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{}}}],["contacttype[8",{"_index":102,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{}}}],["contacttype[9",{"_index":104,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{}}}],["contacttype[value",{"_index":809,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{}}}],["contacttypechoices",{"_index":26,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{}}}],["contacttypefilter",{"_index":897,"title":{},"body":{"components/ContactListComponent.html":{}}}],["contacttypes",{"_index":898,"title":{},"body":{"components/ContactListComponent.html":{}}}],["contain",{"_index":1809,"title":{},"body":{"components/SidenavComponent.html":{}}}],["container",{"_index":345,"title":{},"body":{"components/AppComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TableComponent.html":{}}}],["content",{"_index":356,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/HeaderComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/SidenavComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{}}}],["contents",{"_index":2303,"title":{},"body":{"index.html":{}}}],["context",{"_index":145,"title":{},"body":{"components/AddContactComponent.html":{},"interfaces/Contact.html":{},"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"injectables/MetricsService.html":{},"miscellaneous/enumerations.html":{}}}],["context[0",{"_index":116,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{}}}],["context[1",{"_index":117,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{}}}],["context[2",{"_index":118,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{}}}],["context[3",{"_index":119,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{}}}],["context[4",{"_index":120,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{}}}],["context[5",{"_index":121,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{}}}],["context[sortedenvironments[0].value",{"_index":1588,"title":{},"body":{"injectables/MetricsService.html":{}}}],["context[value",{"_index":823,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{}}}],["contextknownfrom",{"_index":27,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{}}}],["contributing",{"_index":2308,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":2397,"title":{},"body":{"index.html":{}}}],["control",{"_index":2001,"title":{},"body":{"components/TableComponent.html":{}}}],["control.setvalue(this.controlstocreate[i].default",{"_index":1353,"title":{},"body":{"components/FormComponent.html":{}}}],["control.type",{"_index":1347,"title":{},"body":{"components/FormComponent.html":{}}}],["controlname",{"_index":53,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/ContactDetailComponent.html":{},"interfaces/FormSetupModel.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["controlscreated",{"_index":1306,"title":{},"body":{"components/FormComponent.html":{}}}],["controlstocreate",{"_index":1302,"title":{},"body":{"components/FormComponent.html":{}}}],["controlstocreate.foreach(c",{"_index":1329,"title":{},"body":{"components/FormComponent.html":{}}}],["controlstocreate[i].displayname",{"_index":1361,"title":{},"body":{"components/FormComponent.html":{}}}],["convenience",{"_index":2384,"title":{},"body":{"index.html":{}}}],["conversations",{"_index":2360,"title":{},"body":{"index.html":{}}}],["core/auth/guards/auth.guard",{"_index":419,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/auth/login/login.component",{"_index":420,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/auth/models/users",{"_index":1420,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["core/auth/services/auth.service",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"injectables/BackendService.html":{}}}],["core/core.module",{"_index":384,"title":{},"body":{"modules/AppModule.html":{}}}],["core/layout/sidenav/sidenav.component",{"_index":334,"title":{},"body":{"components/AppComponent.html":{}}}],["core/services/backend.service",{"_index":871,"title":{},"body":{"injectables/ContactEffects.html":{},"injectables/NoteEffects.html":{},"injectables/TaskEffects.html":{}}}],["coremodule",{"_index":368,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["cousin",{"_index":2228,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cover",{"_index":1468,"title":{},"body":{"components/LoginComponent.html":{}}}],["coverage",{"_index":2127,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["coworker",{"_index":2234,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create",{"_index":2404,"title":{},"body":{"index.html":{}}}],["createaction",{"_index":2447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction(contactactiontypes.load_contacts",{"_index":2445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction(noteactiontypes.load_notes",{"_index":2481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction(taskactiontypes.load_task",{"_index":2508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createeffect",{"_index":838,"title":{},"body":{"injectables/ContactEffects.html":{},"injectables/NoteEffects.html":{},"injectables/TaskEffects.html":{}}}],["createentityadapter",{"_index":1063,"title":{},"body":{"interfaces/ContactState.html":{},"interfaces/NoteState.html":{},"interfaces/TaskState.html":{},"miscellaneous/variables.html":{}}}],["createfeatureselector",{"_index":2504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createreducer",{"_index":1064,"title":{},"body":{"interfaces/ContactState.html":{},"interfaces/NoteState.html":{},"interfaces/TaskState.html":{},"miscellaneous/variables.html":{}}}],["createselector",{"_index":2503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creation",{"_index":2366,"title":{},"body":{"index.html":{}}}],["credential",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{}}}],["credential.additionaluserinfo?.isnewuser",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{}}}],["critical",{"_index":2267,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["crm",{"_index":330,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["crm.appspot.com",{"_index":2476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["crm.firebaseapp.com",{"_index":2473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["crm.git",{"_index":2392,"title":{},"body":{"index.html":{}}}],["crms",{"_index":2311,"title":{},"body":{"index.html":{}}}],["ctype",{"_index":1196,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/MetricsService.html":{}}}],["current",{"_index":2318,"title":{},"body":{"index.html":{}}}],["cursive",{"_index":1479,"title":{},"body":{"components/LoginComponent.html":{}}}],["cursor",{"_index":1997,"title":{},"body":{"components/TableComponent.html":{}}}],["custom",{"_index":977,"title":{},"body":{"components/ContactListComponent.html":{},"components/FormComponent.html":{}}}],["custom_elements_schema",{"_index":1491,"title":{},"body":{"modules/MaterialModule.html":{}}}],["d",{"_index":1006,"title":{},"body":{"components/ContactListComponent.html":{}}}],["d2691e",{"_index":1168,"title":{},"body":{"components/DashboardComponent.html":{}}}],["d2b48c",{"_index":1163,"title":{},"body":{"components/DashboardComponent.html":{}}}],["daa520",{"_index":1166,"title":{},"body":{"components/DashboardComponent.html":{}}}],["darker",{"_index":1262,"title":{},"body":{"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/TableComponent.html":{}}}],["dashboard",{"_index":1112,"title":{},"body":{"components/DashboardComponent.html":{},"components/SidenavComponent.html":{}}}],["dashboard'},{'name",{"_index":177,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["dashboard.component.html",{"_index":1114,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":1113,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcomponent",{"_index":176,"title":{"components/DashboardComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"modules/AnalyticsModule.html":{},"modules/AnalyticsRoutingModule.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{},"index.html":{}}}],["data.map(d",{"_index":1005,"title":{},"body":{"components/ContactListComponent.html":{}}}],["data]=\"contactsretrieved",{"_index":878,"title":{},"body":{"components/ContactListComponent.html":{}}}],["data]=\"data",{"_index":1646,"title":{},"body":{"components/NoteListComponent.html":{},"components/TasksComponent.html":{}}}],["database",{"_index":2338,"title":{},"body":{"index.html":{}}}],["datasaved",{"_index":1652,"title":{},"body":{"components/NoteListComponent.html":{},"components/TableComponent.html":{},"components/TasksComponent.html":{}}}],["datasource",{"_index":1853,"title":{},"body":{"components/TableComponent.html":{}}}],["datasub",{"_index":1653,"title":{},"body":{"components/NoteListComponent.html":{},"components/TasksComponent.html":{}}}],["date",{"_index":76,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"interfaces/Day.html":{},"components/FormComponent.html":{}}}],["date()).diff(moment(new",{"_index":1008,"title":{},"body":{"components/ContactListComponent.html":{}}}],["date(d.birthdate",{"_index":1009,"title":{},"body":{"components/ContactListComponent.html":{}}}],["date(this.controlscreated[i].value)).format('ll",{"_index":1350,"title":{},"body":{"components/FormComponent.html":{}}}],["dates",{"_index":2379,"title":{},"body":{"index.html":{}}}],["day",{"_index":651,"title":{"interfaces/Day.html":{}},"body":{"interfaces/Contact.html":{},"interfaces/Day.html":{},"coverage.html":{}}}],["days",{"_index":2126,"title":{},"body":{"interfaces/User.html":{}}}],["deb887",{"_index":1162,"title":{},"body":{"components/DashboardComponent.html":{}}}],["deceased",{"_index":2272,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["decisions",{"_index":2345,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":293,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AppModule.html":{},"modules/CardsModule.html":{},"modules/ContactsModule.html":{},"modules/CoreModule.html":{},"modules/LayoutModule.html":{},"modules/MaterialModule.html":{},"modules/NotesModule.html":{},"modules/SharedModule.html":{},"modules/TabModule.html":{},"modules/TaskModule.html":{}}}],["decoration",{"_index":756,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["decorators",{"_index":327,"title":{},"body":{"components/AppComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/NoteDetailComponent.html":{},"components/SidenavComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{}}}],["deep",{"_index":1376,"title":{},"body":{"components/FormComponent.html":{},"components/TabComponent.html":{}}}],["default",{"_index":50,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"injectables/ContactEffects.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"interfaces/FormSetupModel.html":{},"components/NoteDetailComponent.html":{},"injectables/NoteEffects.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"injectables/TaskEffects.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":37,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"injectables/ContactEffects.html":{},"components/ContactListComponent.html":{},"injectables/ContactMetricService.html":{},"components/DashboardComponent.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MetricsService.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"injectables/NoteEffects.html":{},"components/NoteListComponent.html":{},"pipes/RatingColorPipe.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"injectables/TaskEffects.html":{},"pipes/TaskEnumDisplayPipe.html":{},"components/TasksComponent.html":{}}}],["delete",{"_index":1083,"title":{},"body":{"interfaces/ContactState.html":{},"components/NoteListComponent.html":{},"interfaces/NoteState.html":{},"components/TableComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["delete_contact",{"_index":2218,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["delete_contact_fail",{"_index":2219,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["delete_contact_success",{"_index":2220,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["delete_note",{"_index":2257,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["delete_note_fail",{"_index":2258,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["delete_note_success",{"_index":2259,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["delete_task",{"_index":2285,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["delete_task_fail",{"_index":2286,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["delete_task_success",{"_index":2287,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["deletecontact",{"_index":2460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deletecontactfail",{"_index":2462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deletecontactindb",{"_index":536,"title":{},"body":{"injectables/BackendService.html":{},"components/ContactListComponent.html":{}}}],["deletecontactindb(contact",{"_index":554,"title":{},"body":{"injectables/BackendService.html":{}}}],["deletecontactindb(event",{"_index":916,"title":{},"body":{"components/ContactListComponent.html":{}}}],["deletecontacts",{"_index":832,"title":{},"body":{"injectables/ContactEffects.html":{}}}],["deletecontactsuccess",{"_index":2464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deletenote",{"_index":1657,"title":{},"body":{"components/NoteListComponent.html":{},"miscellaneous/variables.html":{}}}],["deletenote(event",{"_index":1661,"title":{},"body":{"components/NoteListComponent.html":{}}}],["deletenotefail",{"_index":2499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deletenoteindb",{"_index":537,"title":{},"body":{"injectables/BackendService.html":{}}}],["deletenoteindb(note",{"_index":556,"title":{},"body":{"injectables/BackendService.html":{}}}],["deletenotes",{"_index":1615,"title":{},"body":{"injectables/NoteEffects.html":{}}}],["deletenotesuccess",{"_index":2501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deletetask",{"_index":2525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deletetaskfail",{"_index":2527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deletetaskindb",{"_index":538,"title":{},"body":{"injectables/BackendService.html":{},"components/TasksComponent.html":{}}}],["deletetaskindb(event",{"_index":2095,"title":{},"body":{"components/TasksComponent.html":{}}}],["deletetaskindb(task",{"_index":558,"title":{},"body":{"injectables/BackendService.html":{}}}],["deletetasks",{"_index":2023,"title":{},"body":{"injectables/TaskEffects.html":{}}}],["deletetasksuccess",{"_index":2529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demo",{"_index":2298,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":283,"title":{"dependencies.html":{}},"body":{"modules/AnalyticsModule.html":{},"modules/AppModule.html":{},"modules/CardsModule.html":{},"modules/ContactsModule.html":{},"modules/CoreModule.html":{},"modules/LayoutModule.html":{},"modules/MaterialModule.html":{},"modules/NotesModule.html":{},"modules/SharedModule.html":{},"modules/TabModule.html":{},"modules/TaskModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":84,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddTaskComponent.html":{},"interfaces/Contact.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"interfaces/Task.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["detail",{"_index":656,"title":{},"body":{"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"components/ContactListComponent.html":{},"components/NoteDetailComponent.html":{},"modules/SharedModule.html":{},"components/TaskDetailComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["detail'},{'name",{"_index":173,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["detail.component",{"_index":975,"title":{},"body":{"components/ContactListComponent.html":{},"modules/ContactsModule.html":{},"components/NoteListComponent.html":{},"modules/NotesModule.html":{},"components/TableComponent.html":{},"modules/TaskModule.html":{},"components/TasksComponent.html":{}}}],["detail.component.html",{"_index":658,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["detail.component.scss",{"_index":657,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["detail.component.ts",{"_index":655,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:15",{"_index":2013,"title":{},"body":{"components/TaskDetailComponent.html":{}}}],["detail.component.ts:16",{"_index":2015,"title":{},"body":{"components/TaskDetailComponent.html":{}}}],["detail.component.ts:18",{"_index":1602,"title":{},"body":{"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["detail.component.ts:19",{"_index":1603,"title":{},"body":{"components/NoteDetailComponent.html":{}}}],["detail.component.ts:198",{"_index":674,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["detail.component.ts:20",{"_index":1604,"title":{},"body":{"components/NoteDetailComponent.html":{}}}],["detail.component.ts:21",{"_index":686,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["detail.component.ts:22",{"_index":690,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/NoteDetailComponent.html":{}}}],["detail.component.ts:23",{"_index":682,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["detail.component.ts:25",{"_index":683,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["detail.component.ts:26",{"_index":676,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["detail.component.ts:27",{"_index":693,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["detail.component.ts:28",{"_index":688,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/NoteDetailComponent.html":{}}}],["detail.component.ts:31",{"_index":678,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["detail.component.ts:32",{"_index":2014,"title":{},"body":{"components/TaskDetailComponent.html":{}}}],["detail.component.ts:35",{"_index":1605,"title":{},"body":{"components/NoteDetailComponent.html":{}}}],["detail.component.ts:37",{"_index":2012,"title":{},"body":{"components/TaskDetailComponent.html":{}}}],["detail.component.ts:40",{"_index":1599,"title":{},"body":{"components/NoteDetailComponent.html":{}}}],["detail.component.ts:43",{"_index":1601,"title":{},"body":{"components/NoteDetailComponent.html":{}}}],["detail.component.ts:48",{"_index":679,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/NoteDetailComponent.html":{}}}],["detail.component.ts:56",{"_index":684,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["detail.component.ts:64",{"_index":689,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["detail.component.ts:68",{"_index":2009,"title":{},"body":{"components/TaskDetailComponent.html":{}}}],["detail.component.ts:71",{"_index":691,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["detail.component.ts:75",{"_index":2010,"title":{},"body":{"components/TaskDetailComponent.html":{}}}],["detail.component.ts:76",{"_index":692,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["detail.component.ts:77",{"_index":687,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["detail.component.ts:80",{"_index":671,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["detail.component.ts:81",{"_index":2011,"title":{},"body":{"components/TaskDetailComponent.html":{}}}],["detail.component.ts:83",{"_index":681,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["detail.component.ts:87",{"_index":1600,"title":{},"body":{"components/NoteDetailComponent.html":{}}}],["detail.component.ts:89",{"_index":677,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["detail.component.ts:94",{"_index":672,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["detail/contact",{"_index":654,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"modules/ContactsModule.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["detail/note",{"_index":1597,"title":{},"body":{"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"modules/NotesModule.html":{},"coverage.html":{}}}],["detail/task",{"_index":2008,"title":{},"body":{"components/TaskDetailComponent.html":{},"modules/TaskModule.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["detailcontact",{"_index":906,"title":{},"body":{"components/ContactListComponent.html":{}}}],["detailcontact(event",{"_index":919,"title":{},"body":{"components/ContactListComponent.html":{}}}],["detailnote",{"_index":1658,"title":{},"body":{"components/NoteListComponent.html":{}}}],["detailnote(event",{"_index":1664,"title":{},"body":{"components/NoteListComponent.html":{}}}],["details",{"_index":733,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["detailtask",{"_index":2092,"title":{},"body":{"components/TasksComponent.html":{}}}],["detailtask(event",{"_index":2098,"title":{},"body":{"components/TasksComponent.html":{}}}],["developer",{"_index":2307,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":389,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["diagnosis",{"_index":660,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{}}}],["dialog",{"_index":899,"title":{},"body":{"components/ContactListComponent.html":{},"components/NoteListComponent.html":{},"components/TasksComponent.html":{}}}],["dialogref",{"_index":669,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["dialogref.afterclosed().subscribe(result",{"_index":1026,"title":{},"body":{"components/ContactListComponent.html":{},"components/NoteListComponent.html":{},"components/TableComponent.html":{},"components/TasksComponent.html":{}}}],["different",{"_index":2350,"title":{},"body":{"index.html":{}}}],["directive",{"_index":160,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["directives",{"_index":202,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["disabled",{"_index":613,"title":{},"body":{"components/ButtonComponent.html":{}}}],["dispatch",{"_index":866,"title":{},"body":{"injectables/ContactEffects.html":{}}}],["display",{"_index":252,"title":{},"body":{"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/HeaderComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"modules/SharedModule.html":{},"components/SidenavComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{}}}],["display.ts",{"_index":1290,"title":{},"body":{"pipes/EnumUserDisplayTranslatorPipe.html":{},"pipes/TaskEnumDisplayPipe.html":{},"coverage.html":{}}}],["display.ts:10",{"_index":2054,"title":{},"body":{"pipes/TaskEnumDisplayPipe.html":{}}}],["display.ts:12",{"_index":1292,"title":{},"body":{"pipes/EnumUserDisplayTranslatorPipe.html":{}}}],["display:flex",{"_index":1426,"title":{},"body":{"components/HeaderComponent.html":{}}}],["display_translator",{"_index":1291,"title":{},"body":{"pipes/EnumUserDisplayTranslatorPipe.html":{}}}],["displayedcolumns",{"_index":1854,"title":{},"body":{"components/TableComponent.html":{}}}],["displayedcolumns[i",{"_index":1950,"title":{},"body":{"components/TableComponent.html":{}}}],["displayname",{"_index":52,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"injectables/AuthService.html":{},"components/ContactDetailComponent.html":{},"interfaces/FormSetupModel.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{},"interfaces/User.html":{}}}],["displaynames",{"_index":1654,"title":{},"body":{"components/NoteListComponent.html":{},"components/TableComponent.html":{},"components/TasksComponent.html":{}}}],["displaynames]=\"columnheadernames",{"_index":880,"title":{},"body":{"components/ContactListComponent.html":{}}}],["displaynames]=\"displaynames",{"_index":1648,"title":{},"body":{"components/NoteListComponent.html":{},"components/TasksComponent.html":{}}}],["distributed",{"_index":2418,"title":{},"body":{"index.html":{}}}],["distribution",{"_index":1223,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/MetricsService.html":{}}}],["distribution[contact.contacttype].value",{"_index":1590,"title":{},"body":{"injectables/MetricsService.html":{}}}],["doc(`${contactid}`).update(changes",{"_index":576,"title":{},"body":{"injectables/BackendService.html":{}}}],["doc(contact.id).delete",{"_index":584,"title":{},"body":{"injectables/BackendService.html":{}}}],["doc(contacttosubmit.id",{"_index":581,"title":{},"body":{"injectables/BackendService.html":{}}}],["doc(note.id).delete",{"_index":602,"title":{},"body":{"injectables/BackendService.html":{}}}],["doc(note.id).update(note",{"_index":595,"title":{},"body":{"injectables/BackendService.html":{}}}],["doc(notetosubmit.id",{"_index":599,"title":{},"body":{"injectables/BackendService.html":{}}}],["doc(task.id).delete",{"_index":593,"title":{},"body":{"injectables/BackendService.html":{}}}],["doc(task.id).update(task",{"_index":586,"title":{},"body":{"injectables/BackendService.html":{}}}],["doc(tasktosubmit.id",{"_index":590,"title":{},"body":{"injectables/BackendService.html":{}}}],["docs",{"_index":2296,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":2128,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["down",{"_index":2353,"title":{},"body":{"index.html":{}}}],["dragdropmodule",{"_index":1498,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["draining",{"_index":2243,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["drill",{"_index":2352,"title":{},"body":{"index.html":{}}}],["drop",{"_index":1500,"title":{},"body":{"modules/MaterialModule.html":{},"components/TableComponent.html":{}}}],["drop(event",{"_index":1879,"title":{},"body":{"components/TableComponent.html":{}}}],["dynamic",{"_index":2172,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":1002,"title":{},"body":{"components/ContactListComponent.html":{}}}],["easily",{"_index":2358,"title":{},"body":{"index.html":{}}}],["edge",{"_index":1793,"title":{},"body":{"components/SidenavComponent.html":{}}}],["edit",{"_index":737,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["edit__container",{"_index":1367,"title":{},"body":{"components/FormComponent.html":{}}}],["editconceptcontrols",{"_index":661,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["editing",{"_index":735,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["editnotecontrols",{"_index":1598,"title":{},"body":{"components/NoteDetailComponent.html":{}}}],["editopen",{"_index":662,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["efe0d8",{"_index":1802,"title":{},"body":{"components/SidenavComponent.html":{}}}],["effect",{"_index":2208,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["effectively",{"_index":2321,"title":{},"body":{"index.html":{}}}],["effectsmodule",{"_index":386,"title":{},"body":{"modules/AppModule.html":{},"modules/ContactsModule.html":{},"modules/NotesModule.html":{},"modules/SharedModule.html":{},"modules/TaskModule.html":{}}}],["effectsmodule.forfeature([fromconceptreducer.contacteffects",{"_index":1102,"title":{},"body":{"modules/ContactsModule.html":{}}}],["effectsmodule.forfeature([noteeffects",{"_index":1732,"title":{},"body":{"modules/NotesModule.html":{}}}],["effectsmodule.forfeature([taskeffects",{"_index":1766,"title":{},"body":{"modules/SharedModule.html":{},"modules/TaskModule.html":{},"miscellaneous/variables.html":{}}}],["effectsmodule.forroot",{"_index":393,"title":{},"body":{"modules/AppModule.html":{}}}],["elderly",{"_index":784,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{}}}],["element",{"_index":159,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["elements",{"_index":1429,"title":{},"body":{"components/HeaderComponent.html":{}}}],["ellipsis",{"_index":1977,"title":{},"body":{"components/TableComponent.html":{}}}],["email",{"_index":80,"title":{},"body":{"components/AddContactComponent.html":{},"injectables/AuthService.html":{},"interfaces/Contact.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/FormComponent.html":{},"interfaces/User.html":{},"index.html":{}}}],["empty",{"_index":846,"title":{},"body":{"injectables/ContactEffects.html":{},"injectables/NoteEffects.html":{},"injectables/TaskEffects.html":{}}}],["emulate",{"_index":2339,"title":{},"body":{"index.html":{}}}],["enc",{"_index":1407,"title":{},"body":{"components/HeaderComponent.html":{}}}],["enccrm",{"_index":16,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["encouragement",{"_index":329,"title":{},"body":{"components/AppComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":754,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{},"index.html":{}}}],["energy",{"_index":71,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{}}}],["energyhtml",{"_index":812,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{}}}],["energylevel",{"_index":73,"title":{},"body":{"components/AddContactComponent.html":{},"interfaces/Contact.html":{},"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"components/ContactListComponent.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"miscellaneous/enumerations.html":{}}}],["energylevel:'bolt",{"_index":787,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{}}}],["energylevel[0",{"_index":123,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{}}}],["energylevel[1",{"_index":124,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{}}}],["energylevel[2",{"_index":125,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{}}}],["energylevel[3",{"_index":126,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{}}}],["energylevel[4",{"_index":127,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{}}}],["energylevel[5",{"_index":128,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{}}}],["energylevel[value",{"_index":813,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{}}}],["energylevels",{"_index":28,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{}}}],["enhancement",{"_index":2368,"title":{},"body":{"index.html":{}}}],["enrich",{"_index":2346,"title":{},"body":{"index.html":{}}}],["entity",{"_index":1884,"title":{},"body":{"components/TableComponent.html":{}}}],["entitystate",{"_index":1060,"title":{},"body":{"interfaces/ContactState.html":{},"interfaces/NoteState.html":{},"interfaces/TaskState.html":{}}}],["entrycomponents",{"_index":1096,"title":{},"body":{"modules/ContactsModule.html":{},"modules/NotesModule.html":{},"modules/TaskModule.html":{}}}],["entrycomponents:[notedetailcomponent",{"_index":1733,"title":{},"body":{"modules/NotesModule.html":{}}}],["entrycomponents:[taskdetailcomponent",{"_index":2068,"title":{},"body":{"modules/TaskModule.html":{}}}],["enum",{"_index":934,"title":{},"body":{"components/ContactListComponent.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"modules/SharedModule.html":{},"pipes/TaskEnumDisplayPipe.html":{},"coverage.html":{}}}],["enumerations",{"_index":2188,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumuserdisplaytranslatorpipe",{"_index":1289,"title":{"pipes/EnumUserDisplayTranslatorPipe.html":{}},"body":{"pipes/EnumUserDisplayTranslatorPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["environment",{"_index":382,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":401,"title":{},"body":{"modules/AppModule.html":{}}}],["environments",{"_index":1581,"title":{},"body":{"injectables/MetricsService.html":{}}}],["environments.sort((a",{"_index":1585,"title":{},"body":{"injectables/MetricsService.html":{}}}],["environments/environment",{"_index":383,"title":{},"body":{"modules/AppModule.html":{}}}],["environments[friend.contacttype].value",{"_index":1583,"title":{},"body":{"injectables/MetricsService.html":{}}}],["error",{"_index":854,"title":{},"body":{"injectables/ContactEffects.html":{},"interfaces/ContactState.html":{},"injectables/NoteEffects.html":{},"interfaces/NoteState.html":{},"injectables/TaskEffects.html":{},"interfaces/TaskState.html":{},"miscellaneous/variables.html":{}}}],["event",{"_index":675,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["event.currentindex",{"_index":1927,"title":{},"body":{"components/TableComponent.html":{}}}],["event.id",{"_index":1021,"title":{},"body":{"components/ContactListComponent.html":{}}}],["event.previousindex",{"_index":1926,"title":{},"body":{"components/TableComponent.html":{}}}],["event.target",{"_index":1919,"title":{},"body":{"components/TableComponent.html":{}}}],["eventemitter",{"_index":623,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{},"components/TableComponent.html":{}}}],["explore",{"_index":2295,"title":{},"body":{"index.html":{}}}],["export",{"_index":149,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"modules/AnalyticsModule.html":{},"modules/AnalyticsRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"components/ButtonComponent.html":{},"modules/CardsModule.html":{},"interfaces/Contact.html":{},"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"injectables/ContactEffects.html":{},"components/ContactListComponent.html":{},"injectables/ContactMetricService.html":{},"modules/ContactRoutingModule.html":{},"interfaces/ContactState.html":{},"modules/ContactsModule.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"interfaces/Day.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"components/FormComponent.html":{},"interfaces/FormSetupModel.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"injectables/MetricsService.html":{},"components/ModalCardComponent.html":{},"interfaces/Note.html":{},"components/NoteDetailComponent.html":{},"injectables/NoteEffects.html":{},"components/NoteListComponent.html":{},"interfaces/NoteState.html":{},"modules/NotesModule.html":{},"modules/NotesRoutingModule.html":{},"pipes/RatingColorPipe.html":{},"modules/SharedModule.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"modules/TabModule.html":{},"components/TableComponent.html":{},"interfaces/Task.html":{},"components/TaskDetailComponent.html":{},"injectables/TaskEffects.html":{},"pipes/TaskEnumDisplayPipe.html":{},"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{},"interfaces/TaskState.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{}}}],["exports",{"_index":311,"title":{},"body":{"modules/AnalyticsRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/CardsModule.html":{},"modules/ContactRoutingModule.html":{},"modules/CoreModule.html":{},"modules/LayoutModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/TabModule.html":{},"modules/TaskModule.html":{}}}],["exports:[routermodule",{"_index":1738,"title":{},"body":{"modules/NotesRoutingModule.html":{},"modules/TaskRoutingModule.html":{}}}],["exports:[tabcomponent",{"_index":1849,"title":{},"body":{"modules/TabModule.html":{}}}],["extends",{"_index":1059,"title":{},"body":{"interfaces/ContactState.html":{},"interfaces/NoteState.html":{},"interfaces/TaskState.html":{}}}],["extension",{"_index":403,"title":{},"body":{"modules/AppModule.html":{}}}],["f4a460",{"_index":1165,"title":{},"body":{"components/DashboardComponent.html":{}}}],["f5deb3",{"_index":1161,"title":{},"body":{"components/DashboardComponent.html":{}}}],["f78d64",{"_index":1993,"title":{},"body":{"components/TableComponent.html":{}}}],["f8c182",{"_index":1996,"title":{},"body":{"components/TableComponent.html":{}}}],["facilitate",{"_index":2375,"title":{},"body":{"index.html":{}}}],["factors",{"_index":1047,"title":{},"body":{"injectables/ContactMetricService.html":{},"index.html":{}}}],["factors.reduce((a,b",{"_index":1050,"title":{},"body":{"injectables/ContactMetricService.html":{}}}],["fae9d5",{"_index":1992,"title":{},"body":{"components/TableComponent.html":{}}}],["fail",{"_index":2209,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["false",{"_index":78,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddTaskComponent.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"injectables/ContactEffects.html":{},"interfaces/ContactState.html":{},"components/NoteDetailComponent.html":{},"interfaces/NoteState.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"interfaces/TaskState.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":887,"title":{},"body":{"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["family_restroom",{"_index":781,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{}}}],["familymetric",{"_index":900,"title":{},"body":{"components/ContactListComponent.html":{}}}],["father",{"_index":2226,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["favorite_border",{"_index":782,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{}}}],["fdeaff",{"_index":1796,"title":{},"body":{"components/SidenavComponent.html":{}}}],["feature",{"_index":2302,"title":{},"body":{"index.html":{}}}],["feature/amazingfeature",{"_index":2411,"title":{},"body":{"index.html":{}}}],["features",{"_index":2371,"title":{},"body":{"index.html":{}}}],["ff4500",{"_index":1146,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ffdead",{"_index":1160,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ffe4c4",{"_index":1159,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ffebcd",{"_index":1158,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fff8dc",{"_index":1157,"title":{},"body":{"components/DashboardComponent.html":{}}}],["field",{"_index":1377,"title":{},"body":{"components/FormComponent.html":{},"modules/MaterialModule.html":{},"components/TableComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"modules/AnalyticsModule.html":{},"modules/AnalyticsRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"components/ButtonComponent.html":{},"modules/CardsModule.html":{},"interfaces/Contact.html":{},"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"injectables/ContactEffects.html":{},"components/ContactListComponent.html":{},"injectables/ContactMetricService.html":{},"modules/ContactRoutingModule.html":{},"interfaces/ContactState.html":{},"modules/ContactsModule.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"interfaces/Day.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"components/FormComponent.html":{},"interfaces/FormSetupModel.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"injectables/MetricsService.html":{},"components/ModalCardComponent.html":{},"interfaces/Note.html":{},"components/NoteDetailComponent.html":{},"injectables/NoteEffects.html":{},"components/NoteListComponent.html":{},"interfaces/NoteState.html":{},"modules/NotesModule.html":{},"modules/NotesRoutingModule.html":{},"pipes/RatingColorPipe.html":{},"modules/SharedModule.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"modules/TabModule.html":{},"components/TableComponent.html":{},"interfaces/Task.html":{},"components/TaskDetailComponent.html":{},"injectables/TaskEffects.html":{},"pipes/TaskEnumDisplayPipe.html":{},"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{},"interfaces/TaskState.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["fill",{"_index":1555,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["filter",{"_index":992,"title":{},"body":{"components/ContactListComponent.html":{},"components/TableComponent.html":{},"index.html":{}}}],["filtering",{"_index":914,"title":{},"body":{"components/ContactListComponent.html":{}}}],["filtervalue",{"_index":1918,"title":{},"body":{"components/TableComponent.html":{}}}],["filtervalue.trim().tolowercase",{"_index":1922,"title":{},"body":{"components/TableComponent.html":{}}}],["firebase",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{},"index.html":{}}}],["firebase.auth.googleauthprovider",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{}}}],["firebase/app",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["firebaseconfig",{"_index":2467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firefox",{"_index":1795,"title":{},"body":{"components/SidenavComponent.html":{}}}],["firestore",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BackendService.html":{}}}],["firsttimeuser",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{}}}],["flex",{"_index":1037,"title":{},"body":{"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/ModalCardComponent.html":{},"components/SidenavComponent.html":{},"components/TableComponent.html":{}}}],["flexlayoutmodule",{"_index":1548,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["floatlabel",{"_index":1556,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["focus",{"_index":2334,"title":{},"body":{"index.html":{}}}],["font",{"_index":1244,"title":{},"body":{"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{}}}],["for(let",{"_index":814,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{}}}],["fork",{"_index":2407,"title":{},"body":{"index.html":{}}}],["form",{"_index":154,"title":{},"body":{"components/AddContactComponent.html":{},"components/FormComponent.html":{},"components/TableComponent.html":{}}}],["form'},{'name",{"_index":179,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["form.component.html",{"_index":1297,"title":{},"body":{"components/FormComponent.html":{}}}],["form.component.scss",{"_index":1296,"title":{},"body":{"components/FormComponent.html":{}}}],["form/form.component",{"_index":1748,"title":{},"body":{"modules/SharedModule.html":{}}}],["formarray",{"_index":1320,"title":{},"body":{"components/FormComponent.html":{}}}],["formarray).controls",{"_index":1357,"title":{},"body":{"components/FormComponent.html":{}}}],["formatted",{"_index":1303,"title":{},"body":{"components/FormComponent.html":{}}}],["formcomponent",{"_index":178,"title":{"components/FormComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"modules/SharedModule.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["formcontrol",{"_index":953,"title":{},"body":{"components/ContactListComponent.html":{},"components/FormComponent.html":{},"components/NoteListComponent.html":{},"components/TasksComponent.html":{}}}],["formcontrol(c.default",{"_index":1334,"title":{},"body":{"components/FormComponent.html":{}}}],["formcontrol(this.contacttypes",{"_index":987,"title":{},"body":{"components/ContactListComponent.html":{}}}],["formcontrol(this.notetypes",{"_index":1680,"title":{},"body":{"components/NoteListComponent.html":{}}}],["formcontrol(this.tasktypes",{"_index":2115,"title":{},"body":{"components/TasksComponent.html":{}}}],["formgroup",{"_index":1319,"title":{},"body":{"components/FormComponent.html":{}}}],["formsetupmodel",{"_index":49,"title":{"interfaces/FormSetupModel.html":{}},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/ContactDetailComponent.html":{},"components/FormComponent.html":{},"interfaces/FormSetupModel.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{},"coverage.html":{}}}],["formsmodule",{"_index":1752,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["friend",{"_index":2222,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["friendmetric",{"_index":901,"title":{},"body":{"components/ContactListComponent.html":{}}}],["friends",{"_index":1573,"title":{},"body":{"injectables/MetricsService.html":{}}}],["friends.foreach(friend",{"_index":1582,"title":{},"body":{"injectables/MetricsService.html":{}}}],["friendship",{"_index":885,"title":{},"body":{"components/ContactListComponent.html":{}}}],["fromconceptreducer",{"_index":1099,"title":{},"body":{"modules/ContactsModule.html":{}}}],["fromcontactaction",{"_index":869,"title":{},"body":{"injectables/ContactEffects.html":{},"interfaces/ContactState.html":{}}}],["fromcontactaction.contactactions.addcontactsuccess",{"_index":844,"title":{},"body":{"injectables/ContactEffects.html":{}}}],["fromcontactaction.contactactions.deletecontactsuccess",{"_index":851,"title":{},"body":{"injectables/ContactEffects.html":{}}}],["fromcontactaction.contactactions.loadcontactsuccess",{"_index":860,"title":{},"body":{"injectables/ContactEffects.html":{}}}],["fromcontactreducer",{"_index":1762,"title":{},"body":{"modules/SharedModule.html":{}}}],["fromcontactreducer.contactreducer",{"_index":1768,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["fromcontacts",{"_index":1906,"title":{},"body":{"components/TableComponent.html":{}}}],["fromcontacts.contact",{"_index":1891,"title":{},"body":{"components/TableComponent.html":{}}}],["fromcontactstate",{"_index":142,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactListComponent.html":{}}}],["fromnote",{"_index":1760,"title":{},"body":{"modules/SharedModule.html":{}}}],["fromnote.notereducer",{"_index":1770,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["fromnoteaction",{"_index":1698,"title":{},"body":{"interfaces/NoteState.html":{}}}],["fromnotes",{"_index":1722,"title":{},"body":{"modules/NotesModule.html":{}}}],["fromnotes.notefeaturekey",{"_index":2506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fromnotes.notereducer",{"_index":1731,"title":{},"body":{"modules/NotesModule.html":{}}}],["fromnotes.selectall",{"_index":2505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fromnotesaction",{"_index":1640,"title":{},"body":{"injectables/NoteEffects.html":{}}}],["fromnotesaction.noteactions.addnotesuccess",{"_index":1622,"title":{},"body":{"injectables/NoteEffects.html":{}}}],["fromnotesaction.noteactions.deletenotesuccess",{"_index":1626,"title":{},"body":{"injectables/NoteEffects.html":{}}}],["fromnotesaction.noteactions.loadnotesuccess",{"_index":1632,"title":{},"body":{"injectables/NoteEffects.html":{}}}],["fromnotesaction.noteactions.updatenotesuccess",{"_index":1637,"title":{},"body":{"injectables/NoteEffects.html":{}}}],["fromnotestate",{"_index":228,"title":{},"body":{"components/AddNoteComponent.html":{},"components/NoteListComponent.html":{}}}],["fromoperation",{"_index":447,"title":{},"body":{"interfaces/AppState.html":{}}}],["fromoperation.contactreducer",{"_index":450,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["fromoperation.contactstate",{"_index":442,"title":{},"body":{"interfaces/AppState.html":{}}}],["fromoperations",{"_index":970,"title":{},"body":{"components/ContactListComponent.html":{},"interfaces/ContactState.html":{},"components/NoteListComponent.html":{},"interfaces/NoteState.html":{},"interfaces/TaskState.html":{},"components/TasksComponent.html":{}}}],["fromoperations.contact",{"_index":917,"title":{},"body":{"components/ContactListComponent.html":{}}}],["fromoperations.contact):void",{"_index":1015,"title":{},"body":{"components/ContactListComponent.html":{}}}],["fromoperations.note",{"_index":1662,"title":{},"body":{"components/NoteListComponent.html":{}}}],["fromoperations.task",{"_index":2096,"title":{},"body":{"components/TasksComponent.html":{}}}],["fromtask",{"_index":1758,"title":{},"body":{"modules/SharedModule.html":{},"modules/TaskModule.html":{}}}],["fromtask.taskfeaturekey",{"_index":2507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fromtask.taskreducer",{"_index":1765,"title":{},"body":{"modules/SharedModule.html":{},"modules/TaskModule.html":{},"miscellaneous/variables.html":{}}}],["fromtaskaction",{"_index":2048,"title":{},"body":{"injectables/TaskEffects.html":{},"interfaces/TaskState.html":{}}}],["fromtaskaction.taskactions.addtasksuccess",{"_index":2030,"title":{},"body":{"injectables/TaskEffects.html":{}}}],["fromtaskaction.taskactions.deletetasksuccess",{"_index":2034,"title":{},"body":{"injectables/TaskEffects.html":{}}}],["fromtaskaction.taskactions.loadtasksuccess",{"_index":2040,"title":{},"body":{"injectables/TaskEffects.html":{}}}],["fromtaskaction.taskactions.updatetasksuccess",{"_index":2045,"title":{},"body":{"injectables/TaskEffects.html":{}}}],["fromtaskstate",{"_index":2113,"title":{},"body":{"components/TasksComponent.html":{}}}],["function",{"_index":604,"title":{},"body":{"injectables/BackendService.html":{}}}],["gap",{"_index":764,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/NoteDetailComponent.html":{}}}],["gathering",{"_index":999,"title":{},"body":{"components/ContactListComponent.html":{}}}],["gathers",{"_index":939,"title":{},"body":{"components/ContactListComponent.html":{}}}],["gen",{"_index":603,"title":{},"body":{"injectables/BackendService.html":{}}}],["general",{"_index":181,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"modules/CardsModule.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["generalcardcomponent",{"_index":180,"title":{"components/GeneralCardComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"modules/CardsModule.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["generatecontrols",{"_index":1300,"title":{},"body":{"components/FormComponent.html":{}}}],["generatecontrols(controlstocreate",{"_index":1313,"title":{},"body":{"components/FormComponent.html":{}}}],["getcontactdistribution",{"_index":1560,"title":{},"body":{"injectables/MetricsService.html":{}}}],["getcontactdistribution(contacts",{"_index":1565,"title":{},"body":{"injectables/MetricsService.html":{}}}],["getcontactdistribution(this.contacts",{"_index":1215,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getcontactrating",{"_index":1042,"title":{},"body":{"injectables/ContactMetricService.html":{}}}],["getcontactrating(factors",{"_index":1044,"title":{},"body":{"injectables/ContactMetricService.html":{}}}],["getcontactrating(factors:number",{"_index":1048,"title":{},"body":{"injectables/ContactMetricService.html":{}}}],["getcontactsfromdb",{"_index":539,"title":{},"body":{"injectables/BackendService.html":{}}}],["getcontrolscreated",{"_index":1323,"title":{},"body":{"components/FormComponent.html":{}}}],["getfirsttimeuser",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["gethighestofsortedcontacts",{"_index":1561,"title":{},"body":{"injectables/MetricsService.html":{}}}],["gethighestofsortedcontacts(contacts",{"_index":1567,"title":{},"body":{"injectables/MetricsService.html":{}}}],["gethighestofsortedcontacts(this.contacts",{"_index":1208,"title":{},"body":{"components/DashboardComponent.html":{}}}],["gethighestofsortedcontacts(this.contacts.filter(c",{"_index":1204,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getlowestofsortedcontacts",{"_index":1562,"title":{},"body":{"injectables/MetricsService.html":{}}}],["getlowestofsortedcontacts(contacts",{"_index":1569,"title":{},"body":{"injectables/MetricsService.html":{}}}],["getlowestofsortedcontacts(this.contacts",{"_index":1210,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getlowestofsortedcontacts(this.contacts.filter(c",{"_index":1206,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getmostfrequentenvironment",{"_index":1563,"title":{},"body":{"injectables/MetricsService.html":{}}}],["getmostfrequentenvironment(friends",{"_index":1571,"title":{},"body":{"injectables/MetricsService.html":{}}}],["getmostfrequentenvironment(this.contacts.filter(c",{"_index":1201,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getnotesfromdb",{"_index":540,"title":{},"body":{"injectables/BackendService.html":{}}}],["getrelatedtemplatereference",{"_index":907,"title":{},"body":{"components/ContactListComponent.html":{}}}],["getrelatedtemplatereference(contacttype",{"_index":932,"title":{},"body":{"components/ContactListComponent.html":{}}}],["gettasksfromdb",{"_index":541,"title":{},"body":{"injectables/BackendService.html":{}}}],["getting",{"_index":2290,"title":{"index.html":{}},"body":{"index.html":{}}}],["git",{"_index":2409,"title":{},"body":{"index.html":{}}}],["giving",{"_index":2341,"title":{},"body":{"index.html":{}}}],["glance",{"_index":2365,"title":{},"body":{"index.html":{}}}],["gmail",{"_index":2383,"title":{},"body":{"index.html":{}}}],["goal",{"_index":2328,"title":{},"body":{"index.html":{}}}],["goodbye",{"_index":1409,"title":{},"body":{"components/HeaderComponent.html":{}}}],["google",{"_index":2380,"title":{},"body":{"index.html":{}}}],["googlesignin",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["gradient(bottom",{"_index":1800,"title":{},"body":{"components/SidenavComponent.html":{}}}],["gradient(to",{"_index":1804,"title":{},"body":{"components/SidenavComponent.html":{}}}],["grandparent",{"_index":2231,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["graph",{"_index":1273,"title":{},"body":{"components/DashboardComponent.html":{},"modules.html":{}}}],["gray",{"_index":2002,"title":{},"body":{"components/TableComponent.html":{}}}],["greatly",{"_index":2405,"title":{},"body":{"index.html":{}}}],["grid",{"_index":752,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["grid1",{"_index":1229,"title":{},"body":{"components/DashboardComponent.html":{}}}],["grid2",{"_index":1231,"title":{},"body":{"components/DashboardComponent.html":{}}}],["grid3",{"_index":1232,"title":{},"body":{"components/DashboardComponent.html":{}}}],["group",{"_index":780,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{}}}],["group.mat",{"_index":1837,"title":{},"body":{"components/TabComponent.html":{}}}],["guard",{"_index":451,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":452,"title":{},"body":{"guards/AuthGuard.html":{}}}],["h1.emphasis",{"_index":1432,"title":{},"body":{"components/HeaderComponent.html":{}}}],["h1.title",{"_index":1430,"title":{},"body":{"components/HeaderComponent.html":{}}}],["h4",{"_index":1284,"title":{},"body":{"components/DashboardComponent.html":{}}}],["h5",{"_index":1287,"title":{},"body":{"components/DashboardComponent.html":{}}}],["header",{"_index":743,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/NoteDetailComponent.html":{},"components/TabComponent.html":{},"components/TaskDetailComponent.html":{}}}],["header'},{'name",{"_index":184,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["header.component.scss",{"_index":1406,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":1453,"title":{},"body":{"modules/LayoutModule.html":{}}}],["headercomponent",{"_index":183,"title":{"components/HeaderComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TasksComponent.html":{}}}],["help",{"_index":2312,"title":{},"body":{"index.html":{}}}],["help_center",{"_index":800,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{}}}],["helvetica",{"_index":1440,"title":{},"body":{"components/HeaderComponent.html":{}}}],["here's",{"_index":2361,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":354,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/TableComponent.html":{}}}],["high",{"_index":2266,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["highestratedcontact",{"_index":1123,"title":{},"body":{"components/DashboardComponent.html":{}}}],["highestratedfamilymember",{"_index":1124,"title":{},"body":{"components/DashboardComponent.html":{}}}],["highlights",{"_index":1222,"title":{},"body":{"components/DashboardComponent.html":{}}}],["holistically",{"_index":2349,"title":{},"body":{"index.html":{}}}],["home",{"_index":2237,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["horizontal",{"_index":1310,"title":{},"body":{"components/FormComponent.html":{}}}],["horizontalbar",{"_index":1155,"title":{},"body":{"components/DashboardComponent.html":{}}}],["house",{"_index":789,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{}}}],["hover",{"_index":1248,"title":{},"body":{"components/DashboardComponent.html":{},"components/GeneralCardComponent.html":{},"components/ModalCardComponent.html":{}}}],["html",{"_index":158,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["htmlelement",{"_index":936,"title":{},"body":{"components/ContactListComponent.html":{}}}],["htmlinputelement).value",{"_index":1920,"title":{},"body":{"components/TableComponent.html":{}}}],["https://github.com/kevinmilly/encourage",{"_index":2391,"title":{},"body":{"index.html":{}}}],["https://www.linkedin.com/in/ksmithtech",{"_index":2425,"title":{},"body":{"index.html":{}}}],["i${this.imageoptions.energylevel",{"_index":815,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{}}}],["i${this.imageoptions.priority",{"_index":821,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{}}}],["icon",{"_index":633,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["id",{"_index":650,"title":{},"body":{"interfaces/Contact.html":{},"components/ContactListComponent.html":{},"interfaces/Note.html":{},"components/TableComponent.html":{},"interfaces/Task.html":{}}}],["id:string",{"_index":2005,"title":{},"body":{"interfaces/Task.html":{}}}],["identifier",{"_index":2129,"title":{},"body":{"coverage.html":{}}}],["identify",{"_index":2347,"title":{},"body":{"index.html":{}}}],["idgenerator",{"_index":542,"title":{},"body":{"injectables/BackendService.html":{}}}],["ie",{"_index":1792,"title":{},"body":{"components/SidenavComponent.html":{}}}],["if(!this.authservice.user",{"_index":468,"title":{},"body":{"guards/AuthGuard.html":{}}}],["if(confirm(\"are",{"_index":1931,"title":{},"body":{"components/TableComponent.html":{}}}],["if(pipetype",{"_index":805,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{}}}],["if(result.action",{"_index":1942,"title":{},"body":{"components/TableComponent.html":{}}}],["if(type==='delete",{"_index":1930,"title":{},"body":{"components/TableComponent.html":{}}}],["if(type==='zoom",{"_index":1928,"title":{},"body":{"components/TableComponent.html":{}}}],["imageoptions",{"_index":778,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{}}}],["img",{"_index":1483,"title":{},"body":{"components/LoginComponent.html":{},"components/SidenavComponent.html":{}}}],["implement",{"_index":1034,"title":{},"body":{"components/ContactListComponent.html":{},"components/NoteListComponent.html":{},"components/TasksComponent.html":{}}}],["implements",{"_index":12,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"guards/AuthGuard.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"pipes/RatingColorPipe.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"pipes/TaskEnumDisplayPipe.html":{},"components/TasksComponent.html":{}}}],["import",{"_index":139,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"modules/AnalyticsModule.html":{},"modules/AnalyticsRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"components/ButtonComponent.html":{},"modules/CardsModule.html":{},"interfaces/Contact.html":{},"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"injectables/ContactEffects.html":{},"components/ContactListComponent.html":{},"injectables/ContactMetricService.html":{},"modules/ContactRoutingModule.html":{},"interfaces/ContactState.html":{},"modules/ContactsModule.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"components/FormComponent.html":{},"interfaces/FormSetupModel.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"injectables/MetricsService.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"injectables/NoteEffects.html":{},"components/NoteListComponent.html":{},"interfaces/NoteState.html":{},"modules/NotesModule.html":{},"modules/NotesRoutingModule.html":{},"pipes/RatingColorPipe.html":{},"modules/SharedModule.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"modules/TabModule.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"injectables/TaskEffects.html":{},"pipes/TaskEnumDisplayPipe.html":{},"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{},"interfaces/TaskState.html":{},"components/TasksComponent.html":{}}}],["import('./analytics/analytics.module').then(m",{"_index":428,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./operations/contact/contacts.module').then(m",{"_index":422,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./operations/note/notes.module').then(m",{"_index":432,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./operations/task/task.module').then(m",{"_index":430,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import/export",{"_index":2385,"title":{},"body":{"index.html":{}}}],["important",{"_index":67,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/ContactDetailComponent.html":{},"components/NoteDetailComponent.html":{},"components/TabComponent.html":{},"components/TaskDetailComponent.html":{},"index.html":{}}}],["imports",{"_index":294,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AnalyticsRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CardsModule.html":{},"modules/ContactRoutingModule.html":{},"modules/ContactsModule.html":{},"modules/CoreModule.html":{},"modules/LayoutModule.html":{},"modules/MaterialModule.html":{},"modules/NotesModule.html":{},"modules/SharedModule.html":{},"modules/TabModule.html":{},"modules/TaskModule.html":{}}}],["imports:[routermodule.forchild(routes",{"_index":1737,"title":{},"body":{"modules/NotesRoutingModule.html":{},"modules/TaskRoutingModule.html":{}}}],["include",{"_index":630,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContactListComponent.html":{},"components/TabComponent.html":{}}}],["including",{"_index":2355,"title":{},"body":{"index.html":{}}}],["indent",{"_index":1824,"title":{},"body":{"components/SidenavComponent.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"components/ButtonComponent.html":{},"interfaces/Contact.html":{},"components/ContactDetailComponent.html":{},"injectables/ContactEffects.html":{},"components/ContactListComponent.html":{},"injectables/ContactMetricService.html":{},"interfaces/ContactState.html":{},"components/DashboardComponent.html":{},"interfaces/Day.html":{},"components/FormComponent.html":{},"interfaces/FormSetupModel.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MetricsService.html":{},"components/ModalCardComponent.html":{},"interfaces/Note.html":{},"components/NoteDetailComponent.html":{},"injectables/NoteEffects.html":{},"components/NoteListComponent.html":{},"interfaces/NoteState.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"interfaces/Task.html":{},"components/TaskDetailComponent.html":{},"injectables/TaskEffects.html":{},"interfaces/TaskState.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indexedcreatedcontrols",{"_index":1301,"title":{},"body":{"components/FormComponent.html":{}}}],["indexedcreatedcontrols(i",{"_index":1315,"title":{},"body":{"components/FormComponent.html":{}}}],["indexes",{"_index":935,"title":{},"body":{"components/ContactListComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"modules/AnalyticsModule.html":{},"modules/AnalyticsRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"components/ButtonComponent.html":{},"modules/CardsModule.html":{},"interfaces/Contact.html":{},"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"injectables/ContactEffects.html":{},"components/ContactListComponent.html":{},"injectables/ContactMetricService.html":{},"modules/ContactRoutingModule.html":{},"interfaces/ContactState.html":{},"modules/ContactsModule.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"interfaces/Day.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"components/FormComponent.html":{},"interfaces/FormSetupModel.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"injectables/MetricsService.html":{},"components/ModalCardComponent.html":{},"interfaces/Note.html":{},"components/NoteDetailComponent.html":{},"injectables/NoteEffects.html":{},"components/NoteListComponent.html":{},"interfaces/NoteState.html":{},"modules/NotesModule.html":{},"modules/NotesRoutingModule.html":{},"pipes/RatingColorPipe.html":{},"modules/SharedModule.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"modules/TabModule.html":{},"components/TableComponent.html":{},"interfaces/Task.html":{},"components/TaskDetailComponent.html":{},"injectables/TaskEffects.html":{},"pipes/TaskEnumDisplayPipe.html":{},"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{},"interfaces/TaskState.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{}}}],["information",{"_index":2343,"title":{},"body":{"index.html":{}}}],["initial",{"_index":82,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{},"components/TableComponent.html":{}}}],["initialcontactstate",{"_index":1067,"title":{},"body":{"interfaces/ContactState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initialnotestate",{"_index":1701,"title":{},"body":{"interfaces/NoteState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initialtaskstate",{"_index":2076,"title":{},"body":{"interfaces/TaskState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":694,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["inject(mat_dialog_data",{"_index":680,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["injectable",{"_index":464,"title":{"injectables/AuthService.html":{},"injectables/BackendService.html":{},"injectables/ContactEffects.html":{},"injectables/ContactMetricService.html":{},"injectables/MetricsService.html":{},"injectables/NoteEffects.html":{},"injectables/TaskEffects.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"injectables/ContactEffects.html":{},"injectables/ContactMetricService.html":{},"injectables/MetricsService.html":{},"injectables/NoteEffects.html":{},"injectables/TaskEffects.html":{},"coverage.html":{}}}],["injectables",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BackendService.html":{},"injectables/ContactEffects.html":{},"injectables/ContactMetricService.html":{},"injectables/MetricsService.html":{},"injectables/NoteEffects.html":{},"injectables/TaskEffects.html":{},"overview.html":{}}}],["ink",{"_index":1838,"title":{},"body":{"components/TabComponent.html":{}}}],["inote",{"_index":1946,"title":{},"body":{"components/TableComponent.html":{}}}],["input",{"_index":626,"title":{},"body":{"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{}}}],["input.value",{"_index":1954,"title":{},"body":{"components/TableComponent.html":{}}}],["inputform",{"_index":1298,"title":{},"body":{"components/FormComponent.html":{}}}],["inputs",{"_index":612,"title":{},"body":{"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{}}}],["inspire",{"_index":2403,"title":{},"body":{"index.html":{}}}],["install",{"_index":2393,"title":{},"body":{"index.html":{}}}],["integration",{"_index":2382,"title":{},"body":{"index.html":{}}}],["interface",{"_index":435,"title":{"interfaces/AppState.html":{},"interfaces/Contact.html":{},"interfaces/ContactState.html":{},"interfaces/Day.html":{},"interfaces/FormSetupModel.html":{},"interfaces/Note.html":{},"interfaces/NoteState.html":{},"interfaces/Task.html":{},"interfaces/TaskState.html":{},"interfaces/User.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/Contact.html":{},"interfaces/ContactState.html":{},"interfaces/Day.html":{},"interfaces/FormSetupModel.html":{},"interfaces/Note.html":{},"interfaces/NoteState.html":{},"interfaces/Task.html":{},"interfaces/TaskState.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":437,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/Contact.html":{},"interfaces/ContactState.html":{},"interfaces/Day.html":{},"interfaces/FormSetupModel.html":{},"interfaces/Note.html":{},"interfaces/NoteState.html":{},"interfaces/Task.html":{},"interfaces/TaskState.html":{},"interfaces/User.html":{},"overview.html":{}}}],["invigorating",{"_index":2247,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["issues",{"_index":2369,"title":{},"body":{"index.html":{}}}],["items",{"_index":1280,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ivory",{"_index":1425,"title":{},"body":{"components/HeaderComponent.html":{}}}],["justify",{"_index":753,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/SidenavComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{}}}],["kanadaka",{"_index":1478,"title":{},"body":{"components/LoginComponent.html":{}}}],["kevin",{"_index":2421,"title":{},"body":{"index.html":{}}}],["kevinmilly@gmail.com",{"_index":2426,"title":{},"body":{"index.html":{}}}],["keyframes",{"_index":1991,"title":{},"body":{"components/TableComponent.html":{}}}],["know",{"_index":63,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{}}}],["known",{"_index":64,"title":{},"body":{"components/AddContactComponent.html":{},"interfaces/Contact.html":{},"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"components/ContactListComponent.html":{},"miscellaneous/enumerations.html":{}}}],["label",{"_index":1148,"title":{},"body":{"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/TabComponent.html":{}}}],["label=\"{{labels[2",{"_index":1828,"title":{},"body":{"components/TabComponent.html":{}}}],["labels",{"_index":1829,"title":{},"body":{"components/TabComponent.html":{}}}],["large",{"_index":2324,"title":{},"body":{"index.html":{}}}],["last",{"_index":398,"title":{},"body":{"modules/AppModule.html":{}}}],["launches",{"_index":921,"title":{},"body":{"components/ContactListComponent.html":{}}}],["launching",{"_index":2387,"title":{},"body":{"index.html":{}}}],["launchmodal",{"_index":1859,"title":{},"body":{"components/TableComponent.html":{}}}],["launchmodal(entity",{"_index":1882,"title":{},"body":{"components/TableComponent.html":{}}}],["layout",{"_index":1551,"title":{},"body":{"modules/MaterialModule.html":{},"dependencies.html":{}}}],["layout/layout.module",{"_index":1110,"title":{},"body":{"modules/CoreModule.html":{}}}],["layoutmodule",{"_index":1107,"title":{"modules/LayoutModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/LayoutModule.html":{},"modules.html":{},"overview.html":{}}}],["leaderboard",{"_index":1784,"title":{},"body":{"components/SidenavComponent.html":{}}}],["leads",{"_index":2317,"title":{},"body":{"index.html":{}}}],["learn",{"_index":2402,"title":{},"body":{"index.html":{}}}],["left",{"_index":359,"title":{},"body":{"components/AppComponent.html":{},"components/ContactListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/TableComponent.html":{}}}],["legend",{"_index":157,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["letter",{"_index":2289,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["level",{"_index":72,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{}}}],["level.enum.ts",{"_index":2196,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libre",{"_index":1431,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["license",{"_index":2309,"title":{},"body":{"index.html":{}}}],["lighter",{"_index":1447,"title":{},"body":{"components/HeaderComponent.html":{}}}],["line",{"_index":1964,"title":{},"body":{"components/TableComponent.html":{}}}],["linear",{"_index":1799,"title":{},"body":{"components/SidenavComponent.html":{}}}],["link",{"_index":1389,"title":{},"body":{"components/FormComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{},"components/TableComponent.html":{}}}],["linkedin",{"_index":2424,"title":{},"body":{"index.html":{}}}],["links",{"_index":1810,"title":{},"body":{"components/SidenavComponent.html":{}}}],["linksneeded",{"_index":1865,"title":{},"body":{"components/TableComponent.html":{}}}],["linksneeded]=\"['contactname",{"_index":883,"title":{},"body":{"components/ContactListComponent.html":{}}}],["linksneeded]=\"['taskname",{"_index":2088,"title":{},"body":{"components/TasksComponent.html":{}}}],["linksneeded]=\"['title",{"_index":1650,"title":{},"body":{"components/NoteListComponent.html":{}}}],["linksneeded]=\"[\\'contactname",{"_index":1039,"title":{},"body":{"components/ContactListComponent.html":{}}}],["linksneeded]=\"[\\'taskname",{"_index":2124,"title":{},"body":{"components/TasksComponent.html":{}}}],["linksneeded]=\"[\\'title",{"_index":1696,"title":{},"body":{"components/NoteListComponent.html":{}}}],["list",{"_index":874,"title":{},"body":{"components/ContactListComponent.html":{},"modules/ContactRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NoteListComponent.html":{},"modules/NotesRoutingModule.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"modules/TaskRoutingModule.html":{},"components/TasksComponent.html":{},"miscellaneous/enumerations.html":{}}}],["list'},{'name",{"_index":175,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["literal",{"_index":668,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/DashboardComponent.html":{},"injectables/MetricsService.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["living",{"_index":2271,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["load",{"_index":1071,"title":{},"body":{"interfaces/ContactState.html":{},"interfaces/NoteState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["load_contacts",{"_index":2206,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["load_contacts_fail",{"_index":2207,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["load_contacts_success",{"_index":2210,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["load_notes",{"_index":2248,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["load_notes_fail",{"_index":2249,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["load_notes_success",{"_index":2250,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["load_task",{"_index":2277,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["load_task_fail",{"_index":2278,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["load_task_success",{"_index":2279,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["loadchildren",{"_index":421,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadcontacts",{"_index":833,"title":{},"body":{"injectables/ContactEffects.html":{},"miscellaneous/variables.html":{}}}],["loadcontactsfail",{"_index":2446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loadcontactsuccess",{"_index":2450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loaded",{"_index":1061,"title":{},"body":{"interfaces/ContactState.html":{},"interfaces/NoteState.html":{},"interfaces/TaskState.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":1062,"title":{},"body":{"interfaces/ContactState.html":{},"interfaces/NoteState.html":{},"interfaces/TaskState.html":{},"miscellaneous/variables.html":{}}}],["loadnotes",{"_index":1616,"title":{},"body":{"injectables/NoteEffects.html":{},"miscellaneous/variables.html":{}}}],["loadnotesfail",{"_index":2482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loadnotesuccess",{"_index":2484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loadstatethencontacts",{"_index":908,"title":{},"body":{"components/ContactListComponent.html":{}}}],["loadtasks",{"_index":2024,"title":{},"body":{"injectables/TaskEffects.html":{},"miscellaneous/variables.html":{}}}],["loadtasksfail",{"_index":2509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loadtasksuccess",{"_index":2511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["local_phone",{"_index":795,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{}}}],["log",{"_index":404,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":425,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":186,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["login.component.scss",{"_index":1456,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":185,"title":{"components/LoginComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logonly",{"_index":400,"title":{},"body":{"modules/AppModule.html":{}}}],["logout",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["longstring",{"_index":85,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/ContactDetailComponent.html":{},"components/FormComponent.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["low",{"_index":2244,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lowestratedcontact",{"_index":1125,"title":{},"body":{"components/DashboardComponent.html":{}}}],["m",{"_index":2413,"title":{},"body":{"index.html":{}}}],["m.analyticsmodule",{"_index":429,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.contactsmodule",{"_index":423,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.notesmodule",{"_index":433,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.taskmodule",{"_index":431,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["mail",{"_index":798,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{}}}],["main",{"_index":344,"title":{},"body":{"components/AppComponent.html":{},"components/TableComponent.html":{}}}],["make",{"_index":2344,"title":{},"body":{"index.html":{}}}],["manage",{"_index":2316,"title":{},"body":{"index.html":{}}}],["management",{"_index":2370,"title":{},"body":{"index.html":{}}}],["many",{"_index":2313,"title":{},"body":{"index.html":{}}}],["map",{"_index":236,"title":{},"body":{"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"injectables/ContactEffects.html":{},"components/ContactListComponent.html":{},"injectables/NoteEffects.html":{},"components/NoteListComponent.html":{},"injectables/TaskEffects.html":{}}}],["map((contact",{"_index":843,"title":{},"body":{"injectables/ContactEffects.html":{}}}],["map((contacts",{"_index":859,"title":{},"body":{"injectables/ContactEffects.html":{}}}],["map((note",{"_index":1621,"title":{},"body":{"injectables/NoteEffects.html":{}}}],["map((notes",{"_index":1631,"title":{},"body":{"injectables/NoteEffects.html":{}}}],["map((task",{"_index":2029,"title":{},"body":{"injectables/TaskEffects.html":{}}}],["map((tasks",{"_index":2039,"title":{},"body":{"injectables/TaskEffects.html":{}}}],["maps_home_work",{"_index":792,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{}}}],["margin",{"_index":747,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/HeaderComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/SidenavComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{}}}],["mat",{"_index":1233,"title":{},"body":{"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/ModalCardComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{}}}],["mat_dialog_data",{"_index":695,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["mat_form_field_default_options",{"_index":1520,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matautocompletemodule",{"_index":1524,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matbuttonmodule",{"_index":1507,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matbuttontogglemodule",{"_index":1509,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matcardmodule",{"_index":1503,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":205,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"modules/AnalyticsModule.html":{},"modules/AnalyticsRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"components/ButtonComponent.html":{},"modules/CardsModule.html":{},"interfaces/Contact.html":{},"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"injectables/ContactEffects.html":{},"components/ContactListComponent.html":{},"injectables/ContactMetricService.html":{},"modules/ContactRoutingModule.html":{},"interfaces/ContactState.html":{},"modules/ContactsModule.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"interfaces/Day.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"components/FormComponent.html":{},"interfaces/FormSetupModel.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"injectables/MetricsService.html":{},"components/ModalCardComponent.html":{},"interfaces/Note.html":{},"components/NoteDetailComponent.html":{},"injectables/NoteEffects.html":{},"components/NoteListComponent.html":{},"interfaces/NoteState.html":{},"modules/NotesModule.html":{},"modules/NotesRoutingModule.html":{},"pipes/RatingColorPipe.html":{},"modules/SharedModule.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"modules/TabModule.html":{},"components/TableComponent.html":{},"interfaces/Task.html":{},"components/TaskDetailComponent.html":{},"injectables/TaskEffects.html":{},"pipes/TaskEnumDisplayPipe.html":{},"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{},"interfaces/TaskState.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":1543,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodule",{"_index":1536,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":910,"title":{},"body":{"components/ContactListComponent.html":{},"components/NoteListComponent.html":{},"components/TableComponent.html":{},"components/TasksComponent.html":{}}}],["matdialogmodule",{"_index":1513,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matdialogref",{"_index":670,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["matdividermodule",{"_index":1514,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mate",{"_index":1436,"title":{},"body":{"components/HeaderComponent.html":{}}}],["material/material.module",{"_index":1754,"title":{},"body":{"modules/SharedModule.html":{}}}],["materialmodule",{"_index":639,"title":{"modules/MaterialModule.html":{}},"body":{"modules/CardsModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/TabModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matexpansionmodule",{"_index":1516,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matformfielddefaultoptions",{"_index":1518,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matformfieldmodule",{"_index":1519,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matgridlistmodule",{"_index":1526,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["math.random",{"_index":605,"title":{},"body":{"injectables/BackendService.html":{}}}],["maticonmodule",{"_index":1505,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matinputmodule",{"_index":1522,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matlistmodule",{"_index":1530,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matnativedatemodule",{"_index":1538,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matpaginator",{"_index":1898,"title":{},"body":{"components/TableComponent.html":{}}}],["matpaginatormodule",{"_index":1494,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matprogressspinnermodule",{"_index":1545,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matripplemodule",{"_index":1539,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matselectmodule",{"_index":1534,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsidenav",{"_index":1780,"title":{},"body":{"components/SidenavComponent.html":{}}}],["matsidenavmodule",{"_index":1528,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsnackbarmodule",{"_index":1501,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsort",{"_index":1902,"title":{},"body":{"components/TableComponent.html":{}}}],["matsortmodule",{"_index":1496,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattabledatasource",{"_index":1895,"title":{},"body":{"components/TableComponent.html":{}}}],["mattabledatasource([...data",{"_index":1916,"title":{},"body":{"components/TableComponent.html":{}}}],["mattablemodule",{"_index":1492,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattabsmodule",{"_index":1511,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattoolbarmodule",{"_index":1532,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattooltipmodule",{"_index":1541,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["maxage",{"_index":395,"title":{},"body":{"modules/AppModule.html":{}}}],["maximization",{"_index":2331,"title":{},"body":{"index.html":{}}}],["maximize",{"_index":1457,"title":{},"body":{"components/LoginComponent.html":{}}}],["meaningful",{"_index":2364,"title":{},"body":{"index.html":{}}}],["measure",{"_index":1226,"title":{},"body":{"components/DashboardComponent.html":{}}}],["med",{"_index":1385,"title":{},"body":{"components/FormComponent.html":{}}}],["medium",{"_index":2265,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["meeting",{"_index":2261,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["meeting_room",{"_index":796,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{}}}],["member",{"_index":888,"title":{},"body":{"components/ContactListComponent.html":{}}}],["menu",{"_index":1408,"title":{},"body":{"components/HeaderComponent.html":{}}}],["merge",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BackendService.html":{}}}],["merriweather",{"_index":1371,"title":{},"body":{"components/FormComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["messagingsenderid",{"_index":2477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":14,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"pipes/RatingColorPipe.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"pipes/TaskEnumDisplayPipe.html":{},"components/TasksComponent.html":{}}}],["methods",{"_index":31,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"components/ContactListComponent.html":{},"injectables/ContactMetricService.html":{},"components/DashboardComponent.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MetricsService.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"pipes/RatingColorPipe.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"pipes/TaskEnumDisplayPipe.html":{},"components/TasksComponent.html":{}}}],["metric",{"_index":701,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{}}}],["metric.service",{"_index":698,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["metric.service.ts",{"_index":1041,"title":{},"body":{"injectables/ContactMetricService.html":{},"coverage.html":{}}}],["metric.service.ts:10",{"_index":1046,"title":{},"body":{"injectables/ContactMetricService.html":{}}}],["metric.service.ts:6",{"_index":1043,"title":{},"body":{"injectables/ContactMetricService.html":{}}}],["metrics",{"_index":926,"title":{},"body":{"components/ContactListComponent.html":{},"components/SidenavComponent.html":{},"index.html":{}}}],["metrics/highlights",{"_index":2386,"title":{},"body":{"index.html":{}}}],["metricservice",{"_index":1139,"title":{},"body":{"components/DashboardComponent.html":{}}}],["metricsservice",{"_index":1137,"title":{"injectables/MetricsService.html":{}},"body":{"components/DashboardComponent.html":{},"injectables/MetricsService.html":{},"coverage.html":{}}}],["metrictemplate",{"_index":663,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["middle",{"_index":1968,"title":{},"body":{"components/TableComponent.html":{}}}],["miscellaneous",{"_index":2187,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":2420,"title":{},"body":{"index.html":{}}}],["modal",{"_index":188,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"modules/CardsModule.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["modalcardcomponent",{"_index":187,"title":{"components/ModalCardComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"modules/CardsModule.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mode",{"_index":405,"title":{},"body":{"modules/AppModule.html":{}}}],["models/users",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["module",{"_index":280,"title":{"modules/AnalyticsModule.html":{},"modules/AnalyticsRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CardsModule.html":{},"modules/ContactRoutingModule.html":{},"modules/ContactsModule.html":{},"modules/CoreModule.html":{},"modules/LayoutModule.html":{},"modules/MaterialModule.html":{},"modules/NotesModule.html":{},"modules/NotesRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TabModule.html":{},"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{}},"body":{}}],["modules",{"_index":282,"title":{"modules.html":{}},"body":{"modules/AnalyticsModule.html":{},"modules/AnalyticsRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CardsModule.html":{},"modules/ContactRoutingModule.html":{},"modules/ContactsModule.html":{},"modules/CoreModule.html":{},"modules/LayoutModule.html":{},"modules/MaterialModule.html":{},"modules/NotesModule.html":{},"modules/NotesRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TabModule.html":{},"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["molding",{"_index":2342,"title":{},"body":{"index.html":{}}}],["moment",{"_index":974,"title":{},"body":{"components/ContactListComponent.html":{},"components/FormComponent.html":{},"dependencies.html":{}}}],["moment(new",{"_index":1007,"title":{},"body":{"components/ContactListComponent.html":{},"components/FormComponent.html":{}}}],["monkeypatchchartjslegend",{"_index":1194,"title":{},"body":{"components/DashboardComponent.html":{}}}],["monkeypatchchartjstooltip",{"_index":1195,"title":{},"body":{"components/DashboardComponent.html":{}}}],["montserrat",{"_index":1245,"title":{},"body":{"components/DashboardComponent.html":{}}}],["more",{"_index":923,"title":{},"body":{"components/ContactListComponent.html":{},"index.html":{}}}],["mostdistantfamilymember",{"_index":1126,"title":{},"body":{"components/DashboardComponent.html":{}}}],["mostdistantfriend",{"_index":1127,"title":{},"body":{"components/DashboardComponent.html":{}}}],["mostimportantfriend",{"_index":1128,"title":{},"body":{"components/DashboardComponent.html":{}}}],["mother",{"_index":2225,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["moveiteminarray",{"_index":1905,"title":{},"body":{"components/TableComponent.html":{}}}],["moveiteminarray(this.columns",{"_index":1925,"title":{},"body":{"components/TableComponent.html":{}}}],["moz",{"_index":1803,"title":{},"body":{"components/SidenavComponent.html":{}}}],["ms",{"_index":1789,"title":{},"body":{"components/SidenavComponent.html":{}}}],["myfirst",{"_index":1983,"title":{},"body":{"components/TableComponent.html":{}}}],["name",{"_index":41,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"injectables/ContactEffects.html":{},"components/ContactListComponent.html":{},"injectables/ContactMetricService.html":{},"components/DashboardComponent.html":{},"interfaces/Day.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MetricsService.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"injectables/NoteEffects.html":{},"components/NoteListComponent.html":{},"pipes/RatingColorPipe.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"injectables/TaskEffects.html":{},"pipes/TaskEnumDisplayPipe.html":{},"components/TasksComponent.html":{}}}],["name:string",{"_index":2006,"title":{},"body":{"interfaces/Task.html":{}}}],["nav",{"_index":355,"title":{},"body":{"components/AppComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{}}}],["need",{"_index":2348,"title":{},"body":{"index.html":{}}}],["nephew",{"_index":2230,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["network",{"_index":889,"title":{},"body":{"components/ContactListComponent.html":{},"index.html":{}}}],["neue",{"_index":1441,"title":{},"body":{"components/HeaderComponent.html":{}}}],["new",{"_index":22,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/ContactListComponent.html":{},"components/FormComponent.html":{},"components/HeaderComponent.html":{},"components/NoteListComponent.html":{},"components/TableComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":1375,"title":{},"body":{"components/FormComponent.html":{},"components/TabComponent.html":{}}}],["ng2",{"_index":300,"title":{},"body":{"modules/AnalyticsModule.html":{},"components/DashboardComponent.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":1860,"title":{},"body":{"components/TableComponent.html":{}}}],["ngmodule",{"_index":295,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AnalyticsRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CardsModule.html":{},"modules/ContactRoutingModule.html":{},"modules/ContactsModule.html":{},"modules/CoreModule.html":{},"modules/LayoutModule.html":{},"modules/MaterialModule.html":{},"modules/NotesModule.html":{},"modules/NotesRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TabModule.html":{},"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{}}}],["ngonchanges",{"_index":1861,"title":{},"body":{"components/TableComponent.html":{}}}],["ngondestroy",{"_index":909,"title":{},"body":{"components/ContactListComponent.html":{},"components/NoteListComponent.html":{},"components/TasksComponent.html":{}}}],["ngoninit",{"_index":32,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["ngrx/effects",{"_index":387,"title":{},"body":{"modules/AppModule.html":{},"injectables/ContactEffects.html":{},"modules/ContactsModule.html":{},"injectables/NoteEffects.html":{},"modules/NotesModule.html":{},"modules/SharedModule.html":{},"injectables/TaskEffects.html":{},"modules/TaskModule.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":969,"title":{},"body":{"components/ContactListComponent.html":{},"interfaces/ContactState.html":{},"interfaces/NoteState.html":{},"interfaces/TaskState.html":{},"dependencies.html":{}}}],["ngrx/router",{"_index":2174,"title":{},"body":{"dependencies.html":{}}}],["ngrx/store",{"_index":141,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"interfaces/ContactState.html":{},"components/DashboardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"interfaces/NoteState.html":{},"modules/NotesModule.html":{},"modules/SharedModule.html":{},"components/SidenavComponent.html":{},"components/TableComponent.html":{},"modules/TaskModule.html":{},"interfaces/TaskState.html":{},"components/TasksComponent.html":{},"dependencies.html":{}}}],["ngx",{"_index":1553,"title":{},"body":{"modules/MaterialModule.html":{},"dependencies.html":{}}}],["ngxspinnermodule",{"_index":1552,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["niece",{"_index":2229,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nobardata",{"_index":1227,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nodata",{"_index":877,"title":{},"body":{"components/ContactListComponent.html":{},"components/NoteListComponent.html":{},"components/TableComponent.html":{},"components/TasksComponent.html":{}}}],["nodatafilter",{"_index":2003,"title":{},"body":{"components/TableComponent.html":{}}}],["none",{"_index":1791,"title":{},"body":{"components/SidenavComponent.html":{},"miscellaneous/enumerations.html":{}}}],["nonrelationmetric",{"_index":902,"title":{},"body":{"components/ContactListComponent.html":{}}}],["nopiedata",{"_index":1224,"title":{},"body":{"components/DashboardComponent.html":{}}}],["note",{"_index":190,"title":{"interfaces/Note.html":{}},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"injectables/BackendService.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"interfaces/Note.html":{},"components/NoteDetailComponent.html":{},"injectables/NoteEffects.html":{},"components/NoteListComponent.html":{},"interfaces/NoteState.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["note'},{'name",{"_index":165,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["note.body",{"_index":1611,"title":{},"body":{"components/NoteDetailComponent.html":{}}}],["note.component",{"_index":1727,"title":{},"body":{"modules/NotesModule.html":{},"modules/NotesRoutingModule.html":{}}}],["note.component.scss",{"_index":210,"title":{},"body":{"components/AddNoteComponent.html":{}}}],["note.component.ts",{"_index":209,"title":{},"body":{"components/AddNoteComponent.html":{},"coverage.html":{}}}],["note.component.ts:104",{"_index":217,"title":{},"body":{"components/AddNoteComponent.html":{}}}],["note.component.ts:35",{"_index":225,"title":{},"body":{"components/AddNoteComponent.html":{}}}],["note.component.ts:41",{"_index":226,"title":{},"body":{"components/AddNoteComponent.html":{}}}],["note.component.ts:48",{"_index":227,"title":{},"body":{"components/AddNoteComponent.html":{}}}],["note.component.ts:53",{"_index":218,"title":{},"body":{"components/AddNoteComponent.html":{}}}],["note.component.ts:56",{"_index":214,"title":{},"body":{"components/AddNoteComponent.html":{}}}],["note.component.ts:60",{"_index":215,"title":{},"body":{"components/AddNoteComponent.html":{}}}],["note.contact.display",{"_index":1610,"title":{},"body":{"components/NoteDetailComponent.html":{}}}],["note.contact.value",{"_index":1024,"title":{},"body":{"components/ContactListComponent.html":{}}}],["note.title",{"_index":1609,"title":{},"body":{"components/NoteDetailComponent.html":{}}}],["note/add",{"_index":208,"title":{},"body":{"components/AddNoteComponent.html":{},"modules/NotesModule.html":{},"modules/NotesRoutingModule.html":{},"coverage.html":{}}}],["noteactions",{"_index":2151,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["noteactiontypes",{"_index":2197,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["noteactiontypes.add_note",{"_index":2487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noteactiontypes.add_note_fail",{"_index":2489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noteactiontypes.add_note_success",{"_index":2491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noteactiontypes.delete_note",{"_index":2498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noteactiontypes.delete_note_fail",{"_index":2500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noteactiontypes.delete_note_success",{"_index":2502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noteactiontypes.load_notes_fail",{"_index":2483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noteactiontypes.load_notes_success",{"_index":2485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noteactiontypes.update_note",{"_index":2493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noteactiontypes.update_note_fail",{"_index":2495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noteactiontypes.update_note_success",{"_index":2497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noteadapter",{"_index":1700,"title":{},"body":{"interfaces/NoteState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["noteadapter.addone(action.note",{"_index":1707,"title":{},"body":{"interfaces/NoteState.html":{},"miscellaneous/variables.html":{}}}],["noteadapter.getinitialstate",{"_index":1702,"title":{},"body":{"interfaces/NoteState.html":{},"miscellaneous/variables.html":{}}}],["noteadapter.getselectors",{"_index":1715,"title":{},"body":{"interfaces/NoteState.html":{},"miscellaneous/variables.html":{}}}],["noteadapter.removeone(action.note,state",{"_index":1713,"title":{},"body":{"interfaces/NoteState.html":{},"miscellaneous/variables.html":{}}}],["noteadapter.setall(action.notes",{"_index":1704,"title":{},"body":{"interfaces/NoteState.html":{},"miscellaneous/variables.html":{}}}],["noteadapter.updateone(action.note,state",{"_index":1710,"title":{},"body":{"interfaces/NoteState.html":{},"miscellaneous/variables.html":{}}}],["notedetailcomponent",{"_index":189,"title":{"components/NoteDetailComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"modules/NotesModule.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["noteeffects",{"_index":1612,"title":{"injectables/NoteEffects.html":{}},"body":{"injectables/NoteEffects.html":{},"modules/NotesModule.html":{},"coverage.html":{}}}],["notefeaturekey",{"_index":1699,"title":{},"body":{"interfaces/NoteState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["notefilter",{"_index":1659,"title":{},"body":{"components/NoteListComponent.html":{}}}],["notelistcomponent",{"_index":191,"title":{"components/NoteListComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"modules/NotesModule.html":{},"modules/NotesRoutingModule.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notelistcomponent,addnotecomponent,notedetailcomponent",{"_index":1729,"title":{},"body":{"modules/NotesModule.html":{}}}],["noteoptions",{"_index":699,"title":{},"body":{"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"components/NoteListComponent.html":{},"miscellaneous/enumerations.html":{}}}],["noteoptions[0",{"_index":728,"title":{},"body":{"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"components/NoteListComponent.html":{}}}],["noteoptions[1",{"_index":729,"title":{},"body":{"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"components/NoteListComponent.html":{}}}],["noteoptions[2",{"_index":730,"title":{},"body":{"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"components/NoteListComponent.html":{}}}],["noteoptions[3",{"_index":731,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/NoteListComponent.html":{}}}],["notepipeoptions",{"_index":664,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["notereducer",{"_index":444,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/NoteState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["notes",{"_index":83,"title":{},"body":{"components/AddContactComponent.html":{},"modules/AppRoutingModule.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/NoteDetailComponent.html":{},"injectables/NoteEffects.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["notes.component.scss",{"_index":1645,"title":{},"body":{"components/NoteListComponent.html":{}}}],["notes.filter(note",{"_index":1023,"title":{},"body":{"components/ContactListComponent.html":{}}}],["notes.routing.module",{"_index":1725,"title":{},"body":{"modules/NotesModule.html":{}}}],["notesmodule",{"_index":1716,"title":{"modules/NotesModule.html":{}},"body":{"modules/NotesModule.html":{},"modules.html":{},"overview.html":{}}}],["notesroutingmodule",{"_index":1720,"title":{"modules/NotesRoutingModule.html":{}},"body":{"modules/NotesModule.html":{},"modules/NotesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["notestate",{"_index":440,"title":{"interfaces/NoteState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/NoteState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["notetosubmit",{"_index":596,"title":{},"body":{"injectables/BackendService.html":{}}}],["notetosubmit['id",{"_index":597,"title":{},"body":{"injectables/BackendService.html":{}}}],["notetype",{"_index":230,"title":{},"body":{"components/AddNoteComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"interfaces/Note.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"miscellaneous/enumerations.html":{}}}],["notetype[0",{"_index":221,"title":{},"body":{"components/AddNoteComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{}}}],["notetype[1",{"_index":222,"title":{},"body":{"components/AddNoteComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{}}}],["notetype[2",{"_index":223,"title":{},"body":{"components/AddNoteComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{}}}],["notetype[3",{"_index":224,"title":{},"body":{"components/AddNoteComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{}}}],["notetype[value",{"_index":827,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{}}}],["notetypechoices",{"_index":213,"title":{},"body":{"components/AddNoteComponent.html":{},"components/NoteDetailComponent.html":{}}}],["notetypefilter",{"_index":1655,"title":{},"body":{"components/NoteListComponent.html":{}}}],["notetypes",{"_index":1656,"title":{},"body":{"components/NoteListComponent.html":{}}}],["nowrap",{"_index":1966,"title":{},"body":{"components/TableComponent.html":{}}}],["npm",{"_index":2394,"title":{},"body":{"index.html":{}}}],["null",{"_index":1069,"title":{},"body":{"interfaces/ContactState.html":{},"interfaces/NoteState.html":{},"interfaces/TaskState.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":565,"title":{},"body":{"injectables/BackendService.html":{},"interfaces/Contact.html":{},"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"components/ContactListComponent.html":{},"injectables/ContactMetricService.html":{},"components/DashboardComponent.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"components/FormComponent.html":{},"interfaces/FormSetupModel.html":{},"injectables/MetricsService.html":{},"pipes/RatingColorPipe.html":{},"components/TabComponent.html":{},"pipes/TaskEnumDisplayPipe.html":{},"interfaces/User.html":{}}}],["numbermax",{"_index":1395,"title":{},"body":{"interfaces/FormSetupModel.html":{}}}],["numbermin",{"_index":1396,"title":{},"body":{"interfaces/FormSetupModel.html":{}}}],["nurture",{"_index":2373,"title":{},"body":{"index.html":{}}}],["object",{"_index":779,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":219,"title":{},"body":{"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"interfaces/FormSetupModel.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"injectables/TaskEffects.html":{},"components/TasksComponent.html":{}}}],["of(contacttosubmit",{"_index":583,"title":{},"body":{"injectables/BackendService.html":{}}}],["of(fromcontactaction.contactactions.deletecontactfail",{"_index":853,"title":{},"body":{"injectables/ContactEffects.html":{}}}],["of(fromcontactaction.contactactions.loadcontactsfail",{"_index":861,"title":{},"body":{"injectables/ContactEffects.html":{}}}],["of(fromnotesaction.noteactions.deletenotefail",{"_index":1627,"title":{},"body":{"injectables/NoteEffects.html":{}}}],["of(fromnotesaction.noteactions.loadnotesfail",{"_index":1633,"title":{},"body":{"injectables/NoteEffects.html":{}}}],["of(fromnotesaction.noteactions.updatenotefail",{"_index":1638,"title":{},"body":{"injectables/NoteEffects.html":{}}}],["of(fromtaskaction.taskactions.deletetaskfail",{"_index":2035,"title":{},"body":{"injectables/TaskEffects.html":{}}}],["of(fromtaskaction.taskactions.loadtasksfail",{"_index":2041,"title":{},"body":{"injectables/TaskEffects.html":{}}}],["of(fromtaskaction.taskactions.updatetaskfail",{"_index":2046,"title":{},"body":{"injectables/TaskEffects.html":{}}}],["of(notetosubmit",{"_index":601,"title":{},"body":{"injectables/BackendService.html":{}}}],["of(null",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{}}}],["of(tasktosubmit",{"_index":592,"title":{},"body":{"injectables/BackendService.html":{}}}],["offer",{"_index":2322,"title":{},"body":{"index.html":{}}}],["oftype",{"_index":868,"title":{},"body":{"injectables/ContactEffects.html":{},"injectables/NoteEffects.html":{},"injectables/TaskEffects.html":{}}}],["oftype(fromcontactaction.contactactions.addcontact",{"_index":840,"title":{},"body":{"injectables/ContactEffects.html":{}}}],["oftype(fromcontactaction.contactactions.deletecontact",{"_index":848,"title":{},"body":{"injectables/ContactEffects.html":{}}}],["oftype(fromcontactaction.contactactions.loadcontacts",{"_index":856,"title":{},"body":{"injectables/ContactEffects.html":{}}}],["oftype(fromcontactaction.contactactions.updatecontact",{"_index":863,"title":{},"body":{"injectables/ContactEffects.html":{}}}],["oftype(fromnotesaction.noteactions.addnote",{"_index":1619,"title":{},"body":{"injectables/NoteEffects.html":{}}}],["oftype(fromnotesaction.noteactions.deletenote",{"_index":1624,"title":{},"body":{"injectables/NoteEffects.html":{}}}],["oftype(fromnotesaction.noteactions.loadnotes",{"_index":1629,"title":{},"body":{"injectables/NoteEffects.html":{}}}],["oftype(fromnotesaction.noteactions.updatenote",{"_index":1635,"title":{},"body":{"injectables/NoteEffects.html":{}}}],["oftype(fromtaskaction.taskactions.addtask",{"_index":2027,"title":{},"body":{"injectables/TaskEffects.html":{}}}],["oftype(fromtaskaction.taskactions.deletetask",{"_index":2032,"title":{},"body":{"injectables/TaskEffects.html":{}}}],["oftype(fromtaskaction.taskactions.loadtasks",{"_index":2037,"title":{},"body":{"injectables/TaskEffects.html":{}}}],["oftype(fromtaskaction.taskactions.updatetask",{"_index":2043,"title":{},"body":{"injectables/TaskEffects.html":{}}}],["on(fromcontactaction.contactactions.addcontactfail",{"_index":1079,"title":{},"body":{"interfaces/ContactState.html":{},"miscellaneous/variables.html":{}}}],["on(fromcontactaction.contactactions.addcontactsuccess",{"_index":1077,"title":{},"body":{"interfaces/ContactState.html":{},"miscellaneous/variables.html":{}}}],["on(fromcontactaction.contactactions.deletecontactfail",{"_index":1086,"title":{},"body":{"interfaces/ContactState.html":{},"miscellaneous/variables.html":{}}}],["on(fromcontactaction.contactactions.deletecontactsuccess",{"_index":1084,"title":{},"body":{"interfaces/ContactState.html":{},"miscellaneous/variables.html":{}}}],["on(fromcontactaction.contactactions.loadcontactsfail",{"_index":1075,"title":{},"body":{"interfaces/ContactState.html":{},"miscellaneous/variables.html":{}}}],["on(fromcontactaction.contactactions.loadcontactsuccess",{"_index":1072,"title":{},"body":{"interfaces/ContactState.html":{},"miscellaneous/variables.html":{}}}],["on(fromcontactaction.contactactions.updatecontact",{"_index":1080,"title":{},"body":{"interfaces/ContactState.html":{},"miscellaneous/variables.html":{}}}],["on(fromnoteaction.noteactions.addnotefail",{"_index":1708,"title":{},"body":{"interfaces/NoteState.html":{},"miscellaneous/variables.html":{}}}],["on(fromnoteaction.noteactions.addnotesuccess",{"_index":1706,"title":{},"body":{"interfaces/NoteState.html":{},"miscellaneous/variables.html":{}}}],["on(fromnoteaction.noteactions.deletenotefail",{"_index":1714,"title":{},"body":{"interfaces/NoteState.html":{},"miscellaneous/variables.html":{}}}],["on(fromnoteaction.noteactions.deletenotesuccess",{"_index":1712,"title":{},"body":{"interfaces/NoteState.html":{},"miscellaneous/variables.html":{}}}],["on(fromnoteaction.noteactions.loadnotesfail",{"_index":1705,"title":{},"body":{"interfaces/NoteState.html":{},"miscellaneous/variables.html":{}}}],["on(fromnoteaction.noteactions.loadnotesuccess",{"_index":1703,"title":{},"body":{"interfaces/NoteState.html":{},"miscellaneous/variables.html":{}}}],["on(fromnoteaction.noteactions.updatenotefail",{"_index":1711,"title":{},"body":{"interfaces/NoteState.html":{},"miscellaneous/variables.html":{}}}],["on(fromnoteaction.noteactions.updatenotesuccess",{"_index":1709,"title":{},"body":{"interfaces/NoteState.html":{},"miscellaneous/variables.html":{}}}],["on(taskactions.taskactions.addtaskfail",{"_index":2083,"title":{},"body":{"interfaces/TaskState.html":{},"miscellaneous/variables.html":{}}}],["on(taskactions.taskactions.addtasksuccess",{"_index":2081,"title":{},"body":{"interfaces/TaskState.html":{},"miscellaneous/variables.html":{}}}],["on(taskactions.taskactions.loadtasksfail",{"_index":2080,"title":{},"body":{"interfaces/TaskState.html":{},"miscellaneous/variables.html":{}}}],["on(taskactions.taskactions.loadtasksuccess",{"_index":2078,"title":{},"body":{"interfaces/TaskState.html":{},"miscellaneous/variables.html":{}}}],["onclicked",{"_index":1862,"title":{},"body":{"components/TableComponent.html":{}}}],["onclicked(type",{"_index":1888,"title":{},"body":{"components/TableComponent.html":{}}}],["oninit",{"_index":13,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AppComponent.html":{},"injectables/BackendService.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["onsubmit",{"_index":1305,"title":{},"body":{"components/FormComponent.html":{}}}],["ontoggle",{"_index":1412,"title":{},"body":{"components/HeaderComponent.html":{}}}],["ontoolbarlogout",{"_index":1413,"title":{},"body":{"components/HeaderComponent.html":{}}}],["onzoom",{"_index":1867,"title":{},"body":{"components/TableComponent.html":{}}}],["onzoom)=\"detailcontact($event",{"_index":884,"title":{},"body":{"components/ContactListComponent.html":{}}}],["onzoom)=\"detailnote($event",{"_index":1651,"title":{},"body":{"components/NoteListComponent.html":{}}}],["onzoom)=\"detailtask($event",{"_index":2089,"title":{},"body":{"components/TasksComponent.html":{}}}],["open",{"_index":413,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["operations/contact",{"_index":146,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"injectables/MetricsService.html":{},"components/TaskDetailComponent.html":{}}}],["operations/contact/components/contact",{"_index":1907,"title":{},"body":{"components/TableComponent.html":{}}}],["operations/contact/index",{"_index":144,"title":{},"body":{"components/AddContactComponent.html":{},"components/TableComponent.html":{}}}],["operations/contact/models/interfaces/contact",{"_index":872,"title":{},"body":{"injectables/ContactEffects.html":{}}}],["operations/contact/services/contact",{"_index":697,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["operations/contact/state",{"_index":234,"title":{},"body":{"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"modules/SharedModule.html":{}}}],["operations/index",{"_index":448,"title":{},"body":{"interfaces/AppState.html":{},"injectables/BackendService.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"interfaces/ContactState.html":{},"components/DashboardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"interfaces/NoteState.html":{},"interfaces/TaskState.html":{},"components/TasksComponent.html":{}}}],["operations/note",{"_index":231,"title":{},"body":{"components/AddNoteComponent.html":{},"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{}}}],["operations/note/index",{"_index":229,"title":{},"body":{"components/AddNoteComponent.html":{}}}],["operations/note/models/enums/statuses.enum",{"_index":232,"title":{},"body":{"components/AddNoteComponent.html":{}}}],["operations/note/models/interfaces/note",{"_index":1642,"title":{},"body":{"injectables/NoteEffects.html":{}}}],["operations/note/state",{"_index":445,"title":{},"body":{"interfaces/AppState.html":{},"components/ContactListComponent.html":{}}}],["operations/note/state/reducers/notes.reducer",{"_index":1761,"title":{},"body":{"modules/SharedModule.html":{}}}],["operations/task",{"_index":273,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"components/TaskDetailComponent.html":{},"injectables/TaskEffects.html":{},"pipes/TaskEnumDisplayPipe.html":{},"components/TasksComponent.html":{}}}],["operations/task/models/interfaces/task",{"_index":2016,"title":{},"body":{"components/TaskDetailComponent.html":{}}}],["operations/task/state",{"_index":275,"title":{},"body":{"components/AddTaskComponent.html":{},"interfaces/AppState.html":{},"components/ContactListComponent.html":{},"components/NoteListComponent.html":{},"modules/SharedModule.html":{}}}],["operations/task/state/reducers/task.reducer",{"_index":1759,"title":{},"body":{"modules/SharedModule.html":{}}}],["operations/task/state/selectors/task.selectors",{"_index":973,"title":{},"body":{"components/ContactListComponent.html":{},"components/NoteListComponent.html":{},"components/TasksComponent.html":{}}}],["option.display",{"_index":1363,"title":{},"body":{"components/FormComponent.html":{}}}],["option.name",{"_index":1365,"title":{},"body":{"components/FormComponent.html":{}}}],["optional",{"_index":43,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"injectables/ContactEffects.html":{},"components/ContactListComponent.html":{},"injectables/ContactMetricService.html":{},"components/DashboardComponent.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"components/FormComponent.html":{},"interfaces/FormSetupModel.html":{},"components/LoginComponent.html":{},"injectables/MetricsService.html":{},"components/NoteDetailComponent.html":{},"injectables/NoteEffects.html":{},"components/NoteListComponent.html":{},"pipes/RatingColorPipe.html":{},"components/SidenavComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"injectables/TaskEffects.html":{},"pipes/TaskEnumDisplayPipe.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{}}}],["options",{"_index":1989,"title":{},"body":{"components/TableComponent.html":{}}}],["options.enum.ts",{"_index":2200,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["options.ts",{"_index":2192,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["orientation",{"_index":1304,"title":{},"body":{"components/FormComponent.html":{}}}],["oriented",{"_index":2340,"title":{},"body":{"index.html":{}}}],["origin",{"_index":2416,"title":{},"body":{"index.html":{}}}],["otherdate",{"_index":79,"title":{},"body":{"components/AddContactComponent.html":{},"interfaces/Contact.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{}}}],["out",{"_index":291,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AppModule.html":{},"modules/CardsModule.html":{},"modules/ContactsModule.html":{},"modules/CoreModule.html":{},"modules/LayoutModule.html":{},"modules/MaterialModule.html":{},"modules/NotesModule.html":{},"modules/SharedModule.html":{},"modules/TabModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["output",{"_index":627,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{},"components/TableComponent.html":{}}}],["outputs",{"_index":615,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormComponent.html":{},"components/HeaderComponent.html":{},"components/TableComponent.html":{}}}],["overflow",{"_index":353,"title":{},"body":{"components/AppComponent.html":{},"components/ContactListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TableComponent.html":{}}}],["overview",{"_index":2430,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":2163,"title":{"dependencies.html":{}},"body":{}}],["packagesnpm",{"_index":2395,"title":{},"body":{"index.html":{}}}],["padding",{"_index":358,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/TableComponent.html":{}}}],["paginator",{"_index":1855,"title":{},"body":{"components/TableComponent.html":{}}}],["panelclass",{"_index":1017,"title":{},"body":{"components/ContactListComponent.html":{}}}],["param",{"_index":1014,"title":{},"body":{"components/ContactListComponent.html":{}}}],["parameters",{"_index":39,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"injectables/ContactEffects.html":{},"components/ContactListComponent.html":{},"injectables/ContactMetricService.html":{},"components/DashboardComponent.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"components/FormComponent.html":{},"components/LoginComponent.html":{},"injectables/MetricsService.html":{},"components/NoteDetailComponent.html":{},"injectables/NoteEffects.html":{},"components/NoteListComponent.html":{},"pipes/RatingColorPipe.html":{},"components/SidenavComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"injectables/TaskEffects.html":{},"pipes/TaskEnumDisplayPipe.html":{},"components/TasksComponent.html":{}}}],["parent",{"_index":1463,"title":{},"body":{"components/LoginComponent.html":{}}}],["partial",{"_index":566,"title":{},"body":{"injectables/BackendService.html":{}}}],["pass",{"_index":976,"title":{},"body":{"components/ContactListComponent.html":{}}}],["passed",{"_index":925,"title":{},"body":{"components/ContactListComponent.html":{}}}],["password",{"_index":1341,"title":{},"body":{"components/FormComponent.html":{}}}],["path",{"_index":307,"title":{},"body":{"modules/AnalyticsRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactRoutingModule.html":{},"modules/NotesRoutingModule.html":{},"modules/TaskRoutingModule.html":{}}}],["path:'dashboard",{"_index":309,"title":{},"body":{"modules/AnalyticsRoutingModule.html":{}}}],["path:'note",{"_index":1736,"title":{},"body":{"modules/NotesRoutingModule.html":{}}}],["path:'task",{"_index":2071,"title":{},"body":{"modules/TaskRoutingModule.html":{}}}],["pauses",{"_index":407,"title":{},"body":{"modules/AppModule.html":{}}}],["person_outline",{"_index":786,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{}}}],["personal",{"_index":2292,"title":{},"body":{"index.html":{}}}],["personalized",{"_index":2357,"title":{},"body":{"index.html":{}}}],["phone",{"_index":81,"title":{},"body":{"components/AddContactComponent.html":{},"interfaces/Contact.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{}}}],["photo",{"_index":1806,"title":{},"body":{"components/SidenavComponent.html":{}}}],["photourl",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["pie",{"_index":1189,"title":{},"body":{"components/DashboardComponent.html":{}}}],["piedata",{"_index":1129,"title":{},"body":{"components/DashboardComponent.html":{}}}],["pielabels",{"_index":1130,"title":{},"body":{"components/DashboardComponent.html":{}}}],["pielegend",{"_index":1131,"title":{},"body":{"components/DashboardComponent.html":{}}}],["pieoptions",{"_index":1132,"title":{},"body":{"components/DashboardComponent.html":{}}}],["pietype",{"_index":1133,"title":{},"body":{"components/DashboardComponent.html":{}}}],["pipe",{"_index":767,"title":{"pipes/ContactDetailTranslatorPipe.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"pipes/RatingColorPipe.html":{},"pipes/TaskEnumDisplayPipe.html":{}},"body":{"pipes/ContactDetailTranslatorPipe.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"pipes/RatingColorPipe.html":{},"pipes/TaskEnumDisplayPipe.html":{},"coverage.html":{}}}],["pipeline",{"_index":2374,"title":{},"body":{"index.html":{}}}],["pipeoptions",{"_index":903,"title":{},"body":{"components/ContactListComponent.html":{},"components/NoteListComponent.html":{},"components/TasksComponent.html":{}}}],["pipes",{"_index":769,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"pipes/RatingColorPipe.html":{},"pipes/TaskEnumDisplayPipe.html":{},"overview.html":{}}}],["pipes/contact",{"_index":1755,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipes/rating",{"_index":1100,"title":{},"body":{"modules/ContactsModule.html":{}}}],["pipesneeded",{"_index":1866,"title":{},"body":{"components/TableComponent.html":{}}}],["pipesneeded]=\"pipeoptions",{"_index":881,"title":{},"body":{"components/ContactListComponent.html":{},"components/NoteListComponent.html":{},"components/TasksComponent.html":{}}}],["pipetransform",{"_index":802,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"pipes/RatingColorPipe.html":{},"pipes/TaskEnumDisplayPipe.html":{}}}],["pipetype",{"_index":776,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"components/TableComponent.html":{}}}],["pipetype:string",{"_index":804,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{}}}],["pipetype]=\"'contact",{"_index":882,"title":{},"body":{"components/ContactListComponent.html":{}}}],["pipetype]=\"'note",{"_index":1649,"title":{},"body":{"components/NoteListComponent.html":{}}}],["pipetype]=\"'task",{"_index":2087,"title":{},"body":{"components/TasksComponent.html":{}}}],["pipetype]=\"\\'contact",{"_index":1038,"title":{},"body":{"components/ContactListComponent.html":{}}}],["pipetype]=\"\\'note",{"_index":1695,"title":{},"body":{"components/NoteListComponent.html":{}}}],["pipetype]=\"\\'task",{"_index":2123,"title":{},"body":{"components/TasksComponent.html":{}}}],["place",{"_index":2401,"title":{},"body":{"index.html":{}}}],["please",{"_index":1359,"title":{},"body":{"components/FormComponent.html":{}}}],["portion",{"_index":1433,"title":{},"body":{"components/HeaderComponent.html":{}}}],["position",{"_index":1464,"title":{},"body":{"components/LoginComponent.html":{},"components/SidenavComponent.html":{}}}],["positive",{"_index":2246,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["potential",{"_index":890,"title":{},"body":{"components/ContactListComponent.html":{}}}],["potentialrating",{"_index":1045,"title":{},"body":{"injectables/ContactMetricService.html":{}}}],["potentialrating)*100",{"_index":1052,"title":{},"body":{"injectables/ContactMetricService.html":{}}}],["potentialrating:number",{"_index":1049,"title":{},"body":{"injectables/ContactMetricService.html":{}}}],["primary",{"_index":1261,"title":{},"body":{"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/HeaderComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{}}}],["priorities",{"_index":29,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{},"pipes/TaskEnumDisplayPipe.html":{},"miscellaneous/enumerations.html":{}}}],["priorities[0",{"_index":130,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/ContactDetailComponent.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["priorities[1",{"_index":131,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/ContactDetailComponent.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["priorities[2",{"_index":132,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/ContactDetailComponent.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["priorities[3",{"_index":133,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/ContactDetailComponent.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["priorities[4",{"_index":134,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/ContactDetailComponent.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["priorities[value",{"_index":820,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"pipes/TaskEnumDisplayPipe.html":{}}}],["priority",{"_index":68,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"interfaces/Contact.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"interfaces/Note.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"interfaces/Task.html":{},"components/TaskDetailComponent.html":{},"pipes/TaskEnumDisplayPipe.html":{},"components/TasksComponent.html":{},"miscellaneous/enumerations.html":{}}}],["priority:'priority_high",{"_index":788,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{}}}],["priorityhtml",{"_index":819,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{}}}],["private",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"components/ContactDetailComponent.html":{},"injectables/ContactEffects.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/NoteDetailComponent.html":{},"injectables/NoteEffects.html":{},"components/NoteListComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"injectables/TaskEffects.html":{},"components/TasksComponent.html":{}}}],["production",{"_index":2466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":1805,"title":{},"body":{"components/SidenavComponent.html":{}}}],["profit",{"_index":2329,"title":{},"body":{"index.html":{}}}],["project",{"_index":2304,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":2474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":463,"title":{},"body":{"guards/AuthGuard.html":{}}}],["promote",{"_index":2293,"title":{},"body":{"index.html":{}}}],["properties",{"_index":24,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthService.html":{},"interfaces/Contact.html":{},"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"injectables/ContactEffects.html":{},"components/ContactListComponent.html":{},"interfaces/ContactState.html":{},"components/DashboardComponent.html":{},"interfaces/Day.html":{},"components/FormComponent.html":{},"interfaces/FormSetupModel.html":{},"interfaces/Note.html":{},"components/NoteDetailComponent.html":{},"injectables/NoteEffects.html":{},"components/NoteListComponent.html":{},"interfaces/NoteState.html":{},"components/SidenavComponent.html":{},"components/TableComponent.html":{},"interfaces/Task.html":{},"components/TaskDetailComponent.html":{},"injectables/TaskEffects.html":{},"interfaces/TaskState.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{}}}],["props",{"_index":2449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provide",{"_index":1557,"title":{},"body":{"modules/MaterialModule.html":{}}}],["provided",{"_index":244,"title":{},"body":{"components/AddNoteComponent.html":{}}}],["providedin",{"_index":466,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"injectables/ContactMetricService.html":{},"injectables/MetricsService.html":{}}}],["provider",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{}}}],["providers",{"_index":415,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["psychology",{"_index":799,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{}}}],["public",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["pull",{"_index":2417,"title":{},"body":{"index.html":{}}}],["push",{"_index":2415,"title":{},"body":{"index.html":{}}}],["question",{"_index":2263,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["radius",{"_index":1256,"title":{},"body":{"components/DashboardComponent.html":{},"components/GeneralCardComponent.html":{},"components/ModalCardComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{}}}],["random",{"_index":2240,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rating",{"_index":665,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{}}}],["ratingcolor",{"_index":1741,"title":{},"body":{"pipes/RatingColorPipe.html":{}}}],["ratingcolorpipe",{"_index":1094,"title":{"pipes/RatingColorPipe.html":{}},"body":{"modules/ContactsModule.html":{},"pipes/RatingColorPipe.html":{},"coverage.html":{},"overview.html":{}}}],["rating}}/100",{"_index":886,"title":{},"body":{"components/ContactListComponent.html":{}}}],["reactiveformsmodule",{"_index":1753,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["reacts",{"_index":913,"title":{},"body":{"components/ContactListComponent.html":{}}}],["really",{"_index":2333,"title":{},"body":{"index.html":{}}}],["recording",{"_index":408,"title":{},"body":{"modules/AppModule.html":{}}}],["recreation",{"_index":2239,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["red",{"_index":1278,"title":{},"body":{"components/DashboardComponent.html":{}}}],["reducers",{"_index":390,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reducers:actionreducermap",{"_index":449,"title":{},"body":{"interfaces/AppState.html":{}}}],["refcolumns",{"_index":1856,"title":{},"body":{"components/TableComponent.html":{}}}],["reference",{"_index":931,"title":{},"body":{"components/ContactListComponent.html":{}}}],["reg",{"_index":620,"title":{},"body":{"components/ButtonComponent.html":{}}}],["regular",{"_index":621,"title":{},"body":{"components/ButtonComponent.html":{}}}],["related",{"_index":245,"title":{},"body":{"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/ContactListComponent.html":{},"index.html":{}}}],["relationship",{"_index":2330,"title":{},"body":{"index.html":{}}}],["relationships",{"_index":1458,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["relative",{"_index":1465,"title":{},"body":{"components/LoginComponent.html":{},"components/SidenavComponent.html":{}}}],["rem",{"_index":1270,"title":{},"body":{"components/DashboardComponent.html":{}}}],["reminders",{"_index":2378,"title":{},"body":{"index.html":{}}}],["repeat",{"_index":1467,"title":{},"body":{"components/LoginComponent.html":{}}}],["repeat(2",{"_index":1228,"title":{},"body":{"components/DashboardComponent.html":{}}}],["repeat(3",{"_index":760,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/NoteDetailComponent.html":{}}}],["repogit",{"_index":2390,"title":{},"body":{"index.html":{}}}],["report",{"_index":2299,"title":{},"body":{"index.html":{}}}],["request",{"_index":2301,"title":{},"body":{"index.html":{}}}],["required",{"_index":56,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/ContactDetailComponent.html":{},"interfaces/FormSetupModel.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["reset",{"_index":290,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AppModule.html":{},"modules/CardsModule.html":{},"modules/ContactsModule.html":{},"modules/CoreModule.html":{},"modules/LayoutModule.html":{},"modules/MaterialModule.html":{},"modules/NotesModule.html":{},"modules/SharedModule.html":{},"modules/TabModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["resettableandfilter",{"_index":1863,"title":{},"body":{"components/TableComponent.html":{}}}],["resettableandfilter(data",{"_index":1890,"title":{},"body":{"components/TableComponent.html":{}}}],["responsive",{"_index":1187,"title":{},"body":{"components/DashboardComponent.html":{}}}],["restrict",{"_index":402,"title":{},"body":{"modules/AppModule.html":{}}}],["result",{"_index":204,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"modules/AnalyticsModule.html":{},"modules/AnalyticsRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"components/ButtonComponent.html":{},"modules/CardsModule.html":{},"interfaces/Contact.html":{},"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"injectables/ContactEffects.html":{},"components/ContactListComponent.html":{},"injectables/ContactMetricService.html":{},"modules/ContactRoutingModule.html":{},"interfaces/ContactState.html":{},"modules/ContactsModule.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"interfaces/Day.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"components/FormComponent.html":{},"interfaces/FormSetupModel.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"injectables/MetricsService.html":{},"components/ModalCardComponent.html":{},"interfaces/Note.html":{},"components/NoteDetailComponent.html":{},"injectables/NoteEffects.html":{},"components/NoteListComponent.html":{},"interfaces/NoteState.html":{},"modules/NotesModule.html":{},"modules/NotesRoutingModule.html":{},"pipes/RatingColorPipe.html":{},"modules/SharedModule.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"modules/TabModule.html":{},"components/TableComponent.html":{},"interfaces/Task.html":{},"components/TaskDetailComponent.html":{},"injectables/TaskEffects.html":{},"pipes/TaskEnumDisplayPipe.html":{},"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{},"interfaces/TaskState.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.action",{"_index":1693,"title":{},"body":{"components/NoteListComponent.html":{},"components/TasksComponent.html":{}}}],["result.type",{"_index":1943,"title":{},"body":{"components/TableComponent.html":{}}}],["results",{"_index":206,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"modules/AnalyticsModule.html":{},"modules/AnalyticsRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"components/ButtonComponent.html":{},"modules/CardsModule.html":{},"interfaces/Contact.html":{},"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"injectables/ContactEffects.html":{},"components/ContactListComponent.html":{},"injectables/ContactMetricService.html":{},"modules/ContactRoutingModule.html":{},"interfaces/ContactState.html":{},"modules/ContactsModule.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"interfaces/Day.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"components/FormComponent.html":{},"interfaces/FormSetupModel.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"injectables/MetricsService.html":{},"components/ModalCardComponent.html":{},"interfaces/Note.html":{},"components/NoteDetailComponent.html":{},"injectables/NoteEffects.html":{},"components/NoteListComponent.html":{},"interfaces/NoteState.html":{},"modules/NotesModule.html":{},"modules/NotesRoutingModule.html":{},"pipes/RatingColorPipe.html":{},"modules/SharedModule.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"modules/TabModule.html":{},"components/TableComponent.html":{},"interfaces/Task.html":{},"components/TaskDetailComponent.html":{},"injectables/TaskEffects.html":{},"pipes/TaskEnumDisplayPipe.html":{},"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{},"interfaces/TaskState.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retains",{"_index":397,"title":{},"body":{"modules/AppModule.html":{}}}],["return",{"_index":470,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"injectables/ContactEffects.html":{},"components/ContactListComponent.html":{},"injectables/ContactMetricService.html":{},"interfaces/ContactState.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"components/FormComponent.html":{},"injectables/MetricsService.html":{},"injectables/NoteEffects.html":{},"interfaces/NoteState.html":{},"injectables/TaskEffects.html":{},"pipes/TaskEnumDisplayPipe.html":{},"interfaces/TaskState.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":45,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"components/ContactListComponent.html":{},"injectables/ContactMetricService.html":{},"components/DashboardComponent.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MetricsService.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"pipes/RatingColorPipe.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"pipes/TaskEnumDisplayPipe.html":{},"components/TasksComponent.html":{}}}],["rgb(0",{"_index":1285,"title":{},"body":{"components/DashboardComponent.html":{}}}],["rgb(197",{"_index":1998,"title":{},"body":{"components/TableComponent.html":{}}}],["rgb(38",{"_index":1275,"title":{},"body":{"components/DashboardComponent.html":{}}}],["rgb(43",{"_index":1818,"title":{},"body":{"components/SidenavComponent.html":{}}}],["rgb(46",{"_index":1443,"title":{},"body":{"components/HeaderComponent.html":{}}}],["rgb(74",{"_index":1390,"title":{},"body":{"components/FormComponent.html":{}}}],["rgba(0",{"_index":1239,"title":{},"body":{"components/DashboardComponent.html":{},"components/GeneralCardComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{}}}],["right",{"_index":1801,"title":{},"body":{"components/SidenavComponent.html":{},"components/TableComponent.html":{}}}],["roadmap",{"_index":2305,"title":{},"body":{"index.html":{}}}],["root",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"injectables/ContactMetricService.html":{},"injectables/MetricsService.html":{}}}],["root'},{'name",{"_index":169,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["route",{"_index":460,"title":{},"body":{"guards/AuthGuard.html":{}}}],["router",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["routermodule",{"_index":303,"title":{},"body":{"modules/AnalyticsRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactRoutingModule.html":{},"modules/NotesRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TaskRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["routermodule.forchild(routes",{"_index":310,"title":{},"body":{"modules/AnalyticsRoutingModule.html":{},"modules/ContactRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":434,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":458,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":304,"title":{"routes.html":{}},"body":{"modules/AnalyticsRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactRoutingModule.html":{},"modules/NotesRoutingModule.html":{},"modules/TaskRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routes:routes",{"_index":1735,"title":{},"body":{"modules/NotesRoutingModule.html":{},"modules/TaskRoutingModule.html":{}}}],["routing.module",{"_index":378,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":417,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":766,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/NoteDetailComponent.html":{}}}],["row[c",{"_index":1951,"title":{},"body":{"components/TableComponent.html":{}}}],["row[c].display",{"_index":1952,"title":{},"body":{"components/TableComponent.html":{}}}],["rowclick(event:fromcontacts.contact",{"_index":1940,"title":{},"body":{"components/TableComponent.html":{}}}],["rows",{"_index":762,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/DashboardComponent.html":{},"components/NoteDetailComponent.html":{}}}],["rxjs",{"_index":235,"title":{},"body":{"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"components/ContactDetailComponent.html":{},"injectables/ContactEffects.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FormSetupModel.html":{},"components/NoteDetailComponent.html":{},"injectables/NoteEffects.html":{},"components/NoteListComponent.html":{},"injectables/TaskEffects.html":{},"components/TasksComponent.html":{},"dependencies.html":{}}}],["rxjs/internal/scheduler/action",{"_index":1643,"title":{},"body":{"injectables/NoteEffects.html":{}}}],["rxjs/operators",{"_index":237,"title":{},"body":{"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"injectables/AuthService.html":{},"injectables/ContactEffects.html":{},"components/ContactListComponent.html":{},"injectables/NoteEffects.html":{},"components/NoteListComponent.html":{},"injectables/TaskEffects.html":{}}}],["safari",{"_index":1985,"title":{},"body":{"components/TableComponent.html":{}}}],["sans",{"_index":1246,"title":{},"body":{"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/HeaderComponent.html":{}}}],["save",{"_index":1366,"title":{},"body":{"components/FormComponent.html":{}}}],["sc",{"_index":1437,"title":{},"body":{"components/HeaderComponent.html":{}}}],["scale",{"_index":2325,"title":{},"body":{"index.html":{}}}],["schemas",{"_index":1490,"title":{},"body":{"modules/MaterialModule.html":{}}}],["school",{"_index":793,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{},"miscellaneous/enumerations.html":{}}}],["scrollbar",{"_index":1794,"title":{},"body":{"components/SidenavComponent.html":{}}}],["search",{"_index":1949,"title":{},"body":{"components/TableComponent.html":{}}}],["see",{"_index":2354,"title":{},"body":{"index.html":{}}}],["select",{"_index":247,"title":{},"body":{"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/FormComponent.html":{}}}],["selectall",{"_index":1088,"title":{},"body":{"interfaces/ContactState.html":{},"interfaces/NoteState.html":{},"interfaces/TaskState.html":{},"miscellaneous/variables.html":{}}}],["selectcontacts",{"_index":233,"title":{},"body":{"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/DashboardComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectcontactstate",{"_index":2147,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectedindex",{"_index":1830,"title":{},"body":{"components/TabComponent.html":{}}}],["selectnotes",{"_index":971,"title":{},"body":{"components/ContactListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectnotesstate",{"_index":2153,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":15,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["selecttasks",{"_index":972,"title":{},"body":{"components/ContactListComponent.html":{},"components/NoteListComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selecttaskstate",{"_index":2157,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serif",{"_index":1247,"title":{},"body":{"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["services/auth.service",{"_index":465,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["set(contacttosubmit",{"_index":582,"title":{},"body":{"injectables/BackendService.html":{}}}],["set(notetosubmit",{"_index":600,"title":{},"body":{"injectables/BackendService.html":{}}}],["set(tasktosubmit",{"_index":591,"title":{},"body":{"injectables/BackendService.html":{}}}],["sets",{"_index":940,"title":{},"body":{"components/ContactListComponent.html":{}}}],["setup",{"_index":152,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactListComponent.html":{},"index.html":{}}}],["setup.model",{"_index":148,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/ContactDetailComponent.html":{},"components/FormComponent.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["setup.model.ts",{"_index":1394,"title":{},"body":{"interfaces/FormSetupModel.html":{},"coverage.html":{}}}],["setupsortandpagination",{"_index":1864,"title":{},"body":{"components/TableComponent.html":{}}}],["shadow",{"_index":1236,"title":{},"body":{"components/DashboardComponent.html":{},"components/GeneralCardComponent.html":{},"components/ModalCardComponent.html":{},"components/TabComponent.html":{}}}],["shared/cards/cards.module",{"_index":1848,"title":{},"body":{"modules/TabModule.html":{}}}],["shared/material/material.module",{"_index":646,"title":{},"body":{"modules/CardsModule.html":{},"modules/TabModule.html":{}}}],["shared/models/form",{"_index":147,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/ContactDetailComponent.html":{},"components/FormComponent.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["shared/shared.module",{"_index":298,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/ContactsModule.html":{},"modules/LayoutModule.html":{},"modules/NotesModule.html":{},"modules/TaskModule.html":{}}}],["sharedmodule",{"_index":288,"title":{"modules/SharedModule.html":{}},"body":{"modules/AnalyticsModule.html":{},"modules/ContactsModule.html":{},"modules/LayoutModule.html":{},"modules/NotesModule.html":{},"modules/SharedModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["showing",{"_index":922,"title":{},"body":{"components/ContactListComponent.html":{}}}],["sidenav",{"_index":1772,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav'},{'name",{"_index":193,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["sidenav.component.html",{"_index":1774,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.component.scss",{"_index":1773,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav/sidenav.component",{"_index":1454,"title":{},"body":{"modules/LayoutModule.html":{}}}],["sidenavcomponent",{"_index":192,"title":{"components/SidenavComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signout",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["singledataset",{"_index":1182,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sister",{"_index":2223,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["size",{"_index":614,"title":{},"body":{"components/ButtonComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{}}}],["small",{"_index":631,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormComponent.html":{},"index.html":{}}}],["smartphone",{"_index":797,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{}}}],["smith",{"_index":2422,"title":{},"body":{"index.html":{}}}],["soon",{"_index":2388,"title":{},"body":{"index.html":{}}}],["sorry",{"_index":1225,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sort",{"_index":1857,"title":{},"body":{"components/TableComponent.html":{},"index.html":{}}}],["sortedenvironments",{"_index":1584,"title":{},"body":{"injectables/MetricsService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"modules/AnalyticsModule.html":{},"modules/AnalyticsRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"components/ButtonComponent.html":{},"modules/CardsModule.html":{},"interfaces/Contact.html":{},"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"injectables/ContactEffects.html":{},"components/ContactListComponent.html":{},"injectables/ContactMetricService.html":{},"modules/ContactRoutingModule.html":{},"interfaces/ContactState.html":{},"modules/ContactsModule.html":{},"modules/CoreModule.html":{},"components/DashboardComponent.html":{},"interfaces/Day.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"components/FormComponent.html":{},"interfaces/FormSetupModel.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"injectables/MetricsService.html":{},"components/ModalCardComponent.html":{},"interfaces/Note.html":{},"components/NoteDetailComponent.html":{},"injectables/NoteEffects.html":{},"components/NoteListComponent.html":{},"interfaces/NoteState.html":{},"modules/NotesModule.html":{},"modules/NotesRoutingModule.html":{},"pipes/RatingColorPipe.html":{},"modules/SharedModule.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"modules/TabModule.html":{},"components/TableComponent.html":{},"interfaces/Task.html":{},"components/TaskDetailComponent.html":{},"injectables/TaskEffects.html":{},"pipes/TaskEnumDisplayPipe.html":{},"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{},"interfaces/TaskState.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"index.html":{}}}],["space",{"_index":1427,"title":{},"body":{"components/HeaderComponent.html":{},"components/TableComponent.html":{}}}],["spinner",{"_index":1547,"title":{},"body":{"modules/MaterialModule.html":{},"dependencies.html":{}}}],["spiritual",{"_index":2241,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["spouse",{"_index":2227,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../contact",{"_index":2191,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../contact.actions.ts",{"_index":2190,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../contact.reducer.ts",{"_index":2435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../contact.selector.ts",{"_index":2442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../context.enum.ts",{"_index":2194,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../energy",{"_index":2195,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.ts",{"_index":2436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":2441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../material.module.ts",{"_index":2434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../note",{"_index":2199,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../notes.actions.ts",{"_index":2198,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../notes.reducer.ts",{"_index":2438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../notes.selectors.ts",{"_index":2443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../priorities.enum.ts",{"_index":2201,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../shared.module.ts",{"_index":2440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../statuses.enum.ts",{"_index":2202,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../task",{"_index":2205,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../task.actions.ts",{"_index":2204,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../task.reducer.ts",{"_index":2439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../task.selectors.ts",{"_index":2444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/analytics/analytics.module.ts",{"_index":292,"title":{},"body":{"modules/AnalyticsModule.html":{}}}],["src/app/analytics/analytics.routing.module.ts",{"_index":302,"title":{},"body":{"modules/AnalyticsRoutingModule.html":{}}}],["src/app/analytics/components/dashboard/dashboard.component.ts",{"_index":1111,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/analytics/components/dashboard/dashboard.component.ts:106",{"_index":1142,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/analytics/components/dashboard/dashboard.component.ts:17",{"_index":1140,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/analytics/components/dashboard/dashboard.component.ts:18",{"_index":1174,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/analytics/components/dashboard/dashboard.component.ts:20",{"_index":1175,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/analytics/components/dashboard/dashboard.component.ts:22",{"_index":1191,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/analytics/components/dashboard/dashboard.component.ts:23",{"_index":1181,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/analytics/components/dashboard/dashboard.component.ts:24",{"_index":1180,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/analytics/components/dashboard/dashboard.component.ts:25",{"_index":1176,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/analytics/components/dashboard/dashboard.component.ts:26",{"_index":1178,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/analytics/components/dashboard/dashboard.component.ts:27",{"_index":1173,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/analytics/components/dashboard/dashboard.component.ts:28",{"_index":1177,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/analytics/components/dashboard/dashboard.component.ts:29",{"_index":1179,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/analytics/components/dashboard/dashboard.component.ts:32",{"_index":1156,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/analytics/components/dashboard/dashboard.component.ts:33",{"_index":1153,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/analytics/components/dashboard/dashboard.component.ts:35",{"_index":1151,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/analytics/components/dashboard/dashboard.component.ts:38",{"_index":1152,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/analytics/components/dashboard/dashboard.component.ts:41",{"_index":1188,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/analytics/components/dashboard/dashboard.component.ts:44",{"_index":1184,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/analytics/components/dashboard/dashboard.component.ts:45",{"_index":1183,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/analytics/components/dashboard/dashboard.component.ts:46",{"_index":1190,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/analytics/components/dashboard/dashboard.component.ts:47",{"_index":1185,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/analytics/components/dashboard/dashboard.component.ts:49",{"_index":1172,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/analytics/components/dashboard/dashboard.component.ts:71",{"_index":1138,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/analytics/components/dashboard/dashboard.component.ts:78",{"_index":1143,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/analytics/services/metrics.service.ts",{"_index":1559,"title":{},"body":{"injectables/MetricsService.html":{},"coverage.html":{}}}],["src/app/analytics/services/metrics.service.ts:12",{"_index":1570,"title":{},"body":{"injectables/MetricsService.html":{}}}],["src/app/analytics/services/metrics.service.ts:17",{"_index":1568,"title":{},"body":{"injectables/MetricsService.html":{}}}],["src/app/analytics/services/metrics.service.ts:21",{"_index":1572,"title":{},"body":{"injectables/MetricsService.html":{}}}],["src/app/analytics/services/metrics.service.ts:35",{"_index":1566,"title":{},"body":{"injectables/MetricsService.html":{}}}],["src/app/analytics/services/metrics.service.ts:7",{"_index":1564,"title":{},"body":{"injectables/MetricsService.html":{}}}],["src/app/app",{"_index":416,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":331,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":332,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":323,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":326,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:34",{"_index":325,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":369,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/auth/guards/auth.guard.ts",{"_index":453,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/core/auth/guards/auth.guard.ts:14",{"_index":459,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/auth/guards/auth.guard.ts:9",{"_index":455,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/auth/login/login.component.ts",{"_index":1455,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/core/auth/login/login.component.ts:18",{"_index":1459,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/core/auth/login/login.component.ts:22",{"_index":1461,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/core/auth/login/login.component.ts:26",{"_index":1460,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/core/auth/models/users.ts",{"_index":2125,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/core/auth/services/auth.service.ts",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/auth/services/auth.service.ts:18",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth/services/auth.service.ts:19",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth/services/auth.service.ts:20",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth/services/auth.service.ts:23",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth/services/auth.service.ts:41",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth/services/auth.service.ts:50",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth/services/auth.service.ts:63",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth/services/auth.service.ts:65",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/core.module.ts",{"_index":1108,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/layout/header/header.component.ts",{"_index":1405,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/core/layout/header/header.component.ts:35",{"_index":1415,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/layout/header/header.component.ts:36",{"_index":1416,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/layout/header/header.component.ts:37",{"_index":1414,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/layout/header/header.component.ts:42",{"_index":1418,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/layout/header/header.component.ts:47",{"_index":1419,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/layout/header/header.component.ts:50",{"_index":1417,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/layout/layout.module.ts",{"_index":1452,"title":{},"body":{"modules/LayoutModule.html":{}}}],["src/app/core/layout/sidenav/sidenav.component.ts",{"_index":1771,"title":{},"body":{"components/SidenavComponent.html":{},"coverage.html":{}}}],["src/app/core/layout/sidenav/sidenav.component.ts:14",{"_index":1776,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/layout/sidenav/sidenav.component.ts:15",{"_index":1775,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/layout/sidenav/sidenav.component.ts:19",{"_index":1777,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/layout/sidenav/sidenav.component.ts:23",{"_index":1778,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/services/backend.service.ts",{"_index":532,"title":{},"body":{"injectables/BackendService.html":{},"coverage.html":{}}}],["src/app/core/services/backend.service.ts:108",{"_index":557,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/core/services/backend.service.ts:115",{"_index":563,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/core/services/backend.service.ts:13",{"_index":547,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/core/services/backend.service.ts:25",{"_index":560,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/core/services/backend.service.ts:29",{"_index":567,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/core/services/backend.service.ts:34",{"_index":549,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/core/services/backend.service.ts:45",{"_index":555,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/core/services/backend.service.ts:56",{"_index":562,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/core/services/backend.service.ts:61",{"_index":572,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/core/services/backend.service.ts:66",{"_index":553,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/core/services/backend.service.ts:77",{"_index":559,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/core/services/backend.service.ts:87",{"_index":561,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/core/services/backend.service.ts:92",{"_index":570,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/core/services/backend.service.ts:97",{"_index":551,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/operations/contact/components/add",{"_index":9,"title":{},"body":{"components/AddContactComponent.html":{},"coverage.html":{}}}],["src/app/operations/contact/components/contact",{"_index":653,"title":{},"body":{"components/ContactDetailComponent.html":{},"coverage.html":{}}}],["src/app/operations/contact/components/contacts/contacts.component.ts",{"_index":873,"title":{},"body":{"components/ContactListComponent.html":{},"coverage.html":{}}}],["src/app/operations/contact/components/contacts/contacts.component.ts:100",{"_index":952,"title":{},"body":{"components/ContactListComponent.html":{}}}],["src/app/operations/contact/components/contacts/contacts.component.ts:101",{"_index":949,"title":{},"body":{"components/ContactListComponent.html":{}}}],["src/app/operations/contact/components/contacts/contacts.component.ts:102",{"_index":950,"title":{},"body":{"components/ContactListComponent.html":{}}}],["src/app/operations/contact/components/contacts/contacts.component.ts:105",{"_index":948,"title":{},"body":{"components/ContactListComponent.html":{}}}],["src/app/operations/contact/components/contacts/contacts.component.ts:107",{"_index":947,"title":{},"body":{"components/ContactListComponent.html":{}}}],["src/app/operations/contact/components/contacts/contacts.component.ts:109",{"_index":955,"title":{},"body":{"components/ContactListComponent.html":{}}}],["src/app/operations/contact/components/contacts/contacts.component.ts:111",{"_index":963,"title":{},"body":{"components/ContactListComponent.html":{}}}],["src/app/operations/contact/components/contacts/contacts.component.ts:112",{"_index":954,"title":{},"body":{"components/ContactListComponent.html":{}}}],["src/app/operations/contact/components/contacts/contacts.component.ts:114",{"_index":911,"title":{},"body":{"components/ContactListComponent.html":{}}}],["src/app/operations/contact/components/contacts/contacts.component.ts:116",{"_index":956,"title":{},"body":{"components/ContactListComponent.html":{}}}],["src/app/operations/contact/components/contacts/contacts.component.ts:178",{"_index":943,"title":{},"body":{"components/ContactListComponent.html":{}}}],["src/app/operations/contact/components/contacts/contacts.component.ts:190",{"_index":938,"title":{},"body":{"components/ContactListComponent.html":{}}}],["src/app/operations/contact/components/contacts/contacts.component.ts:206",{"_index":912,"title":{},"body":{"components/ContactListComponent.html":{}}}],["src/app/operations/contact/components/contacts/contacts.component.ts:218",{"_index":920,"title":{},"body":{"components/ContactListComponent.html":{}}}],["src/app/operations/contact/components/contacts/contacts.component.ts:245",{"_index":933,"title":{},"body":{"components/ContactListComponent.html":{}}}],["src/app/operations/contact/components/contacts/contacts.component.ts:258",{"_index":918,"title":{},"body":{"components/ContactListComponent.html":{}}}],["src/app/operations/contact/components/contacts/contacts.component.ts:262",{"_index":942,"title":{},"body":{"components/ContactListComponent.html":{}}}],["src/app/operations/contact/components/contacts/contacts.component.ts:91",{"_index":960,"title":{},"body":{"components/ContactListComponent.html":{}}}],["src/app/operations/contact/components/contacts/contacts.component.ts:93",{"_index":958,"title":{},"body":{"components/ContactListComponent.html":{}}}],["src/app/operations/contact/components/contacts/contacts.component.ts:95",{"_index":962,"title":{},"body":{"components/ContactListComponent.html":{}}}],["src/app/operations/contact/components/contacts/contacts.component.ts:97",{"_index":946,"title":{},"body":{"components/ContactListComponent.html":{}}}],["src/app/operations/contact/components/contacts/contacts.component.ts:99",{"_index":965,"title":{},"body":{"components/ContactListComponent.html":{}}}],["src/app/operations/contact/contacts.module.ts",{"_index":1095,"title":{},"body":{"modules/ContactsModule.html":{}}}],["src/app/operations/contact/contacts.routing.module.ts",{"_index":1054,"title":{},"body":{"modules/ContactRoutingModule.html":{}}}],["src/app/operations/contact/models/enums/contact",{"_index":2221,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/operations/contact/models/enums/context.enum.ts",{"_index":2236,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/operations/contact/models/enums/energy",{"_index":2242,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/operations/contact/models/enums/priorities.enum.ts",{"_index":2264,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/operations/contact/models/enums/statuses.enum.ts",{"_index":2270,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/operations/contact/models/interfaces/contact.ts",{"_index":647,"title":{},"body":{"interfaces/Contact.html":{},"coverage.html":{}}}],["src/app/operations/contact/models/interfaces/day.ts",{"_index":1288,"title":{},"body":{"interfaces/Day.html":{},"coverage.html":{}}}],["src/app/operations/contact/pipes/rating",{"_index":1739,"title":{},"body":{"pipes/RatingColorPipe.html":{},"coverage.html":{}}}],["src/app/operations/contact/services/contact",{"_index":1040,"title":{},"body":{"injectables/ContactMetricService.html":{},"coverage.html":{}}}],["src/app/operations/contact/state/contact.actions.ts",{"_index":2143,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/operations/contact/state/contact.reducer.ts",{"_index":1058,"title":{},"body":{"interfaces/ContactState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/operations/contact/state/contact.selector.ts",{"_index":2146,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/operations/contact/state/contacts.effects.ts",{"_index":830,"title":{},"body":{"injectables/ContactEffects.html":{},"coverage.html":{}}}],["src/app/operations/contact/state/contacts.effects.ts:16",{"_index":862,"title":{},"body":{"injectables/ContactEffects.html":{}}}],["src/app/operations/contact/state/contacts.effects.ts:29",{"_index":847,"title":{},"body":{"injectables/ContactEffects.html":{}}}],["src/app/operations/contact/state/contacts.effects.ts:42",{"_index":867,"title":{},"body":{"injectables/ContactEffects.html":{}}}],["src/app/operations/contact/state/contacts.effects.ts:52",{"_index":855,"title":{},"body":{"injectables/ContactEffects.html":{}}}],["src/app/operations/contact/state/contacts.effects.ts:62",{"_index":837,"title":{},"body":{"injectables/ContactEffects.html":{}}}],["src/app/operations/note/components/add",{"_index":207,"title":{},"body":{"components/AddNoteComponent.html":{},"coverage.html":{}}}],["src/app/operations/note/components/note",{"_index":1596,"title":{},"body":{"components/NoteDetailComponent.html":{},"coverage.html":{}}}],["src/app/operations/note/components/notes/notes.component.ts",{"_index":1644,"title":{},"body":{"components/NoteListComponent.html":{},"coverage.html":{}}}],["src/app/operations/note/components/notes/notes.component.ts:106",{"_index":1668,"title":{},"body":{"components/NoteListComponent.html":{}}}],["src/app/operations/note/components/notes/notes.component.ts:110",{"_index":1665,"title":{},"body":{"components/NoteListComponent.html":{}}}],["src/app/operations/note/components/notes/notes.component.ts:130",{"_index":1663,"title":{},"body":{"components/NoteListComponent.html":{}}}],["src/app/operations/note/components/notes/notes.component.ts:134",{"_index":1666,"title":{},"body":{"components/NoteListComponent.html":{}}}],["src/app/operations/note/components/notes/notes.component.ts:48",{"_index":1678,"title":{},"body":{"components/NoteListComponent.html":{}}}],["src/app/operations/note/components/notes/notes.component.ts:50",{"_index":1672,"title":{},"body":{"components/NoteListComponent.html":{}}}],["src/app/operations/note/components/notes/notes.component.ts:51",{"_index":1670,"title":{},"body":{"components/NoteListComponent.html":{}}}],["src/app/operations/note/components/notes/notes.component.ts:52",{"_index":1671,"title":{},"body":{"components/NoteListComponent.html":{}}}],["src/app/operations/note/components/notes/notes.component.ts:55",{"_index":1669,"title":{},"body":{"components/NoteListComponent.html":{}}}],["src/app/operations/note/components/notes/notes.component.ts:62",{"_index":1674,"title":{},"body":{"components/NoteListComponent.html":{}}}],["src/app/operations/note/components/notes/notes.component.ts:70",{"_index":1676,"title":{},"body":{"components/NoteListComponent.html":{}}}],["src/app/operations/note/components/notes/notes.component.ts:77",{"_index":1677,"title":{},"body":{"components/NoteListComponent.html":{}}}],["src/app/operations/note/components/notes/notes.component.ts:78",{"_index":1675,"title":{},"body":{"components/NoteListComponent.html":{}}}],["src/app/operations/note/components/notes/notes.component.ts:80",{"_index":1660,"title":{},"body":{"components/NoteListComponent.html":{}}}],["src/app/operations/note/components/notes/notes.component.ts:82",{"_index":1673,"title":{},"body":{"components/NoteListComponent.html":{}}}],["src/app/operations/note/components/notes/notes.component.ts:84",{"_index":1667,"title":{},"body":{"components/NoteListComponent.html":{}}}],["src/app/operations/note/models/enums/note",{"_index":2260,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/operations/note/models/enums/priorities.enum.ts",{"_index":2268,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/operations/note/models/enums/statuses.enum.ts",{"_index":2273,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/operations/note/models/interfaces/note.ts",{"_index":1594,"title":{},"body":{"interfaces/Note.html":{},"coverage.html":{}}}],["src/app/operations/note/notes.module.ts",{"_index":1721,"title":{},"body":{"modules/NotesModule.html":{}}}],["src/app/operations/note/notes.routing.module.ts",{"_index":1734,"title":{},"body":{"modules/NotesRoutingModule.html":{}}}],["src/app/operations/note/state/actions/notes.actions.ts",{"_index":2150,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/operations/note/state/effects/notes.effects.ts",{"_index":1613,"title":{},"body":{"injectables/NoteEffects.html":{},"coverage.html":{}}}],["src/app/operations/note/state/effects/notes.effects.ts:16",{"_index":1634,"title":{},"body":{"injectables/NoteEffects.html":{}}}],["src/app/operations/note/state/effects/notes.effects.ts:29",{"_index":1623,"title":{},"body":{"injectables/NoteEffects.html":{}}}],["src/app/operations/note/state/effects/notes.effects.ts:42",{"_index":1639,"title":{},"body":{"injectables/NoteEffects.html":{}}}],["src/app/operations/note/state/effects/notes.effects.ts:54",{"_index":1628,"title":{},"body":{"injectables/NoteEffects.html":{}}}],["src/app/operations/note/state/effects/notes.effects.ts:64",{"_index":1618,"title":{},"body":{"injectables/NoteEffects.html":{}}}],["src/app/operations/note/state/reducers/notes.reducer.ts",{"_index":1697,"title":{},"body":{"interfaces/NoteState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/operations/note/state/selectors/notes.selectors.ts",{"_index":2152,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/operations/task/components/add",{"_index":255,"title":{},"body":{"components/AddTaskComponent.html":{},"coverage.html":{}}}],["src/app/operations/task/components/task",{"_index":2007,"title":{},"body":{"components/TaskDetailComponent.html":{},"coverage.html":{}}}],["src/app/operations/task/components/tasks/tasks.component.ts",{"_index":2085,"title":{},"body":{"components/TasksComponent.html":{},"coverage.html":{}}}],["src/app/operations/task/components/tasks/tasks.component.ts:104",{"_index":2102,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/operations/task/components/tasks/tasks.component.ts:108",{"_index":2099,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/operations/task/components/tasks/tasks.component.ts:130",{"_index":2097,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/operations/task/components/tasks/tasks.component.ts:134",{"_index":2100,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/operations/task/components/tasks/tasks.component.ts:48",{"_index":2110,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/operations/task/components/tasks/tasks.component.ts:50",{"_index":2106,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/operations/task/components/tasks/tasks.component.ts:51",{"_index":2104,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/operations/task/components/tasks/tasks.component.ts:52",{"_index":2105,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/operations/task/components/tasks/tasks.component.ts:55",{"_index":2103,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/operations/task/components/tasks/tasks.component.ts:62",{"_index":2108,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/operations/task/components/tasks/tasks.component.ts:70",{"_index":2112,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/operations/task/components/tasks/tasks.component.ts:77",{"_index":2109,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/operations/task/components/tasks/tasks.component.ts:78",{"_index":2111,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/operations/task/components/tasks/tasks.component.ts:80",{"_index":2094,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/operations/task/components/tasks/tasks.component.ts:82",{"_index":2107,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/operations/task/components/tasks/tasks.component.ts:84",{"_index":2101,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/operations/task/models/enums/priorities.enum.ts",{"_index":2269,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/operations/task/models/enums/statuses.enum.ts",{"_index":2275,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/operations/task/models/enums/task",{"_index":2288,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/operations/task/models/interfaces/task.ts",{"_index":2004,"title":{},"body":{"interfaces/Task.html":{},"coverage.html":{}}}],["src/app/operations/task/state/actions/task.actions.ts",{"_index":2155,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/operations/task/state/effects/task.effects.ts",{"_index":2021,"title":{},"body":{"injectables/TaskEffects.html":{},"coverage.html":{}}}],["src/app/operations/task/state/effects/task.effects.ts:15",{"_index":2042,"title":{},"body":{"injectables/TaskEffects.html":{}}}],["src/app/operations/task/state/effects/task.effects.ts:28",{"_index":2031,"title":{},"body":{"injectables/TaskEffects.html":{}}}],["src/app/operations/task/state/effects/task.effects.ts:41",{"_index":2047,"title":{},"body":{"injectables/TaskEffects.html":{}}}],["src/app/operations/task/state/effects/task.effects.ts:53",{"_index":2036,"title":{},"body":{"injectables/TaskEffects.html":{}}}],["src/app/operations/task/state/effects/task.effects.ts:63",{"_index":2026,"title":{},"body":{"injectables/TaskEffects.html":{}}}],["src/app/operations/task/state/reducers/task.reducer.ts",{"_index":2073,"title":{},"body":{"interfaces/TaskState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/operations/task/state/selectors/task.selectors.ts",{"_index":2156,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/operations/task/task.module.ts",{"_index":2061,"title":{},"body":{"modules/TaskModule.html":{}}}],["src/app/operations/task/task.routing.module.ts",{"_index":2069,"title":{},"body":{"modules/TaskRoutingModule.html":{}}}],["src/app/shared/button/button.component.ts",{"_index":608,"title":{},"body":{"components/ButtonComponent.html":{},"coverage.html":{}}}],["src/app/shared/button/button.component.ts:12",{"_index":622,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/shared/button/button.component.ts:13",{"_index":618,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/shared/button/button.component.ts:14",{"_index":619,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/shared/button/button.component.ts:15",{"_index":624,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/shared/button/button.component.ts:16",{"_index":617,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/shared/button/button.component.ts:20",{"_index":625,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/shared/cards/cards.module.ts",{"_index":640,"title":{},"body":{"modules/CardsModule.html":{}}}],["src/app/shared/cards/general",{"_index":1397,"title":{},"body":{"components/GeneralCardComponent.html":{},"coverage.html":{}}}],["src/app/shared/cards/modal",{"_index":1591,"title":{},"body":{"components/ModalCardComponent.html":{},"coverage.html":{}}}],["src/app/shared/form/form.component.ts",{"_index":1295,"title":{},"body":{"components/FormComponent.html":{},"coverage.html":{}}}],["src/app/shared/form/form.component.ts:116",{"_index":1318,"title":{},"body":{"components/FormComponent.html":{}}}],["src/app/shared/form/form.component.ts:134",{"_index":1324,"title":{},"body":{"components/FormComponent.html":{}}}],["src/app/shared/form/form.component.ts:138",{"_index":1316,"title":{},"body":{"components/FormComponent.html":{}}}],["src/app/shared/form/form.component.ts:14",{"_index":1308,"title":{},"body":{"components/FormComponent.html":{}}}],["src/app/shared/form/form.component.ts:15",{"_index":1311,"title":{},"body":{"components/FormComponent.html":{}}}],["src/app/shared/form/form.component.ts:16",{"_index":1309,"title":{},"body":{"components/FormComponent.html":{}}}],["src/app/shared/form/form.component.ts:17",{"_index":1312,"title":{},"body":{"components/FormComponent.html":{}}}],["src/app/shared/form/form.component.ts:22",{"_index":1322,"title":{},"body":{"components/FormComponent.html":{}}}],["src/app/shared/form/form.component.ts:24",{"_index":1321,"title":{},"body":{"components/FormComponent.html":{}}}],["src/app/shared/form/form.component.ts:26",{"_index":1307,"title":{},"body":{"components/FormComponent.html":{}}}],["src/app/shared/form/form.component.ts:32",{"_index":1317,"title":{},"body":{"components/FormComponent.html":{}}}],["src/app/shared/form/form.component.ts:39",{"_index":1314,"title":{},"body":{"components/FormComponent.html":{}}}],["src/app/shared/material/material.module.ts",{"_index":1489,"title":{},"body":{"modules/MaterialModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/models/form",{"_index":1393,"title":{},"body":{"interfaces/FormSetupModel.html":{},"coverage.html":{}}}],["src/app/shared/pipes/contact",{"_index":770,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"coverage.html":{}}}],["src/app/shared/pipes/task",{"_index":2051,"title":{},"body":{"pipes/TaskEnumDisplayPipe.html":{},"coverage.html":{}}}],["src/app/shared/shared.module.ts",{"_index":1747,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/tab/tab.module.ts",{"_index":1846,"title":{},"body":{"modules/TabModule.html":{}}}],["src/app/shared/tab/tab/tab.component.ts",{"_index":1825,"title":{},"body":{"components/TabComponent.html":{},"coverage.html":{}}}],["src/app/shared/tab/tab/tab.component.ts:25",{"_index":1832,"title":{},"body":{"components/TabComponent.html":{}}}],["src/app/shared/tab/tab/tab.component.ts:26",{"_index":1831,"title":{},"body":{"components/TabComponent.html":{}}}],["src/app/shared/tab/tab/tab.component.ts:30",{"_index":1833,"title":{},"body":{"components/TabComponent.html":{}}}],["src/app/shared/table/table.component.ts",{"_index":1850,"title":{},"body":{"components/TableComponent.html":{},"coverage.html":{}}}],["src/app/shared/table/table.component.ts:20",{"_index":1871,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/shared/table/table.component.ts:21",{"_index":1870,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/shared/table/table.component.ts:22",{"_index":1872,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/shared/table/table.component.ts:23",{"_index":1869,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/shared/table/table.component.ts:24",{"_index":1874,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/shared/table/table.component.ts:25",{"_index":1875,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/shared/table/table.component.ts:26",{"_index":1873,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/shared/table/table.component.ts:28",{"_index":1876,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/shared/table/table.component.ts:30",{"_index":1894,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/shared/table/table.component.ts:32",{"_index":1897,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/shared/table/table.component.ts:33",{"_index":1896,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/shared/table/table.component.ts:34",{"_index":1901,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/shared/table/table.component.ts:36",{"_index":1900,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/shared/table/table.component.ts:38",{"_index":1868,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/shared/table/table.component.ts:47",{"_index":1887,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/shared/table/table.component.ts:55",{"_index":1885,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/shared/table/table.component.ts:59",{"_index":1886,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/shared/table/table.component.ts:63",{"_index":1892,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/shared/table/table.component.ts:70",{"_index":1878,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/shared/table/table.component.ts:79",{"_index":1881,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/shared/table/table.component.ts:84",{"_index":1889,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/shared/table/table.component.ts:94",{"_index":1893,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/shared/table/table.component.ts:99",{"_index":1883,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/store/reducers/index.ts",{"_index":438,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":2160,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2161,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":1150,"title":{},"body":{"components/DashboardComponent.html":{}}}],["standard",{"_index":1253,"title":{},"body":{"components/DashboardComponent.html":{}}}],["start",{"_index":1990,"title":{},"body":{"components/TableComponent.html":{}}}],["started",{"_index":2291,"title":{"index.html":{}},"body":{"index.html":{}}}],["state",{"_index":410,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/ContactListComponent.html":{},"interfaces/ContactState.html":{},"interfaces/NoteState.html":{},"interfaces/TaskState.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["state,action",{"_index":1081,"title":{},"body":{"interfaces/ContactState.html":{},"interfaces/NoteState.html":{},"miscellaneous/variables.html":{}}}],["state,error:action.error",{"_index":1087,"title":{},"body":{"interfaces/ContactState.html":{},"interfaces/NoteState.html":{},"miscellaneous/variables.html":{}}}],["state/effects/notes.effects",{"_index":1724,"title":{},"body":{"modules/NotesModule.html":{}}}],["state/effects/task.effects",{"_index":2063,"title":{},"body":{"modules/TaskModule.html":{}}}],["state/index",{"_index":143,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/ContactListComponent.html":{},"modules/ContactsModule.html":{},"components/NoteListComponent.html":{},"components/TasksComponent.html":{}}}],["state/reducers/notes.reducer",{"_index":1723,"title":{},"body":{"modules/NotesModule.html":{}}}],["state/reducers/task.reducer",{"_index":2062,"title":{},"body":{"modules/TaskModule.html":{}}}],["statements",{"_index":2130,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":399,"title":{},"body":{"modules/AppModule.html":{}}}],["static",{"_index":945,"title":{},"body":{"components/ContactListComponent.html":{}}}],["status",{"_index":1294,"title":{},"body":{"pipes/EnumUserDisplayTranslatorPipe.html":{},"pipes/TaskEnumDisplayPipe.html":{}}}],["statuses",{"_index":30,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{},"pipes/TaskEnumDisplayPipe.html":{},"miscellaneous/enumerations.html":{}}}],["statuses[0",{"_index":136,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/ContactDetailComponent.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["statuses[1",{"_index":137,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/ContactDetailComponent.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["statuses[value",{"_index":817,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"pipes/TaskEnumDisplayPipe.html":{}}}],["stop",{"_index":734,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["storagebucket",{"_index":2475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":36,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TableComponent.html":{},"components/TasksComponent.html":{},"dependencies.html":{}}}],["store/reducers",{"_index":391,"title":{},"body":{"modules/AppModule.html":{}}}],["store:store",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"components/SidenavComponent.html":{}}}],["storedevtoolsmodule",{"_index":388,"title":{},"body":{"modules/AppModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":394,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule",{"_index":385,"title":{},"body":{"modules/AppModule.html":{},"modules/NotesModule.html":{},"modules/SharedModule.html":{},"modules/TaskModule.html":{}}}],["storemodule.forfeature(fromcontactreducer.contactfeaturekey",{"_index":1767,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["storemodule.forfeature(fromnote.notefeaturekey",{"_index":1769,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["storemodule.forfeature(fromnotes.notefeaturekey",{"_index":1730,"title":{},"body":{"modules/NotesModule.html":{}}}],["storemodule.forfeature(fromtask.taskfeaturekey",{"_index":1764,"title":{},"body":{"modules/SharedModule.html":{},"modules/TaskModule.html":{},"miscellaneous/variables.html":{}}}],["storemodule.forroot(reducers",{"_index":392,"title":{},"body":{"modules/AppModule.html":{}}}],["strength",{"_index":1344,"title":{},"body":{"components/FormComponent.html":{}}}],["string",{"_index":55,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"injectables/BackendService.html":{},"components/ButtonComponent.html":{},"interfaces/Contact.html":{},"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Day.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"components/FormComponent.html":{},"interfaces/FormSetupModel.html":{},"injectables/MetricsService.html":{},"interfaces/Note.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"pipes/RatingColorPipe.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"interfaces/Task.html":{},"components/TaskDetailComponent.html":{},"pipes/TaskEnumDisplayPipe.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["stringchoice",{"_index":59,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/ContactDetailComponent.html":{},"components/FormComponent.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["stringchoices",{"_index":61,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/ContactDetailComponent.html":{},"interfaces/FormSetupModel.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["stringchoiceset",{"_index":69,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/ContactDetailComponent.html":{},"components/FormComponent.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["style",{"_index":1790,"title":{},"body":{"components/SidenavComponent.html":{}}}],["styles",{"_index":5,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["styles/main",{"_index":628,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormComponent.html":{}}}],["styles/mixins",{"_index":1834,"title":{},"body":{"components/TabComponent.html":{}}}],["styleurls",{"_index":19,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["submission",{"_index":1299,"title":{},"body":{"components/FormComponent.html":{}}}],["submit",{"_index":33,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/ContactDetailComponent.html":{},"components/FormComponent.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["submit(contact",{"_index":47,"title":{},"body":{"components/AddContactComponent.html":{}}}],["submit(event",{"_index":673,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["submit(note",{"_index":216,"title":{},"body":{"components/AddNoteComponent.html":{}}}],["submit(task",{"_index":261,"title":{},"body":{"components/AddTaskComponent.html":{}}}],["subs",{"_index":904,"title":{},"body":{"components/ContactListComponent.html":{},"components/NoteListComponent.html":{},"components/TasksComponent.html":{}}}],["subs:subsink",{"_index":982,"title":{},"body":{"components/ContactListComponent.html":{}}}],["subscription",{"_index":951,"title":{},"body":{"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/NoteListComponent.html":{},"components/TasksComponent.html":{}}}],["subsink",{"_index":964,"title":{},"body":{"components/ContactListComponent.html":{},"components/NoteListComponent.html":{},"components/TasksComponent.html":{},"dependencies.html":{}}}],["success",{"_index":2211,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["such",{"_index":2399,"title":{},"body":{"index.html":{}}}],["support",{"_index":2427,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":1932,"title":{},"body":{"components/TableComponent.html":{}}}],["svg",{"_index":2428,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":806,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{},"components/ContactListComponent.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"components/FormComponent.html":{},"pipes/RatingColorPipe.html":{},"pipes/TaskEnumDisplayPipe.html":{}}}],["switchmap",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["switchmap(user",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["tab",{"_index":1826,"title":{},"body":{"components/TabComponent.html":{}}}],["tab'},{'name",{"_index":195,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["tab.component.scss",{"_index":1827,"title":{},"body":{"components/TabComponent.html":{}}}],["tab/tab.component",{"_index":1847,"title":{},"body":{"modules/TabModule.html":{}}}],["tab/tab.module",{"_index":1750,"title":{},"body":{"modules/SharedModule.html":{}}}],["tabcomponent",{"_index":194,"title":{"components/TabComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"modules/TabModule.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["table",{"_index":924,"title":{},"body":{"components/ContactListComponent.html":{},"components/TableComponent.html":{},"coverage.html":{},"index.html":{}}}],["table'},{'name",{"_index":197,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["table.component.html",{"_index":1852,"title":{},"body":{"components/TableComponent.html":{}}}],["table.component.scss",{"_index":1851,"title":{},"body":{"components/TableComponent.html":{}}}],["table/table.component",{"_index":1756,"title":{},"body":{"modules/SharedModule.html":{}}}],["tablecomponent",{"_index":196,"title":{"components/TableComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"modules/SharedModule.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2162,"title":{},"body":{"coverage.html":{}}}],["tabmodule",{"_index":1488,"title":{"modules/TabModule.html":{}},"body":{"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/TabModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["take",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["task",{"_index":199,"title":{"interfaces/Task.html":{}},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/BackendService.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"interfaces/Task.html":{},"components/TaskDetailComponent.html":{},"injectables/TaskEffects.html":{},"interfaces/TaskState.html":{},"components/TasksComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["task.component",{"_index":2067,"title":{},"body":{"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{}}}],["task.component.ts",{"_index":257,"title":{},"body":{"components/AddTaskComponent.html":{},"coverage.html":{}}}],["task.component.ts:29",{"_index":271,"title":{},"body":{"components/AddTaskComponent.html":{}}}],["task.component.ts:36",{"_index":264,"title":{},"body":{"components/AddTaskComponent.html":{}}}],["task.component.ts:43",{"_index":265,"title":{},"body":{"components/AddTaskComponent.html":{}}}],["task.component.ts:48",{"_index":263,"title":{},"body":{"components/AddTaskComponent.html":{}}}],["task.component.ts:50",{"_index":259,"title":{},"body":{"components/AddTaskComponent.html":{}}}],["task.component.ts:54",{"_index":260,"title":{},"body":{"components/AddTaskComponent.html":{}}}],["task.component.ts:99",{"_index":262,"title":{},"body":{"components/AddTaskComponent.html":{}}}],["task.contact.value",{"_index":1020,"title":{},"body":{"components/ContactListComponent.html":{}}}],["task.description",{"_index":2020,"title":{},"body":{"components/TaskDetailComponent.html":{}}}],["task.routing.module",{"_index":2065,"title":{},"body":{"modules/TaskModule.html":{}}}],["task.taskname",{"_index":2019,"title":{},"body":{"components/TaskDetailComponent.html":{}}}],["task/add",{"_index":256,"title":{},"body":{"components/AddTaskComponent.html":{},"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{},"coverage.html":{}}}],["task_display_translator",{"_index":2052,"title":{},"body":{"pipes/TaskEnumDisplayPipe.html":{}}}],["taskactions",{"_index":274,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ContactListComponent.html":{},"components/NoteListComponent.html":{},"interfaces/TaskState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["taskactiontypes",{"_index":2203,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["taskactiontypes.add_task",{"_index":2514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["taskactiontypes.add_task_fail",{"_index":2516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["taskactiontypes.add_task_success",{"_index":2518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["taskactiontypes.delete_task",{"_index":2526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["taskactiontypes.delete_task_fail",{"_index":2528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["taskactiontypes.delete_task_success",{"_index":2530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["taskactiontypes.load_task_fail",{"_index":2510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["taskactiontypes.load_task_success",{"_index":2512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["taskactiontypes.update_task",{"_index":2520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["taskactiontypes.update_task_fail",{"_index":2522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["taskactiontypes.update_task_success",{"_index":2524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["taskadapter",{"_index":2075,"title":{},"body":{"interfaces/TaskState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["taskadapter.addone(action.task",{"_index":2082,"title":{},"body":{"interfaces/TaskState.html":{},"miscellaneous/variables.html":{}}}],["taskadapter.getinitialstate",{"_index":2077,"title":{},"body":{"interfaces/TaskState.html":{},"miscellaneous/variables.html":{}}}],["taskadapter.getselectors",{"_index":2084,"title":{},"body":{"interfaces/TaskState.html":{},"miscellaneous/variables.html":{}}}],["taskadapter.setall(action.tasks",{"_index":2079,"title":{},"body":{"interfaces/TaskState.html":{},"miscellaneous/variables.html":{}}}],["taskdetailcomponent",{"_index":198,"title":{"components/TaskDetailComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"modules/TaskModule.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["taskeffects",{"_index":1763,"title":{"injectables/TaskEffects.html":{}},"body":{"modules/SharedModule.html":{},"injectables/TaskEffects.html":{},"modules/TaskModule.html":{},"coverage.html":{}}}],["taskenumdisplaypipe",{"_index":2050,"title":{"pipes/TaskEnumDisplayPipe.html":{}},"body":{"pipes/TaskEnumDisplayPipe.html":{},"coverage.html":{}}}],["taskfeaturekey",{"_index":2074,"title":{},"body":{"interfaces/TaskState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["taskfilter",{"_index":2093,"title":{},"body":{"components/TasksComponent.html":{}}}],["taskmodule",{"_index":2056,"title":{"modules/TaskModule.html":{}},"body":{"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["taskname",{"_index":277,"title":{},"body":{"components/AddTaskComponent.html":{},"interfaces/Task.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["taskoptions",{"_index":700,"title":{},"body":{"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"pipes/TaskEnumDisplayPipe.html":{},"components/TasksComponent.html":{},"miscellaneous/enumerations.html":{}}}],["taskoptions[0",{"_index":724,"title":{},"body":{"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"pipes/TaskEnumDisplayPipe.html":{},"components/TasksComponent.html":{}}}],["taskoptions[1",{"_index":725,"title":{},"body":{"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"pipes/TaskEnumDisplayPipe.html":{},"components/TasksComponent.html":{}}}],["taskoptions[2",{"_index":726,"title":{},"body":{"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"pipes/TaskEnumDisplayPipe.html":{},"components/TasksComponent.html":{}}}],["taskpipeoptions",{"_index":666,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["taskreducer",{"_index":446,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/TaskState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["taskroutingmodule",{"_index":2060,"title":{"modules/TaskRoutingModule.html":{}},"body":{"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["tasks",{"_index":201,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"injectables/TaskEffects.html":{},"components/TasksComponent.html":{},"index.html":{}}}],["tasks.component.scss",{"_index":2086,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks.filter(task",{"_index":1019,"title":{},"body":{"components/ContactListComponent.html":{}}}],["taskscomponent",{"_index":200,"title":{"components/TasksComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"modules/TaskModule.html":{},"modules/TaskRoutingModule.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["taskstate",{"_index":441,"title":{"interfaces/TaskState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/TaskState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tasktosubmit",{"_index":587,"title":{},"body":{"injectables/BackendService.html":{}}}],["tasktosubmit['id",{"_index":588,"title":{},"body":{"injectables/BackendService.html":{}}}],["tasktype",{"_index":272,"title":{},"body":{"components/AddTaskComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"interfaces/Task.html":{},"components/TaskDetailComponent.html":{},"pipes/TaskEnumDisplayPipe.html":{},"components/TasksComponent.html":{},"miscellaneous/enumerations.html":{}}}],["tasktype[0",{"_index":266,"title":{},"body":{"components/AddTaskComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["tasktype[1",{"_index":267,"title":{},"body":{"components/AddTaskComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["tasktype[2",{"_index":268,"title":{},"body":{"components/AddTaskComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["tasktype[3",{"_index":269,"title":{},"body":{"components/AddTaskComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["tasktype[4",{"_index":270,"title":{},"body":{"components/AddTaskComponent.html":{},"components/TaskDetailComponent.html":{}}}],["tasktype[value",{"_index":825,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"pipes/TaskEnumDisplayPipe.html":{}}}],["tasktypechoices",{"_index":258,"title":{},"body":{"components/AddTaskComponent.html":{},"components/TaskDetailComponent.html":{}}}],["tasktypefilter",{"_index":2090,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasktypes",{"_index":2091,"title":{},"body":{"components/TasksComponent.html":{}}}],["td",{"_index":1958,"title":{},"body":{"components/TableComponent.html":{}}}],["td:last",{"_index":1976,"title":{},"body":{"components/TableComponent.html":{}}}],["td:nth",{"_index":1970,"title":{},"body":{"components/TableComponent.html":{}}}],["template",{"_index":21,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["templateref",{"_index":685,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{}}}],["templateurl",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/NoteDetailComponent.html":{},"components/SidenavComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{}}}],["text",{"_index":744,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/HeaderComponent.html":{},"components/NoteDetailComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"miscellaneous/enumerations.html":{}}}],["text_snippet",{"_index":1783,"title":{},"body":{"components/SidenavComponent.html":{}}}],["textarea",{"_index":1380,"title":{},"body":{"components/FormComponent.html":{}}}],["th",{"_index":1959,"title":{},"body":{"components/TableComponent.html":{}}}],["th:last",{"_index":1987,"title":{},"body":{"components/TableComponent.html":{}}}],["that's",{"_index":2320,"title":{},"body":{"index.html":{}}}],["this._firsttimeuser",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.acquaintancemetric",{"_index":1031,"title":{},"body":{"components/ContactListComponent.html":{}}}],["this.actions$.pipe",{"_index":839,"title":{},"body":{"injectables/ContactEffects.html":{},"injectables/NoteEffects.html":{},"injectables/TaskEffects.html":{}}}],["this.addconceptcontrols",{"_index":276,"title":{},"body":{"components/AddTaskComponent.html":{}}}],["this.addnotecontrols",{"_index":240,"title":{},"body":{"components/AddNoteComponent.html":{}}}],["this.afauth.authstate.pipe",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.afauth.signinwithpopup(provider",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.afauth.signout",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.auth.signout",{"_index":343,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.user$.subscribe(user",{"_index":338,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.googlesignin",{"_index":1462,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.backend.addconcepts(result.event",{"_index":1947,"title":{},"body":{"components/TableComponent.html":{}}}],["this.backend.addcontacttodb(action.contact).pipe",{"_index":842,"title":{},"body":{"injectables/ContactEffects.html":{}}}],["this.backend.addnoteindb(action.note).pipe",{"_index":1620,"title":{},"body":{"injectables/NoteEffects.html":{}}}],["this.backend.addnoteindb(result.event",{"_index":1948,"title":{},"body":{"components/TableComponent.html":{}}}],["this.backend.addtaskindb(action.task).pipe",{"_index":2028,"title":{},"body":{"injectables/TaskEffects.html":{}}}],["this.backend.deletecontactindb(action.contact).pipe",{"_index":850,"title":{},"body":{"injectables/ContactEffects.html":{}}}],["this.backend.deletenoteindb(action.note).pipe",{"_index":1625,"title":{},"body":{"injectables/NoteEffects.html":{}}}],["this.backend.deletetaskindb(action.task).pipe",{"_index":2033,"title":{},"body":{"injectables/TaskEffects.html":{}}}],["this.backend.editconcept(result.event",{"_index":1944,"title":{},"body":{"components/TableComponent.html":{}}}],["this.backend.editnotes(result.event",{"_index":1945,"title":{},"body":{"components/TableComponent.html":{}}}],["this.backend.getcontactsfromdb().pipe",{"_index":858,"title":{},"body":{"injectables/ContactEffects.html":{}}}],["this.backend.getnotesfromdb().pipe",{"_index":1630,"title":{},"body":{"injectables/NoteEffects.html":{}}}],["this.backend.gettasksfromdb().pipe",{"_index":2038,"title":{},"body":{"injectables/TaskEffects.html":{}}}],["this.backend.updatecontactindb(action.contact.id",{"_index":864,"title":{},"body":{"injectables/ContactEffects.html":{}}}],["this.backend.updatenoteindb(action.note).pipe",{"_index":1636,"title":{},"body":{"injectables/NoteEffects.html":{}}}],["this.backend.updatetaskindb(action.task).pipe",{"_index":2044,"title":{},"body":{"injectables/TaskEffects.html":{}}}],["this.barchartdata[0].data?.push(distribution.value",{"_index":1221,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.barchartlabels.push(contacttype[distribution.ctype",{"_index":1220,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.buildcharts(this.contactdistribution",{"_index":1216,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.clicked.emit(\"sidenav",{"_index":1421,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.columnheadernames",{"_index":990,"title":{},"body":{"components/ContactListComponent.html":{}}}],["this.columns",{"_index":1912,"title":{},"body":{"components/TableComponent.html":{}}}],["this.columns.filter(c",{"_index":1913,"title":{},"body":{"components/TableComponent.html":{}}}],["this.columnsfortable",{"_index":989,"title":{},"body":{"components/ContactListComponent.html":{}}}],["this.contact",{"_index":702,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["this.contact.birthdate",{"_index":718,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["this.contact.contactname",{"_index":715,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["this.contact.contacttype",{"_index":716,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["this.contact.description",{"_index":722,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["this.contact.email",{"_index":720,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["this.contact.energylevel",{"_index":712,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["this.contact.known",{"_index":717,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["this.contact.otherdate",{"_index":719,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["this.contact.phone",{"_index":721,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["this.contact.priority",{"_index":713,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["this.contactdistribution",{"_index":1214,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.contactfilter",{"_index":995,"title":{},"body":{"components/ContactListComponent.html":{}}}],["this.contactmetricservice.getcontactrating",{"_index":711,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["this.contacts",{"_index":238,"title":{},"body":{"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{}}}],["this.contacts$.pipe(map(contacts",{"_index":249,"title":{},"body":{"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{}}}],["this.contacts$.subscribe(data",{"_index":1003,"title":{},"body":{"components/ContactListComponent.html":{}}}],["this.contactsretrieved",{"_index":1004,"title":{},"body":{"components/ContactListComponent.html":{}}}],["this.contactsretrievedsaved",{"_index":1011,"title":{},"body":{"components/ContactListComponent.html":{}}}],["this.contactsretrievedsaved.filter(d",{"_index":1012,"title":{},"body":{"components/ContactListComponent.html":{}}}],["this.contactsretrievedsub",{"_index":984,"title":{},"body":{"components/ContactListComponent.html":{}}}],["this.contactsub",{"_index":1197,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.contacttypechoices",{"_index":62,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{}}}],["this.contacttypefilter",{"_index":986,"title":{},"body":{"components/ContactListComponent.html":{}}}],["this.contacttypefilter.value.includes(contacttype[+d.contacttype",{"_index":1013,"title":{},"body":{"components/ContactListComponent.html":{}}}],["this.contacttypefilter.valuechanges.subscribe",{"_index":994,"title":{},"body":{"components/ContactListComponent.html":{}}}],["this.contacttypes",{"_index":985,"title":{},"body":{"components/ContactListComponent.html":{}}}],["this.contextknownfrom",{"_index":66,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{}}}],["this.controlscreated.foreach((control",{"_index":1352,"title":{},"body":{"components/FormComponent.html":{}}}],["this.controlscreated.push",{"_index":1333,"title":{},"body":{"components/FormComponent.html":{}}}],["this.controlscreated[i",{"_index":1358,"title":{},"body":{"components/FormComponent.html":{}}}],["this.controlscreated[i].value",{"_index":1349,"title":{},"body":{"components/FormComponent.html":{}}}],["this.controlstocreate.foreach((control",{"_index":1346,"title":{},"body":{"components/FormComponent.html":{}}}],["this.data",{"_index":1684,"title":{},"body":{"components/NoteListComponent.html":{},"components/TableComponent.html":{},"components/TasksComponent.html":{}}}],["this.data.contact",{"_index":703,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["this.data.metric",{"_index":709,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["this.data.note",{"_index":1607,"title":{},"body":{"components/NoteDetailComponent.html":{}}}],["this.data.notes",{"_index":707,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/NoteDetailComponent.html":{}}}],["this.data.task",{"_index":2018,"title":{},"body":{"components/TaskDetailComponent.html":{}}}],["this.data.tasks",{"_index":705,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["this.datasaved",{"_index":1685,"title":{},"body":{"components/NoteListComponent.html":{},"components/TableComponent.html":{},"components/TasksComponent.html":{}}}],["this.datasaved.filter(d",{"_index":1688,"title":{},"body":{"components/NoteListComponent.html":{},"components/TasksComponent.html":{}}}],["this.datasource",{"_index":1915,"title":{},"body":{"components/TableComponent.html":{}}}],["this.datasource.filter",{"_index":1921,"title":{},"body":{"components/TableComponent.html":{}}}],["this.datasource.paginator",{"_index":1923,"title":{},"body":{"components/TableComponent.html":{}}}],["this.datasource.paginator.firstpage",{"_index":1924,"title":{},"body":{"components/TableComponent.html":{}}}],["this.datasource.sort",{"_index":1937,"title":{},"body":{"components/TableComponent.html":{}}}],["this.dialog.open(contactdetailcomponent",{"_index":1016,"title":{},"body":{"components/ContactListComponent.html":{},"components/TableComponent.html":{}}}],["this.dialog.open(notedetailcomponent",{"_index":1690,"title":{},"body":{"components/NoteListComponent.html":{}}}],["this.dialog.open(taskdetailcomponent",{"_index":2121,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.dialogref.close({event",{"_index":732,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["this.displayedcolumns",{"_index":1910,"title":{},"body":{"components/TableComponent.html":{}}}],["this.displaynames",{"_index":1911,"title":{},"body":{"components/TableComponent.html":{}}}],["this.editconceptcontrols",{"_index":714,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["this.editnotecontrols",{"_index":1608,"title":{},"body":{"components/NoteDetailComponent.html":{}}}],["this.energylevels",{"_index":74,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactDetailComponent.html":{}}}],["this.familymetric",{"_index":1032,"title":{},"body":{"components/ContactListComponent.html":{}}}],["this.firestore.collection(`user/${this.auth.user.uid}/contacts",{"_index":573,"title":{},"body":{"injectables/BackendService.html":{}}}],["this.firestore.collection(`user/${this.auth.user.uid}/notes",{"_index":594,"title":{},"body":{"injectables/BackendService.html":{}}}],["this.firestore.collection(`user/${this.auth.user.uid}/tasks",{"_index":585,"title":{},"body":{"injectables/BackendService.html":{}}}],["this.firestore.doc(`user/${user.uid",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.firestore.doc(`user/${user.uid}`).valuechanges",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.firsttimeuser",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.friendmetric",{"_index":1030,"title":{},"body":{"components/ContactListComponent.html":{}}}],["this.generatecontrols(this.controlstocreate",{"_index":1327,"title":{},"body":{"components/FormComponent.html":{}}}],["this.getrelatedtemplatereference(+event.contacttype",{"_index":1025,"title":{},"body":{"components/ContactListComponent.html":{}}}],["this.highestratedcontact",{"_index":1207,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.highestratedfamilymember",{"_index":1211,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.idgenerator",{"_index":579,"title":{},"body":{"injectables/BackendService.html":{}}}],["this.imageoptions.contacttype[value",{"_index":810,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{}}}],["this.imageoptions.known[value",{"_index":824,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{}}}],["this.imageoptions.notetype[value",{"_index":828,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{}}}],["this.imageoptions.tasktype[value",{"_index":826,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{}}}],["this.inputform.controls['controlscreated",{"_index":1356,"title":{},"body":{"components/FormComponent.html":{}}}],["this.inputform.reset",{"_index":1354,"title":{},"body":{"components/FormComponent.html":{}}}],["this.loadstatethencontacts",{"_index":991,"title":{},"body":{"components/ContactListComponent.html":{}}}],["this.lowestratedcontact",{"_index":1209,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.metricservice",{"_index":1200,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.metrictemplate",{"_index":708,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["this.mostdistantfamilymember",{"_index":1213,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.mostdistantfriend",{"_index":1205,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.mostimportantfriend",{"_index":1203,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.nonrelationmetric",{"_index":1029,"title":{},"body":{"components/ContactListComponent.html":{}}}],["this.note",{"_index":1606,"title":{},"body":{"components/NoteDetailComponent.html":{}}}],["this.notefilter",{"_index":1687,"title":{},"body":{"components/NoteListComponent.html":{}}}],["this.notepipeoptions",{"_index":727,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["this.notes",{"_index":706,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{}}}],["this.notes$.subscribe(data",{"_index":1683,"title":{},"body":{"components/NoteListComponent.html":{}}}],["this.notetypechoices",{"_index":242,"title":{},"body":{"components/AddNoteComponent.html":{},"components/NoteDetailComponent.html":{}}}],["this.notetypefilter",{"_index":1679,"title":{},"body":{"components/NoteListComponent.html":{}}}],["this.notetypefilter.value.includes(notetype[+d.notetype",{"_index":1689,"title":{},"body":{"components/NoteListComponent.html":{}}}],["this.notetypefilter.valuechanges.subscribe",{"_index":1686,"title":{},"body":{"components/NoteListComponent.html":{}}}],["this.ondelete.emit(event",{"_index":1935,"title":{},"body":{"components/TableComponent.html":{}}}],["this.onsubmit.emit(this.submission",{"_index":1351,"title":{},"body":{"components/FormComponent.html":{}}}],["this.ontoolbarlogout.emit",{"_index":1424,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.onzoom.emit(entity",{"_index":1939,"title":{},"body":{"components/TableComponent.html":{}}}],["this.paginator",{"_index":1936,"title":{},"body":{"components/TableComponent.html":{}}}],["this.piedata.push(distribution.value",{"_index":1219,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.pielabels.push(contacttype[distribution.ctype",{"_index":1218,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.pipeoptions",{"_index":988,"title":{},"body":{"components/ContactListComponent.html":{},"components/NoteListComponent.html":{},"components/TasksComponent.html":{}}}],["this.priorities",{"_index":70,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/ContactDetailComponent.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["this.rating",{"_index":710,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["this.resettableandfilter(this.data",{"_index":1914,"title":{},"body":{"components/TableComponent.html":{}}}],["this.router.navigate",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.router.navigate([\"/contacts",{"_index":341,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/login",{"_index":469,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.rowclick(event",{"_index":1929,"title":{},"body":{"components/TableComponent.html":{}}}],["this.setupsortandpagination",{"_index":1917,"title":{},"body":{"components/TableComponent.html":{}}}],["this.sidenav.toggle",{"_index":1781,"title":{},"body":{"components/SidenavComponent.html":{}}}],["this.sidenavcomponent.sidenav.toggle",{"_index":342,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sort",{"_index":1938,"title":{},"body":{"components/TableComponent.html":{}}}],["this.store.dispatch(fromcontactstate.contactactions.addcontact",{"_index":156,"title":{},"body":{"components/AddContactComponent.html":{}}}],["this.store.dispatch(fromcontactstate.contactactions.loadcontacts",{"_index":996,"title":{},"body":{"components/ContactListComponent.html":{}}}],["this.store.dispatch(fromcontactstate.contactactions.updatecontact({contact",{"_index":1028,"title":{},"body":{"components/ContactListComponent.html":{}}}],["this.store.dispatch(fromnotestate.noteactions.addnote",{"_index":254,"title":{},"body":{"components/AddNoteComponent.html":{}}}],["this.store.dispatch(fromnotestate.noteactions.deletenote(result.note",{"_index":1694,"title":{},"body":{"components/NoteListComponent.html":{}}}],["this.store.dispatch(fromnotestate.noteactions.loadnotes",{"_index":1681,"title":{},"body":{"components/NoteListComponent.html":{}}}],["this.store.dispatch(fromtaskstate.taskactions.deletetask(result.task",{"_index":2122,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.store.dispatch(taskactions.addtask",{"_index":279,"title":{},"body":{"components/AddTaskComponent.html":{}}}],["this.store.dispatch(taskactions.loadtasks",{"_index":997,"title":{},"body":{"components/ContactListComponent.html":{},"components/NoteListComponent.html":{}}}],["this.store.select(fromcontactstate.selectcontacts",{"_index":998,"title":{},"body":{"components/ContactListComponent.html":{}}}],["this.store.select(fromnotestate.selectnotes",{"_index":1682,"title":{},"body":{"components/NoteListComponent.html":{}}}],["this.store.select(selectcontacts",{"_index":239,"title":{},"body":{"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{}}}],["this.store.select(selectcontacts).subscribe(contacts",{"_index":1198,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.store.select(selectnotes).pipe(map((notes",{"_index":1022,"title":{},"body":{"components/ContactListComponent.html":{}}}],["this.store.select(selecttasks",{"_index":2116,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.store.select(selecttasks).pipe(map((tasks",{"_index":1018,"title":{},"body":{"components/ContactListComponent.html":{}}}],["this.submission",{"_index":1355,"title":{},"body":{"components/FormComponent.html":{}}}],["this.submission[control.controlname",{"_index":1348,"title":{},"body":{"components/FormComponent.html":{}}}],["this.subs",{"_index":983,"title":{},"body":{"components/ContactListComponent.html":{}}}],["this.subs.sink",{"_index":993,"title":{},"body":{"components/ContactListComponent.html":{},"components/NoteListComponent.html":{},"components/TasksComponent.html":{}}}],["this.subs.unsubscribe",{"_index":1035,"title":{},"body":{"components/ContactListComponent.html":{},"components/NoteListComponent.html":{},"components/TasksComponent.html":{}}}],["this.task",{"_index":2017,"title":{},"body":{"components/TaskDetailComponent.html":{}}}],["this.taskfilter",{"_index":2119,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.taskpipeoptions",{"_index":723,"title":{},"body":{"components/ContactDetailComponent.html":{}}}],["this.tasks",{"_index":704,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/TasksComponent.html":{}}}],["this.tasks$.subscribe(data",{"_index":2117,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.tasktypechoices",{"_index":278,"title":{},"body":{"components/AddTaskComponent.html":{},"components/TaskDetailComponent.html":{}}}],["this.tasktypefilter",{"_index":2114,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.tasktypefilter.value.includes(tasktype[+d.tasktype",{"_index":2120,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.tasktypefilter.valuechanges.subscribe",{"_index":2118,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.topenvironment",{"_index":1199,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.updateuserdata(credential.user",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["through",{"_index":2336,"title":{},"body":{"index.html":{}}}],["title",{"_index":241,"title":{},"body":{"components/AddNoteComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Note.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{}}}],["todo",{"_index":1342,"title":{},"body":{"components/FormComponent.html":{}}}],["together",{"_index":2363,"title":{},"body":{"index.html":{}}}],["toggle",{"_index":1510,"title":{},"body":{"modules/MaterialModule.html":{},"components/SidenavComponent.html":{}}}],["toggled",{"_index":1422,"title":{},"body":{"components/HeaderComponent.html":{}}}],["togglesidenav",{"_index":319,"title":{},"body":{"components/AppComponent.html":{}}}],["toolbar",{"_index":1423,"title":{},"body":{"components/HeaderComponent.html":{}}}],["top",{"_index":1259,"title":{},"body":{"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/SidenavComponent.html":{},"components/TableComponent.html":{}}}],["topenvironment",{"_index":1134,"title":{},"body":{"components/DashboardComponent.html":{}}}],["towards",{"_index":2327,"title":{},"body":{"index.html":{}}}],["tr:hover",{"_index":1981,"title":{},"body":{"components/TableComponent.html":{}}}],["tr:nth",{"_index":1979,"title":{},"body":{"components/TableComponent.html":{}}}],["track",{"_index":2315,"title":{},"body":{"index.html":{}}}],["tracking",{"_index":2377,"title":{},"body":{"index.html":{}}}],["transform",{"_index":773,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{},"components/DashboardComponent.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"components/FormComponent.html":{},"components/HeaderComponent.html":{},"pipes/RatingColorPipe.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"pipes/TaskEnumDisplayPipe.html":{}}}],["transform(value",{"_index":774,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"pipes/RatingColorPipe.html":{},"pipes/TaskEnumDisplayPipe.html":{}}}],["transition",{"_index":1241,"title":{},"body":{"components/DashboardComponent.html":{},"components/GeneralCardComponent.html":{},"components/ModalCardComponent.html":{}}}],["translator.pipe",{"_index":1757,"title":{},"body":{"modules/SharedModule.html":{}}}],["translator.pipe.ts",{"_index":771,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{},"coverage.html":{}}}],["translator.pipe.ts:11",{"_index":801,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{}}}],["translator.pipe.ts:55",{"_index":777,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["true",{"_index":57,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"interfaces/ContactState.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/NoteDetailComponent.html":{},"interfaces/NoteState.html":{},"pipes/RatingColorPipe.html":{},"components/TaskDetailComponent.html":{},"interfaces/TaskState.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":2183,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":42,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"components/ButtonComponent.html":{},"interfaces/Contact.html":{},"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"injectables/ContactEffects.html":{},"components/ContactListComponent.html":{},"injectables/ContactMetricService.html":{},"interfaces/ContactState.html":{},"components/DashboardComponent.html":{},"interfaces/Day.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"components/FormComponent.html":{},"interfaces/FormSetupModel.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MetricsService.html":{},"interfaces/Note.html":{},"components/NoteDetailComponent.html":{},"injectables/NoteEffects.html":{},"components/NoteListComponent.html":{},"interfaces/NoteState.html":{},"pipes/RatingColorPipe.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"interfaces/Task.html":{},"components/TaskDetailComponent.html":{},"injectables/TaskEffects.html":{},"pipes/TaskEnumDisplayPipe.html":{},"interfaces/TaskState.html":{},"components/TasksComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["type.enum.ts",{"_index":2193,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["types",{"_index":876,"title":{},"body":{"components/ContactListComponent.html":{},"components/NoteListComponent.html":{},"components/TasksComponent.html":{}}}],["ui",{"_index":915,"title":{},"body":{"components/ContactListComponent.html":{},"index.html":{}}}],["uid",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["uncle",{"_index":2233,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["undefined",{"_index":220,"title":{},"body":{"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/TasksComponent.html":{}}}],["under",{"_index":2419,"title":{},"body":{"index.html":{}}}],["underline",{"_index":757,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["unknown",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{}}}],["unset",{"_index":1965,"title":{},"body":{"components/TableComponent.html":{}}}],["up",{"_index":941,"title":{},"body":{"components/ContactListComponent.html":{}}}],["update",{"_index":968,"title":{},"body":{"components/ContactListComponent.html":{},"interfaces/ContactState.html":{},"interfaces/NoteState.html":{},"components/TableComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["update_contact",{"_index":2215,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["update_contact_fail",{"_index":2216,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["update_contact_success",{"_index":2217,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["update_note",{"_index":2254,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["update_note_fail",{"_index":2255,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["update_note_success",{"_index":2256,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["update_task",{"_index":2282,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["update_task_fail",{"_index":2283,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["update_task_success",{"_index":2284,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["updatecontact",{"_index":2458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updatecontactindb",{"_index":543,"title":{},"body":{"injectables/BackendService.html":{}}}],["updatecontactindb(contactid",{"_index":564,"title":{},"body":{"injectables/BackendService.html":{}}}],["updatecontactindb(contactid:string",{"_index":575,"title":{},"body":{"injectables/BackendService.html":{}}}],["updatecontacts",{"_index":834,"title":{},"body":{"injectables/ContactEffects.html":{}}}],["updatenote",{"_index":2492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updatenotefail",{"_index":2494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updatenoteindb",{"_index":544,"title":{},"body":{"injectables/BackendService.html":{}}}],["updatenoteindb(note",{"_index":569,"title":{},"body":{"injectables/BackendService.html":{}}}],["updatenotes",{"_index":1617,"title":{},"body":{"injectables/NoteEffects.html":{}}}],["updatenotesuccess",{"_index":2496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updatetask",{"_index":2519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updatetaskfail:createaction",{"_index":2521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updatetaskindb",{"_index":545,"title":{},"body":{"injectables/BackendService.html":{}}}],["updatetaskindb(task",{"_index":571,"title":{},"body":{"injectables/BackendService.html":{}}}],["updatetasks",{"_index":2025,"title":{},"body":{"injectables/TaskEffects.html":{}}}],["updatetasksuccess:createaction",{"_index":2523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updateuserdata",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateuserdata(user",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{}}}],["updating",{"_index":928,"title":{},"body":{"components/ContactListComponent.html":{}}}],["upon",{"_index":929,"title":{},"body":{"components/ContactListComponent.html":{}}}],["uppercase",{"_index":1265,"title":{},"body":{"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{}}}],["url(\"../../../../assets/images/background.jpg",{"_index":1466,"title":{},"body":{"components/LoginComponent.html":{}}}],["url(\"../../../../styles/_mixins.scss",{"_index":1402,"title":{},"body":{"components/GeneralCardComponent.html":{},"components/ModalCardComponent.html":{}}}],["urltree",{"_index":462,"title":{},"body":{"guards/AuthGuard.html":{}}}],["used",{"_index":151,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactListComponent.html":{},"index.html":{}}}],["user",{"_index":317,"title":{"interfaces/User.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ContactListComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"index.html":{}}}],["user.displayname",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{},"components/SidenavComponent.html":{}}}],["user.email",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.name",{"_index":1411,"title":{},"body":{"components/HeaderComponent.html":{}}}],["user.photourl",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.uid",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{}}}],["username",{"_index":1435,"title":{},"body":{"components/HeaderComponent.html":{}}}],["userref",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{}}}],["userref.set(data",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{}}}],["usevalue",{"_index":1558,"title":{},"body":{"modules/MaterialModule.html":{}}}],["validator",{"_index":1343,"title":{},"body":{"components/FormComponent.html":{}}}],["validators",{"_index":1325,"title":{},"body":{"components/FormComponent.html":{}}}],["validators.email",{"_index":1340,"title":{},"body":{"components/FormComponent.html":{}}}],["vals",{"_index":1328,"title":{},"body":{"components/FormComponent.html":{}}}],["vals.push(validators.min(c.numbermax",{"_index":1339,"title":{},"body":{"components/FormComponent.html":{}}}],["vals.push(validators.min(c.numbermin",{"_index":1338,"title":{},"body":{"components/FormComponent.html":{}}}],["vals.push(validators.required",{"_index":1332,"title":{},"body":{"components/FormComponent.html":{}}}],["value",{"_index":51,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"pipes/ContactDetailTranslatorPipe.html":{},"injectables/ContactEffects.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{},"components/FormComponent.html":{},"injectables/MetricsService.html":{},"components/NoteDetailComponent.html":{},"injectables/NoteEffects.html":{},"components/NoteListComponent.html":{},"pipes/RatingColorPipe.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"injectables/TaskEffects.html":{},"pipes/TaskEnumDisplayPipe.html":{},"components/TasksComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["valuechanges",{"_index":574,"title":{},"body":{"injectables/BackendService.html":{}}}],["valuedisplaytype",{"_index":2053,"title":{},"body":{"pipes/TaskEnumDisplayPipe.html":{}}}],["valuedisplaytype:string",{"_index":2055,"title":{},"body":{"pipes/TaskEnumDisplayPipe.html":{}}}],["valueoption",{"_index":775,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{},"pipes/EnumUserDisplayTranslatorPipe.html":{}}}],["valueoption:string,pipetype:string",{"_index":1293,"title":{},"body":{"pipes/EnumUserDisplayTranslatorPipe.html":{}}}],["var",{"_index":161,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"injectables/BackendService.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["variable",{"_index":2144,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2433,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vertical",{"_index":1967,"title":{},"body":{"components/TableComponent.html":{}}}],["viaoda",{"_index":1480,"title":{},"body":{"components/LoginComponent.html":{}}}],["view",{"_index":2297,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"components/ContactListComponent.html":{},"components/SidenavComponent.html":{},"components/TableComponent.html":{}}}],["viewchild(\"acquaintancemetric",{"_index":981,"title":{},"body":{"components/ContactListComponent.html":{}}}],["viewchild(\"familymetric",{"_index":979,"title":{},"body":{"components/ContactListComponent.html":{}}}],["viewchild(\"friendmetric",{"_index":978,"title":{},"body":{"components/ContactListComponent.html":{}}}],["viewchild(\"nonrelationmetric",{"_index":980,"title":{},"body":{"components/ContactListComponent.html":{}}}],["viewchild('acquaintancemetric",{"_index":944,"title":{},"body":{"components/ContactListComponent.html":{}}}],["viewchild('familymetric",{"_index":957,"title":{},"body":{"components/ContactListComponent.html":{}}}],["viewchild('friendmetric",{"_index":959,"title":{},"body":{"components/ContactListComponent.html":{}}}],["viewchild('nonrelationmetric",{"_index":961,"title":{},"body":{"components/ContactListComponent.html":{}}}],["viewchild(matpaginator",{"_index":1899,"title":{},"body":{"components/TableComponent.html":{}}}],["viewchild(matsidenav",{"_index":1779,"title":{},"body":{"components/SidenavComponent.html":{}}}],["viewchild(matsort",{"_index":1903,"title":{},"body":{"components/TableComponent.html":{}}}],["viewchild(sidenavcomponent",{"_index":328,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchildren",{"_index":966,"title":{},"body":{"components/ContactListComponent.html":{}}}],["visibility",{"_index":2323,"title":{},"body":{"index.html":{}}}],["void",{"_index":46,"title":{},"body":{"components/AddContactComponent.html":{},"components/AddNoteComponent.html":{},"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/ContactListComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["volume",{"_index":1149,"title":{},"body":{"components/DashboardComponent.html":{}}}],["volunteer_activism",{"_index":794,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{}}}],["want",{"_index":736,"title":{},"body":{"components/ContactDetailComponent.html":{},"components/NoteDetailComponent.html":{},"components/TaskDetailComponent.html":{}}}],["wanted",{"_index":1933,"title":{},"body":{"components/TableComponent.html":{},"index.html":{}}}],["webkit",{"_index":1798,"title":{},"body":{"components/SidenavComponent.html":{},"components/TableComponent.html":{}}}],["weight",{"_index":1263,"title":{},"body":{"components/DashboardComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{}}}],["welcome",{"_index":1410,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["white",{"_index":1403,"title":{},"body":{"components/GeneralCardComponent.html":{},"components/ModalCardComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{}}}],["whitesmoke",{"_index":1481,"title":{},"body":{"components/LoginComponent.html":{}}}],["width",{"_index":351,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ContactDetailComponent.html":{},"components/DashboardComponent.html":{},"components/FormComponent.html":{},"components/GeneralCardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalCardComponent.html":{},"components/NoteDetailComponent.html":{},"components/NoteListComponent.html":{},"components/SidenavComponent.html":{},"components/TabComponent.html":{},"components/TableComponent.html":{},"components/TaskDetailComponent.html":{},"components/TasksComponent.html":{}}}],["window",{"_index":412,"title":{},"body":{"modules/AppModule.html":{}}}],["word",{"_index":1960,"title":{},"body":{"components/TableComponent.html":{}}}],["work",{"_index":2238,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["work_outline",{"_index":785,"title":{},"body":{"pipes/ContactDetailTranslatorPipe.html":{}}}],["wrap",{"_index":1961,"title":{},"body":{"components/TableComponent.html":{}}}],["x",{"_index":1956,"title":{},"body":{"components/TableComponent.html":{}}}],["xkmqr",{"_index":2470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["y",{"_index":1811,"title":{},"body":{"components/SidenavComponent.html":{}}}],["y:hidden",{"_index":1786,"title":{},"body":{"components/SidenavComponent.html":{}}}],["years",{"_index":1010,"title":{},"body":{"components/ContactListComponent.html":{}}}],["z",{"_index":1469,"title":{},"body":{"components/LoginComponent.html":{}}}],["zone.js",{"_index":2185,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":289,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AppModule.html":{},"modules/CardsModule.html":{},"modules/ContactsModule.html":{},"modules/CoreModule.html":{},"modules/LayoutModule.html":{},"modules/MaterialModule.html":{},"modules/NotesModule.html":{},"modules/SharedModule.html":{},"modules/TabModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddContactComponent.html":{"url":"components/AddContactComponent.html","title":"component - AddContactComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddContactComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/operations/contact/components/add-contact/add-contact.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                enccrm-add-contact\n            \n\n            \n                styleUrls\n                ./add-contact.component.scss\n            \n\n\n            \n                template\n                \n  \n    \n     Add a new Contact\n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addConceptControls\n                            \n                            \n                                contactTypeChoices\n                            \n                            \n                                contextKnownFrom\n                            \n                            \n                                energyLevels\n                            \n                            \n                                priorities\n                            \n                            \n                                statuses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/operations/contact/components/add-contact/add-contact.component.ts:158\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/operations/contact/components/add-contact/add-contact.component.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit(contact: Contact)\n                \n            \n\n\n            \n                \n                    Defined in src/app/operations/contact/components/add-contact/add-contact.component.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contact\n                                    \n                                                Contact\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addConceptControls\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormSetupModel[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      displayName: \"Name\",\n      controlName: \"contactName\",\n      type: \"string\",\n      required: true,\n      default: '',\n    },\n    {\n      displayName: \"Contact Type\",\n      controlName: \"contactType\",\n      type: \"stringChoice\",\n      required: true,\n      default: 14,\n      stringChoices: this.contactTypeChoices\n    },\n    {\n      displayName: \"Know From?\",\n      controlName: \"known\",\n      type: \"stringChoice\",\n      required: true,\n      default: 1,\n      stringChoices: this.contextKnownFrom\n    },\n    {\n      displayName: \"How Important?\",\n      controlName: \"priority\",\n      type: \"stringChoiceSet\",\n      required: true,\n      default: 1,\n      stringChoices: this.priorities\n    },\n    {\n      displayName: \"Energy Level\",\n      controlName: \"energyLevel\",\n      type: \"stringChoiceSet\",\n      required: true,\n      default: 1,\n      stringChoices: this.energyLevels\n    },\n    {\n      displayName: \"Birth Date\",\n      controlName: \"birthDate\",\n      type: \"date\",\n      required: false,\n      default: '',\n    },\n    {\n      displayName: \"Other Date\",\n      controlName: \"otherDate\",\n      type: \"date\",\n      required: false,\n      default: '',\n    },\n    {\n      displayName: \"Email\",\n      controlName: \"email\",\n      type: \"email\",\n      required: false,\n      default: '',\n    },\n    {\n      displayName: \"Phone\",\n      controlName: \"phone\",\n      type: \"string\",\n      required: true,\n      default: '',\n    },\n    {\n      displayName: \"Initial Notes\",\n      controlName: \"description\",\n      type: \"longString\",\n      required: false,\n      default: '',\n    }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/components/add-contact/add-contact.component.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contactTypeChoices\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { name: ContactType[0], value: 0 },\n    { name: ContactType[1], value: 1 },\n    { name: ContactType[2], value: 2 },\n    { name: ContactType[3], value: 3 },\n    { name: ContactType[4], value: 4 },\n    { name: ContactType[5], value: 5 },\n    { name: ContactType[6], value: 6 },\n    { name: ContactType[7], value: 7 },\n    { name: ContactType[8], value: 8 },\n    { name: ContactType[9], value: 9 },\n    { name: ContactType[10], value: 10 },\n    { name: ContactType[11], value: 11 },\n    { name: ContactType[12], value: 12 },\n    { name: ContactType[13], value: 13 },\n    { name: ContactType[14], value: 14 },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/components/add-contact/add-contact.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contextKnownFrom\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { name: Context[0], value: 0 },\n    { name: Context[1], value: 1 },\n    { name: Context[2], value: 2 },\n    { name: Context[3], value: 3 },\n    { name: Context[4], value: 4 },\n    { name: Context[5], value: 5 },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/components/add-contact/add-contact.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        energyLevels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { name: EnergyLevel[0], value: 0 },\n    { name: EnergyLevel[1], value: 1 },\n    { name: EnergyLevel[2], value: 2 },\n    { name: EnergyLevel[3], value: 3 },\n    { name: EnergyLevel[4], value: 4 },\n    { name: EnergyLevel[5], value: 5 },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/components/add-contact/add-contact.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        priorities\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { name: Priorities[0], value: 0 },\n    { name: Priorities[1], value: 1 },\n    { name: Priorities[2], value: 2 },\n    { name: Priorities[3], value: 3 },\n    { name: Priorities[4], value: 4 },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/components/add-contact/add-contact.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statuses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { name: Statuses[0], value: 0 },\n    { name: Statuses[1], value: 1 },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/components/add-contact/add-contact.component.ts:77\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\nimport * as fromContactState from \"../../state/index\";\nimport { Contact } from \"@operations/contact/index\";\n\nimport {\n  ContactType,\n  Context,\n  Priorities,\n  EnergyLevel,\n  Statuses\n} from '@operations/contact';\nimport { FormSetupModel } from '@shared/models/form-setup.model';\n\n@Component({\n  selector: 'enccrm-add-contact',\n  template: `\n  \n    \n       \n       Add a new Contact\n    \n    \n  \n  `,\n  styleUrls: ['./add-contact.component.scss']\n})\nexport class AddContactComponent implements OnInit {\n\n\n  contactTypeChoices = [\n    { name: ContactType[0], value: 0 },\n    { name: ContactType[1], value: 1 },\n    { name: ContactType[2], value: 2 },\n    { name: ContactType[3], value: 3 },\n    { name: ContactType[4], value: 4 },\n    { name: ContactType[5], value: 5 },\n    { name: ContactType[6], value: 6 },\n    { name: ContactType[7], value: 7 },\n    { name: ContactType[8], value: 8 },\n    { name: ContactType[9], value: 9 },\n    { name: ContactType[10], value: 10 },\n    { name: ContactType[11], value: 11 },\n    { name: ContactType[12], value: 12 },\n    { name: ContactType[13], value: 13 },\n    { name: ContactType[14], value: 14 },\n  ]\n  contextKnownFrom = [\n    { name: Context[0], value: 0 },\n    { name: Context[1], value: 1 },\n    { name: Context[2], value: 2 },\n    { name: Context[3], value: 3 },\n    { name: Context[4], value: 4 },\n    { name: Context[5], value: 5 },\n  ]\n  energyLevels = [\n    { name: EnergyLevel[0], value: 0 },\n    { name: EnergyLevel[1], value: 1 },\n    { name: EnergyLevel[2], value: 2 },\n    { name: EnergyLevel[3], value: 3 },\n    { name: EnergyLevel[4], value: 4 },\n    { name: EnergyLevel[5], value: 5 },\n  ]\n  priorities = [\n    { name: Priorities[0], value: 0 },\n    { name: Priorities[1], value: 1 },\n    { name: Priorities[2], value: 2 },\n    { name: Priorities[3], value: 3 },\n    { name: Priorities[4], value: 4 },\n  ]\n  statuses = [\n    { name: Statuses[0], value: 0 },\n    { name: Statuses[1], value: 1 },\n  ]\n\n  //used to setup child component form  \n  addConceptControls: FormSetupModel[] = [\n    {\n      displayName: \"Name\",\n      controlName: \"contactName\",\n      type: \"string\",\n      required: true,\n      default: '',\n    },\n    {\n      displayName: \"Contact Type\",\n      controlName: \"contactType\",\n      type: \"stringChoice\",\n      required: true,\n      default: 14,\n      stringChoices: this.contactTypeChoices\n    },\n    {\n      displayName: \"Know From?\",\n      controlName: \"known\",\n      type: \"stringChoice\",\n      required: true,\n      default: 1,\n      stringChoices: this.contextKnownFrom\n    },\n    {\n      displayName: \"How Important?\",\n      controlName: \"priority\",\n      type: \"stringChoiceSet\",\n      required: true,\n      default: 1,\n      stringChoices: this.priorities\n    },\n    {\n      displayName: \"Energy Level\",\n      controlName: \"energyLevel\",\n      type: \"stringChoiceSet\",\n      required: true,\n      default: 1,\n      stringChoices: this.energyLevels\n    },\n    {\n      displayName: \"Birth Date\",\n      controlName: \"birthDate\",\n      type: \"date\",\n      required: false,\n      default: '',\n    },\n    {\n      displayName: \"Other Date\",\n      controlName: \"otherDate\",\n      type: \"date\",\n      required: false,\n      default: '',\n    },\n    {\n      displayName: \"Email\",\n      controlName: \"email\",\n      type: \"email\",\n      required: false,\n      default: '',\n    },\n    {\n      displayName: \"Phone\",\n      controlName: \"phone\",\n      type: \"string\",\n      required: true,\n      default: '',\n    },\n    {\n      displayName: \"Initial Notes\",\n      controlName: \"description\",\n      type: \"longString\",\n      required: false,\n      default: '',\n    }\n  ];\n\n  constructor(private store: Store) { };\n\n  ngOnInit(): void {\n\n  }\n\n \n  submit(contact: Contact) {\n    this.store.dispatch(fromContactState.contactActions.addContact({ contact }));\n  }\n\n}\n\n    \n\n\n    \n                \n                    ./add-contact.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           Add a new Contact    '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'enccrm-add-contact'},{'name': 'AddNoteComponent', 'selector': 'enccrm-add-note'},{'name': 'AddTaskComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'enccrm-button'},{'name': 'ContactDetailComponent', 'selector': 'enccrm-contact-detail'},{'name': 'ContactListComponent', 'selector': 'enccrm-contact-list'},{'name': 'DashboardComponent', 'selector': 'enccrm-dashboard'},{'name': 'FormComponent', 'selector': 'enccrm-form'},{'name': 'GeneralCardComponent', 'selector': 'enccrm-general-card'},{'name': 'HeaderComponent', 'selector': 'enccrm-header'},{'name': 'LoginComponent', 'selector': 'enccrm-login'},{'name': 'ModalCardComponent', 'selector': 'enccrm-modal-card'},{'name': 'NoteDetailComponent', 'selector': 'enccrm-note-detail'},{'name': 'NoteListComponent', 'selector': 'enccrm-note-list'},{'name': 'SidenavComponent', 'selector': 'enccrm-sidenav'},{'name': 'TabComponent', 'selector': 'enccrm-tab'},{'name': 'TableComponent', 'selector': 'enccrm-table'},{'name': 'TaskDetailComponent', 'selector': 'enccrm-task-detail'},{'name': 'TasksComponent', 'selector': 'enccrm-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddContactComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddNoteComponent.html":{"url":"components/AddNoteComponent.html","title":"component - AddNoteComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddNoteComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/operations/note/components/add-note/add-note.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                enccrm-add-note\n            \n\n            \n                styleUrls\n                ./add-note.component.scss\n            \n\n\n            \n                template\n                \n  \n    \n     Add a new Note\n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addNoteControls\n                            \n                            \n                                contacts$\n                            \n                            \n                                noteTypeChoices\n                            \n                            \n                                priorities\n                            \n                            \n                                statuses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/operations/note/components/add-note/add-note.component.ts:56\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/operations/note/components/add-note/add-note.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit(note: Note)\n                \n            \n\n\n            \n                \n                    Defined in src/app/operations/note/components/add-note/add-note.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                Note\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addNoteControls\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormSetupModel[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/note/components/add-note/add-note.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contacts$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/note/components/add-note/add-note.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noteTypeChoices\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { name: NoteType[0], value: 0 },\n    { name: NoteType[1], value: 1 },\n    { name: NoteType[2], value: 2 },\n    { name: NoteType[3], value: 3 }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/note/components/add-note/add-note.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        priorities\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { name: Priorities[0], value: 0 },\n    { name: Priorities[1], value: 1 },\n    { name: Priorities[2], value: 2 },\n    { name: Priorities[3], value: 3 },\n    { name: Priorities[4], value: 4 },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/note/components/add-note/add-note.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statuses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { name: Statuses[0], value: 0 },\n    { name: Statuses[1], value: 1 },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/note/components/add-note/add-note.component.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\nimport * as fromNoteState from \"../../state/index\";\nimport { Note } from \"@operations/note/index\";\n\nimport { NoteType, Priorities } from '@operations/note';\nimport { Statuses } from '@operations/note/models/enums/statuses.enum';\nimport { FormSetupModel } from '@shared/models/form-setup.model';\nimport { selectContacts } from '@operations/contact/state';\nimport { Contact } from '@operations/contact';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'enccrm-add-note',\n  template: `\n  \n    \n       \n       Add a new Note\n     \n    \n  \n  `,\n  styleUrls: ['./add-note.component.scss']\n})\nexport class AddNoteComponent implements OnInit {\n\n  noteTypeChoices = [\n    { name: NoteType[0], value: 0 },\n    { name: NoteType[1], value: 1 },\n    { name: NoteType[2], value: 2 },\n    { name: NoteType[3], value: 3 }\n  ]\n  priorities = [\n    { name: Priorities[0], value: 0 },\n    { name: Priorities[1], value: 1 },\n    { name: Priorities[2], value: 2 },\n    { name: Priorities[3], value: 3 },\n    { name: Priorities[4], value: 4 },\n  ]\n  statuses = [\n    { name: Statuses[0], value: 0 },\n    { name: Statuses[1], value: 1 },\n  ]\n\n  addNoteControls: FormSetupModel[] = [];\n\n\n  contacts$: Observable | undefined;\n\n  constructor(private store: Store) { };\n\n  ngOnInit(): void {\n    this.contacts$ = this.store.select(selectContacts);\n    this.addNoteControls = [\n      {\n        displayName: \"Name\",\n        controlName: \"title\",\n        type: \"string\",\n        required: true,\n        default: '',\n      },\n      {\n        displayName: \"Note Type\",\n        controlName: \"noteType\",\n        type: \"stringChoice\",\n        required: true,\n        default: 0,\n        stringChoices: this.noteTypeChoices\n      },\n      {\n        displayName: \"How Important?\",\n        controlName: \"priority\",\n        type: \"stringChoiceSet\",\n        required: true,\n        default: 1,\n        stringChoices: this.priorities\n      },\n      {\n        displayName: \"Body\",\n        controlName: \"body\",\n        type: \"longString\",\n        required: true,\n        default: 'No Body Provided'\n      },\n      {\n        displayName: \"Related Contact\",\n        controlName: \"contact\",\n        type: \"autocomplete-select\",\n        required: true,\n        default: '',\n        autoCompleteOptions: this.contacts$.pipe(map(contacts => contacts.map(contact => ({ value: contact.id, display: contact.contactName }))))\n      }\n    ];\n  }\n\n  submit(note: Note) {\n    this.store.dispatch(fromNoteState.noteActions.addNote({ note }));\n  }\n\n}\n\n    \n\n\n    \n                \n                    ./add-note.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           Add a new Note    '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'enccrm-add-contact'},{'name': 'AddNoteComponent', 'selector': 'enccrm-add-note'},{'name': 'AddTaskComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'enccrm-button'},{'name': 'ContactDetailComponent', 'selector': 'enccrm-contact-detail'},{'name': 'ContactListComponent', 'selector': 'enccrm-contact-list'},{'name': 'DashboardComponent', 'selector': 'enccrm-dashboard'},{'name': 'FormComponent', 'selector': 'enccrm-form'},{'name': 'GeneralCardComponent', 'selector': 'enccrm-general-card'},{'name': 'HeaderComponent', 'selector': 'enccrm-header'},{'name': 'LoginComponent', 'selector': 'enccrm-login'},{'name': 'ModalCardComponent', 'selector': 'enccrm-modal-card'},{'name': 'NoteDetailComponent', 'selector': 'enccrm-note-detail'},{'name': 'NoteListComponent', 'selector': 'enccrm-note-list'},{'name': 'SidenavComponent', 'selector': 'enccrm-sidenav'},{'name': 'TabComponent', 'selector': 'enccrm-tab'},{'name': 'TableComponent', 'selector': 'enccrm-table'},{'name': 'TaskDetailComponent', 'selector': 'enccrm-task-detail'},{'name': 'TasksComponent', 'selector': 'enccrm-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddNoteComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddTaskComponent.html":{"url":"components/AddTaskComponent.html","title":"component - AddTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/operations/task/components/add-task/add-task.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                template\n                  \n  \n    \n     Add a new Task\n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addConceptControls\n                            \n                            \n                                contacts$\n                            \n                            \n                                priorities\n                            \n                            \n                                statuses\n                            \n                            \n                                taskTypeChoices\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/operations/task/components/add-task/add-task.component.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/operations/task/components/add-task/add-task.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/operations/task/components/add-task/add-task.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addConceptControls\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormSetupModel[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/task/components/add-task/add-task.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contacts$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/task/components/add-task/add-task.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        priorities\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { name: Priorities[0], value: 0 },\n    { name: Priorities[1], value: 1 },\n    { name: Priorities[2], value: 2 },\n    { name: Priorities[3], value: 3 },\n    { name: Priorities[4], value: 4 },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/task/components/add-task/add-task.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statuses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { name: Statuses[0], value: 0 },\n    { name: Statuses[1], value: 1 },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/task/components/add-task/add-task.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskTypeChoices\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { name: TaskType[0], value: 0 },\n    { name: TaskType[1], value: 1 },\n    { name: TaskType[2], value: 2 },\n    { name: TaskType[3], value: 3 },\n    { name: TaskType[4], value: 4 }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/task/components/add-task/add-task.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\nimport { Store } from \"@ngrx/store\";\nimport { Contact } from \"@operations/contact\";\nimport { selectContacts } from \"@operations/contact/state\";\nimport { TaskType, Priorities, Statuses, Task } from \"@operations/task\";\nimport { taskActions } from \"@operations/task/state\";\nimport { FormSetupModel } from \"@shared/models/form-setup.model\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\n\n@Component({\n  template: `\n    \n    \n       \n       Add a new Task \n    \n    \n  \n    `,\n  styleUrls: []\n})\nexport class AddTaskComponent {\n  taskTypeChoices = [\n    { name: TaskType[0], value: 0 },\n    { name: TaskType[1], value: 1 },\n    { name: TaskType[2], value: 2 },\n    { name: TaskType[3], value: 3 },\n    { name: TaskType[4], value: 4 }\n  ]\n  priorities = [\n    { name: Priorities[0], value: 0 },\n    { name: Priorities[1], value: 1 },\n    { name: Priorities[2], value: 2 },\n    { name: Priorities[3], value: 3 },\n    { name: Priorities[4], value: 4 },\n  ]\n  statuses = [\n    { name: Statuses[0], value: 0 },\n    { name: Statuses[1], value: 1 },\n  ]\n\n  addConceptControls: FormSetupModel[] = [];\n\n  contacts$: Observable | undefined;\n\n  constructor(private store: Store) { };\n\n  ngOnInit(): void {\n    this.contacts$ = this.store.select(selectContacts);\n    this.addConceptControls = [\n      {\n        displayName: \"Name\",\n        controlName: \"taskName\",\n        type: \"string\",\n        required: true,\n        default: '',\n      },\n      {\n        displayName: \"Task Type\",\n        controlName: \"taskType\",\n        type: \"stringChoice\",\n        required: true,\n        default: 14,\n        stringChoices: this.taskTypeChoices\n      },\n      {\n        displayName: \"How Important?\",\n        controlName: \"priority\",\n        type: \"stringChoiceSet\",\n        required: true,\n        default: 1,\n        stringChoices: this.priorities\n      },\n      {\n        displayName: \"Description\",\n        controlName: \"description\",\n        type: \"longString\",\n        required: false,\n        default: 'No Description Yet',\n      },\n      {\n        displayName: \"Related Contact\",\n        controlName: \"contact\",\n        type: \"autocomplete-select\",\n        required: true,\n        default: '',\n        autoCompleteOptions: this.contacts$.pipe(map(contacts => contacts.map(contact => ({ value: contact.id, display: contact.contactName }))))\n      }\n    ];\n\n  }\n\n  submit(task: Task) {\n    this.store.dispatch(taskActions.addTask({ task }));\n  }\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Add a new Task    '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'enccrm-add-contact'},{'name': 'AddNoteComponent', 'selector': 'enccrm-add-note'},{'name': 'AddTaskComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'enccrm-button'},{'name': 'ContactDetailComponent', 'selector': 'enccrm-contact-detail'},{'name': 'ContactListComponent', 'selector': 'enccrm-contact-list'},{'name': 'DashboardComponent', 'selector': 'enccrm-dashboard'},{'name': 'FormComponent', 'selector': 'enccrm-form'},{'name': 'GeneralCardComponent', 'selector': 'enccrm-general-card'},{'name': 'HeaderComponent', 'selector': 'enccrm-header'},{'name': 'LoginComponent', 'selector': 'enccrm-login'},{'name': 'ModalCardComponent', 'selector': 'enccrm-modal-card'},{'name': 'NoteDetailComponent', 'selector': 'enccrm-note-detail'},{'name': 'NoteListComponent', 'selector': 'enccrm-note-list'},{'name': 'SidenavComponent', 'selector': 'enccrm-sidenav'},{'name': 'TabComponent', 'selector': 'enccrm-tab'},{'name': 'TableComponent', 'selector': 'enccrm-table'},{'name': 'TaskDetailComponent', 'selector': 'enccrm-task-detail'},{'name': 'TasksComponent', 'selector': 'enccrm-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AnalyticsModule.html":{"url":"modules/AnalyticsModule.html","title":"module - AnalyticsModule","body":"\n                   \n\n\n\n\n    Modules\n    AnalyticsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AnalyticsModule\n\n\n\ncluster_AnalyticsModule_imports\n\n\n\ncluster_AnalyticsModule_declarations\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\n\n\nAnalyticsModule\n\nAnalyticsModule\n\nAnalyticsModule -->\n\nDashboardComponent->AnalyticsModule\n\n\n\n\n\nAnalyticsRoutingModule\n\nAnalyticsRoutingModule\n\nAnalyticsModule -->\n\nAnalyticsRoutingModule->AnalyticsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAnalyticsModule -->\n\nSharedModule->AnalyticsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/analytics/analytics.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DashboardComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AnalyticsRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { AnalyticsRoutingModule } from './analytics.routing.module';\nimport { SharedModule } from '@shared/shared.module';\nimport { ChartsModule } from 'ng2-charts';\n\n\n\n@NgModule({\n  declarations: [\n    DashboardComponent\n  ],\n  imports: [\n    AnalyticsRoutingModule,\n    SharedModule,\n    ChartsModule\n  ]\n})\nexport class AnalyticsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AnalyticsRoutingModule.html":{"url":"modules/AnalyticsRoutingModule.html","title":"module - AnalyticsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AnalyticsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/analytics/analytics.routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\n\nconst routes: Routes = [\n  {path:'', component:DashboardComponent},\n  {path:'dashboard', component:DashboardComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AnalyticsRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sidenavComponent\n                            \n                            \n                                title\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                toggleSideNav\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSideNav\n                        \n                    \n                \n            \n            \n                \ntoggleSideNav()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        sidenavComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(SidenavComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'encouragement-crm'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SidenavComponent } from '@core/layout/sidenav/sidenav.component';\nimport { Store } from '@ngrx/store';\nimport { AuthService } from './core/auth/services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent  {\n  title = 'encouragement-crm';\n\n  user: any;\n\n  @ViewChild(SidenavComponent)\n  sidenavComponent: any;\n\n  constructor(private auth: AuthService, private router: Router, private store:Store) {\n\n\n    this.auth.user$.subscribe(user => {\n      this.user = user;\n      console.log({user});\n      this.router.navigate([\"/contacts\"]);\n    });\n  }\n\n  toggleSideNav() {\n    this.sidenavComponent.sidenav.toggle();\n  }\n\n  logout() {\n    this.auth.signOut();\n  }\n}\n\n    \n\n    \n        \n  \n     \n    \n      \n        \n      \n    \n  \n\n\n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .main-container {\n  background-color: var(--accent-color);\n  height: 100vh;\n  width: 100vmax;\n  overflow: hidden;\n\n  .nav-content {\n    height: 98vh;\n    width: 100vmax;\n    background-color: var(--accent-color);\n    padding-left: 5vmax;\n    overflow: auto;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                       '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'enccrm-add-contact'},{'name': 'AddNoteComponent', 'selector': 'enccrm-add-note'},{'name': 'AddTaskComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'enccrm-button'},{'name': 'ContactDetailComponent', 'selector': 'enccrm-contact-detail'},{'name': 'ContactListComponent', 'selector': 'enccrm-contact-list'},{'name': 'DashboardComponent', 'selector': 'enccrm-dashboard'},{'name': 'FormComponent', 'selector': 'enccrm-form'},{'name': 'GeneralCardComponent', 'selector': 'enccrm-general-card'},{'name': 'HeaderComponent', 'selector': 'enccrm-header'},{'name': 'LoginComponent', 'selector': 'enccrm-login'},{'name': 'ModalCardComponent', 'selector': 'enccrm-modal-card'},{'name': 'NoteDetailComponent', 'selector': 'enccrm-note-detail'},{'name': 'NoteListComponent', 'selector': 'enccrm-note-list'},{'name': 'SidenavComponent', 'selector': 'enccrm-sidenav'},{'name': 'TabComponent', 'selector': 'enccrm-tab'},{'name': 'TableComponent', 'selector': 'enccrm-table'},{'name': 'TaskDetailComponent', 'selector': 'enccrm-task-detail'},{'name': 'TasksComponent', 'selector': 'enccrm-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { environment } from 'environments/environment';\nimport { CoreModule } from '@core/core.module';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { reducers } from './store/reducers';\n\n\n\n\n\n@NgModule({\n  declarations: [ \n    AppComponent\n  ],\n  imports: [\n    CoreModule,\n    BrowserModule,\n    AppRoutingModule,\n    StoreModule.forRoot(reducers),\n    EffectsModule.forRoot([]),\n    StoreDevtoolsModule.instrument({\n      maxAge: 25, // Retains last 25 states\n      logOnly: environment.production, // Restrict extension to log-only mode\n      autoPause: true, // Pauses recording actions and state changes when the extension window is not open\n    }),\n    BrowserAnimationsModule,\n    AngularFirestoreModule, \n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from '@core/auth/guards/auth.guard';\nimport { LoginComponent } from '@core/auth/login/login.component';\n\nconst routes: Routes = [\n  { path: '', loadChildren: () => \"import('./operations/contact/contacts.module').then(m => m.ContactsModule)\", canActivate: [AuthGuard] },\n  { path: 'login', component:LoginComponent },\n  { path: 'analytics', loadChildren: () => \"import('./analytics/analytics.module').then(m => m.AnalyticsModule)\", canActivate: [AuthGuard] },\n  { path: 'contacts', loadChildren: () => \"import('./operations/contact/contacts.module').then(m => m.ContactsModule)\", canActivate: [AuthGuard] },\n  { path: 'task', loadChildren: () => \"import('./operations/task/task.module').then(m => m.TaskModule)\", canActivate: [AuthGuard] },\n  { path: 'notes', loadChildren: () => \"import('./operations/note/notes.module').then(m => m.NotesModule)\", canActivate: [AuthGuard] },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/reducers/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contactState\n                                        \n                                \n                                \n                                        \n                                            noteState\n                                        \n                                \n                                \n                                        \n                                            taskState\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contactState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contactState:     fromOperation.ContactState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromOperation.ContactState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noteState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        noteState:         NoteState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NoteState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        taskState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        taskState:         TaskState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TaskState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap } from \"@ngrx/store\";\nimport { noteReducer, NoteState } from \"@operations/note/state\";\nimport { taskReducer, TaskState } from \"@operations/task/state\";\nimport * as fromOperation from \"../../operations/index\";\n\n\n\nexport interface AppState {\n    contactState: fromOperation.ContactState\n    taskState: TaskState,\n    noteState: NoteState\n}\n\nexport const reducers:ActionReducerMap = {\n  contactState: fromOperation.contactReducer,\n  taskState: taskReducer,\n  noteState: noteReducer\n  \n}  \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/auth/guards/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/auth/guards/auth.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/auth/guards/auth.guard.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | UrlTree | Observable | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService:AuthService, private router: Router) {}\n\n  \n  canActivate(\n    route: ActivatedRouteSnapshot, \n    state: RouterStateSnapshot):\n     boolean | UrlTree | Observable | Promise {\n\n \n      if(!this.authService.user) this.router.navigate(['/login']);\n      return true;\n         \n\n  }\n  \n}\n\n\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/auth/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _firstTimeUser\n                            \n                            \n                                    Public\n                                afAuth\n                            \n                            \n                                    Optional\n                                user\n                            \n                            \n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                googleSignin\n                            \n                            \n                                    Async\n                                signOut\n                            \n                            \n                                    Private\n                                updateUserData\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    firstTimeUser\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afAuth: AngularFireAuth, firestore: AngularFirestore, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/auth/services/auth.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        googleSignin\n                        \n                    \n                \n            \n            \n                \n                    \n                    googleSignin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/auth/services/auth.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signOut\n                        \n                    \n                \n            \n            \n                \n                    \n                    signOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/auth/services/auth.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateUserData\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserData(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/auth/services/auth.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _firstTimeUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/core/auth/services/auth.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        afAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AngularFireAuth\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/auth/services/auth.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/auth/services/auth.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/auth/services/auth.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        firstTimeUser\n                    \n                \n\n                \n                    \n                        getfirstTimeUser()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/auth/services/auth.service.ts:63\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Observable, of } from 'rxjs';\nimport { switchMap, take } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n\nimport firebase from 'firebase/app';\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore';\nimport { User } from '../models/users';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  user$: Observable;\n  user?: any;\n  private _firstTimeUser: boolean = false;\n\n  constructor(\n    public afAuth: AngularFireAuth,\n    private firestore: AngularFirestore,\n    private router: Router\n  ) {\n    this.user$ = this.afAuth.authState.pipe(\n      switchMap(user => {\n        if (user) {\n          this.user = user as User;\n          console.dir(this.user);\n          return this.firestore.doc(`user/${user.uid}`).valueChanges();\n        } else {\n          return of(null);\n        }\n      })\n    )\n\n  }\n\n  async googleSignin() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    const credential = await this.afAuth.signInWithPopup(provider);\n    if (credential.additionalUserInfo?.isNewUser) {\n      this._firstTimeUser = true;\n    }\n    return [this.updateUserData(credential.user), this.firstTimeUser];\n  }\n\n  private updateUserData(user: any) {\n    const userRef: AngularFirestoreDocument = this.firestore.doc(`user/${user.uid}`);\n    const data = {\n      uid: user.uid,\n      email: user.email,\n      displayName: user.displayName,\n      photoURL: user.photoURL\n    } as User\n    return userRef.set(data, { merge: true });\n\n\n  }\n\n  get firstTimeUser() { return this._firstTimeUser }\n\n  async signOut() {\n    await this.afAuth.signOut();\n    this.router.navigate(['/']);\n  }\n\n\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BackendService.html":{"url":"injectables/BackendService.html","title":"injectable - BackendService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BackendService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/backend.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addContactToDB\n                            \n                            \n                                addNoteInDB\n                            \n                            \n                                addTaskInDB\n                            \n                            \n                                deleteContactInDB\n                            \n                            \n                                deleteNoteInDB\n                            \n                            \n                                deleteTaskInDB\n                            \n                            \n                                getContactsFromDB\n                            \n                            \n                                getNotesFromDB\n                            \n                            \n                                getTasksFromDB\n                            \n                            \n                                idGenerator\n                            \n                            \n                                updateContactInDB\n                            \n                            \n                                updateNoteInDB\n                            \n                            \n                                updateTaskInDB\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firestore: AngularFirestore, auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/backend.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addContactToDB\n                        \n                    \n                \n            \n            \n                \naddContactToDB(contact: Contact)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/backend.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contact\n                                    \n                                                Contact\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addNoteInDB\n                        \n                    \n                \n            \n            \n                \naddNoteInDB(note: Note)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/backend.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                Note\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addTaskInDB\n                        \n                    \n                \n            \n            \n                \naddTaskInDB(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/backend.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteContactInDB\n                        \n                    \n                \n            \n            \n                \ndeleteContactInDB(contact: Contact)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/backend.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contact\n                                    \n                                                Contact\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteNoteInDB\n                        \n                    \n                \n            \n            \n                \ndeleteNoteInDB(note: Note)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/backend.service.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                Note\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTaskInDB\n                        \n                    \n                \n            \n            \n                \ndeleteTaskInDB(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/backend.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getContactsFromDB\n                        \n                    \n                \n            \n            \n                \ngetContactsFromDB()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/backend.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNotesFromDB\n                        \n                    \n                \n            \n            \n                \ngetNotesFromDB()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/backend.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTasksFromDB\n                        \n                    \n                \n            \n            \n                \ngetTasksFromDB()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/backend.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        idGenerator\n                        \n                    \n                \n            \n            \n                \nidGenerator()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/backend.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateContactInDB\n                        \n                    \n                \n            \n            \n                \nupdateContactInDB(contactId: string | number, changes: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/backend.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contactId\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    changes\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateNoteInDB\n                        \n                    \n                \n            \n            \n                \nupdateNoteInDB(note: Note)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/backend.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                Note\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTaskInDB\n                        \n                    \n                \n            \n            \n                \nupdateTaskInDB(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/backend.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { AuthService } from '@core/auth/services/auth.service';\n\nimport { Contact, Note, Task } from '@operations/index';\nimport { Observable, of } from 'rxjs';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BackendService {\n\n\n\n  constructor(\n    private firestore: AngularFirestore,\n    private auth: AuthService,\n\n  ) {\n\n  }\n\n  getContactsFromDB(): Observable {\n    return this.firestore.collection(`user/${this.auth.user.uid}/Contacts`)\n      .valueChanges();\n  }\n  updateContactInDB(contactId:string | number, changes: Partial) {\n    this.firestore.collection(`user/${this.auth.user.uid}/Contacts`)\n      .doc(`${contactId}`).update(changes);\n    return of({ ...changes })\n  }\n  addContactToDB(contact: Contact) {\n    const contactToSubmit = { ...contact };\n    contactToSubmit['id'] = this.idGenerator();\n    console.dir(contactToSubmit);\n\n    this.firestore.collection(`user/${this.auth.user.uid}/Contacts`)\n      .doc(contactToSubmit.id)\n      .set(contactToSubmit as Contact, { merge: true });\n    return of(contactToSubmit);\n\n  }\n  deleteContactInDB(contact: Contact) {\n    this.firestore.collection(`user/${this.auth.user.uid}/Contacts`)\n      .doc(contact.id).delete();\n    return of({ ...contact })\n  }\n\n\n\n\n\n\n  getTasksFromDB(): Observable {\n\n    return this.firestore.collection(`user/${this.auth.user.uid}/Tasks`)\n      .valueChanges();\n  }\n  updateTaskInDB(task: Task) {\n    this.firestore.collection(`user/${this.auth.user.uid}/Tasks`)\n      .doc(task.id).update(task);\n    return of({ ...task })\n  }\n  addTaskInDB(task: Task) {\n    const taskToSubmit = { ...task };\n    taskToSubmit['id'] = this.idGenerator();\n    console.dir(taskToSubmit);\n\n    this.firestore.collection(`user/${this.auth.user.uid}/Tasks`)\n      .doc(taskToSubmit.id)\n      .set(taskToSubmit as Task, { merge: true });\n    return of(taskToSubmit);\n\n  }\n  deleteTaskInDB(task: Task) {\n    this.firestore.collection(`user/${this.auth.user.uid}/Tasks`)\n      .doc(task.id).delete();\n    return of({ ...task })\n  }\n\n\n\n\n\n  getNotesFromDB(): Observable {\n\n    return this.firestore.collection(`user/${this.auth.user.uid}/Notes`)\n      .valueChanges();\n  }\n  updateNoteInDB(note: Note) {\n    this.firestore.collection(`user/${this.auth.user.uid}/Notes`)\n      .doc(note.id).update(note);\n    return of({ ...note })\n  }\n  addNoteInDB(note: Note) {\n    const noteToSubmit = { ...note };\n    noteToSubmit['id'] = this.idGenerator();\n    console.dir(noteToSubmit);\n\n    this.firestore.collection(`user/${this.auth.user.uid}/Notes`)\n      .doc(noteToSubmit.id)\n      .set(noteToSubmit as Note, { merge: true });\n    return of(noteToSubmit);\n\n  }\n  deleteNoteInDB(note: Note) {\n    this.firestore.collection(`user/${this.auth.user.uid}/Notes`)\n      .doc(note.id).delete();\n    return of({ ...note })\n  }\n\n\n  idGenerator() {\n    var gen = function () {\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n    };\n    return (gen() + gen() + \"-\" + gen() + \"-\" + gen() + \"-\" + gen() + \"-\" + gen() + gen() + gen());\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/button/button.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                enccrm-button\n            \n\n            \n                styleUrls\n                ./button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                disabled\n                            \n                            \n                                size\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/button/button.component.ts:16\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/button/button.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/button/button.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'reg'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/button/button.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'regular'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/button/button.component.ts:12\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/button/button.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/button/button.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n\n@Component({\n  selector: 'enccrm-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss']\n})\nexport class ButtonComponent implements OnInit {\n\n\n  @Input() type: string = 'regular';\n  @Input() content: string = '';\n  @Input() disabled: boolean = false;\n  @Output() clicked = new EventEmitter();\n  @Input() size: string = 'reg';\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n  \n    {{ content }}\n  \n  \n    {{ content }}\n  \n\n\n    \n\n    \n                \n                    ./button.component.scss\n                \n                @import \"../../../styles/main\";\n\n.reg {\n  width: 100%;\n  @include reg-button;\n}\n\n.small {\n  @include small-button;\n}\n\n.big {\n  @include big-button;\n}\n.reg-icon {\n  width: 100%;\n  @include reg-button-icon;\n}\n\n.small-icon {\n  @include small-button-icon;\n}\n\n.big-icon {\n  @include big-button-icon;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ content }}        {{ content }}  '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'enccrm-add-contact'},{'name': 'AddNoteComponent', 'selector': 'enccrm-add-note'},{'name': 'AddTaskComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'enccrm-button'},{'name': 'ContactDetailComponent', 'selector': 'enccrm-contact-detail'},{'name': 'ContactListComponent', 'selector': 'enccrm-contact-list'},{'name': 'DashboardComponent', 'selector': 'enccrm-dashboard'},{'name': 'FormComponent', 'selector': 'enccrm-form'},{'name': 'GeneralCardComponent', 'selector': 'enccrm-general-card'},{'name': 'HeaderComponent', 'selector': 'enccrm-header'},{'name': 'LoginComponent', 'selector': 'enccrm-login'},{'name': 'ModalCardComponent', 'selector': 'enccrm-modal-card'},{'name': 'NoteDetailComponent', 'selector': 'enccrm-note-detail'},{'name': 'NoteListComponent', 'selector': 'enccrm-note-list'},{'name': 'SidenavComponent', 'selector': 'enccrm-sidenav'},{'name': 'TabComponent', 'selector': 'enccrm-tab'},{'name': 'TableComponent', 'selector': 'enccrm-table'},{'name': 'TaskDetailComponent', 'selector': 'enccrm-task-detail'},{'name': 'TasksComponent', 'selector': 'enccrm-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CardsModule.html":{"url":"modules/CardsModule.html","title":"module - CardsModule","body":"\n                   \n\n\n\n\n    Modules\n    CardsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CardsModule\n\n\n\ncluster_CardsModule_declarations\n\n\n\ncluster_CardsModule_exports\n\n\n\ncluster_CardsModule_imports\n\n\n\n\nGeneralCardComponent\n\nGeneralCardComponent\n\n\n\nCardsModule\n\nCardsModule\n\nCardsModule -->\n\nGeneralCardComponent->CardsModule\n\n\n\n\n\nModalCardComponent\n\nModalCardComponent\n\nCardsModule -->\n\nModalCardComponent->CardsModule\n\n\n\n\n\nGeneralCardComponent \n\nGeneralCardComponent \n\nGeneralCardComponent  -->\n\nCardsModule->GeneralCardComponent \n\n\n\n\n\nModalCardComponent \n\nModalCardComponent \n\nModalCardComponent  -->\n\nCardsModule->ModalCardComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nCardsModule -->\n\nMaterialModule->CardsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/cards/cards.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GeneralCardComponent\n                        \n                        \n                            ModalCardComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GeneralCardComponent\n                        \n                        \n                            ModalCardComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ModalCardComponent } from './modal-card/modal-card.component';\nimport { GeneralCardComponent } from './general-card/general-card.component';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from '@shared/material/material.module';\n\n\n\n@NgModule({\n  declarations: [\n    ModalCardComponent,\n    GeneralCardComponent\n  ],\n  imports: [\n    CommonModule,\n    MaterialModule\n  ],\n  exports: [\n    ModalCardComponent,\n    GeneralCardComponent\n  ]\n})\nexport class CardsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Contact.html":{"url":"interfaces/Contact.html","title":"interface - Contact","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Contact\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/operations/contact/models/interfaces/contact.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            age\n                                        \n                                \n                                \n                                        \n                                            birthDate\n                                        \n                                \n                                \n                                        \n                                            company\n                                        \n                                \n                                \n                                        \n                                            contactName\n                                        \n                                \n                                \n                                        \n                                            contactType\n                                        \n                                \n                                \n                                        \n                                            context\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            energyLevel\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            known\n                                        \n                                \n                                \n                                        \n                                            otherDate\n                                        \n                                \n                                \n                                        \n                                            phone\n                                        \n                                \n                                \n                                        \n                                            priority\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        age:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        birthDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        birthDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        company\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        company:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contactName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contactName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contactType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contactType:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        context\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        context:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        energyLevel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        energyLevel:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        known\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        known:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        otherDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        otherDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Day } from \"./day\";\n\nexport interface Contact {\n    id: string;\n    contactName: string;\n    email: string;\n    phone: string;\n    contactType: number; //choices\n    priority: number; //choices\n    energyLevel: number; //choices\n    context: number; //choices\n    age: number;\n    birthDate: string;\n    otherDate: string;\n    known: number;\n    company: string;\n    description: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactDetailComponent.html":{"url":"components/ContactDetailComponent.html","title":"component - ContactDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContactDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/operations/contact/components/contact-detail/contact-detail.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                enccrm-contact-detail\n            \n\n            \n                styleUrls\n                ./contact-detail.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./contact-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contact\n                            \n                            \n                                    Public\n                                contactMetricService\n                            \n                            \n                                contactTypeChoices\n                            \n                            \n                                contextKnownFrom\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                diagnosis\n                            \n                            \n                                editConceptControls\n                            \n                            \n                                editOpen\n                            \n                            \n                                energyLevels\n                            \n                            \n                                metricTemplate\n                            \n                            \n                                notePipeOptions\n                            \n                            \n                                notes$\n                            \n                            \n                                priorities\n                            \n                            \n                                rating\n                            \n                            \n                                statuses\n                            \n                            \n                                taskPipeOptions\n                            \n                            \n                                tasks$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: literal type, contactMetricService: ContactMetricService, dialogRef: MatDialogRef, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/operations/contact/components/contact-detail/contact-detail.component.ts:80\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        contactMetricService\n                                                  \n                                                        \n                                                                        ContactMetricService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/operations/contact/components/contact-detail/contact-detail.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/operations/contact/components/contact-detail/contact-detail.component.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contact\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Contact\n\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/components/contact-detail/contact-detail.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        contactMetricService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ContactMetricService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/components/contact-detail/contact-detail.component.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contactTypeChoices\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { name: ContactType[0], value: 0 },\n    { name: ContactType[1], value: 1 },\n    { name: ContactType[2], value: 2 },\n    { name: ContactType[3], value: 3 },\n    { name: ContactType[4], value: 4 },\n    { name: ContactType[5], value: 5 },\n    { name: ContactType[6], value: 6 },\n    { name: ContactType[7], value: 7 },\n    { name: ContactType[8], value: 8 },\n    { name: ContactType[9], value: 9 },\n    { name: ContactType[10], value: 10 },\n    { name: ContactType[11], value: 11 },\n    { name: ContactType[12], value: 12 },\n    { name: ContactType[13], value: 13 },\n    { name: ContactType[14], value: 14 },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/components/contact-detail/contact-detail.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contextKnownFrom\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { name: Context[0], value: 0 },\n    { name: Context[1], value: 1 },\n    { name: Context[2], value: 2 },\n    { name: Context[3], value: 3 },\n    { name: Context[4], value: 4 },\n    { name: Context[5], value: 5 },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/components/contact-detail/contact-detail.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/components/contact-detail/contact-detail.component.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        diagnosis\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/components/contact-detail/contact-detail.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editConceptControls\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormSetupModel[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/components/contact-detail/contact-detail.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/components/contact-detail/contact-detail.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        energyLevels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { name: EnergyLevel[0], value: 0 },\n    { name: EnergyLevel[1], value: 1 },\n    { name: EnergyLevel[2], value: 2 },\n    { name: EnergyLevel[3], value: 3 },\n    { name: EnergyLevel[4], value: 4 },\n    { name: EnergyLevel[5], value: 5 },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/components/contact-detail/contact-detail.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metricTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/components/contact-detail/contact-detail.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notePipeOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/components/contact-detail/contact-detail.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notes$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/components/contact-detail/contact-detail.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        priorities\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { name: Priorities[0], value: 0 },\n    { name: Priorities[1], value: 1 },\n    { name: Priorities[2], value: 2 },\n    { name: Priorities[3], value: 3 },\n    { name: Priorities[4], value: 4 },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/components/contact-detail/contact-detail.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rating\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/components/contact-detail/contact-detail.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statuses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { name: Statuses[0], value: 0 },\n    { name: Statuses[1], value: 1 },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/components/contact-detail/contact-detail.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskPipeOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/components/contact-detail/contact-detail.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tasks$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/components/contact-detail/contact-detail.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Inject, TemplateRef } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Store } from '@ngrx/store';\nimport { ContactType, Context, EnergyLevel, Priorities, Statuses } from '@operations/contact';\nimport { ContactMetricService } from '@operations/contact/services/contact-metric.service';\nimport { Contact, Task } from '@operations/index';\nimport { Note, NoteOptions } from '@operations/note';\nimport { TaskOptions } from '@operations/task';\nimport { FormSetupModel } from '@shared/models/form-setup.model';\nimport { Observable } from 'rxjs';\n\n\n@Component({\n  selector: 'enccrm-contact-detail',\n  templateUrl: './contact-detail.component.html',\n  styleUrls: ['./contact-detail.component.scss']\n})\nexport class ContactDetailComponent implements OnInit {\n\n  metricTemplate!: TemplateRef;\n  rating: number = 0;\n  diagnosis: string = '';\n\n  editOpen = false;\n  contact!: Contact;\n  tasks$: Observable | undefined;\n  notes$: Observable | undefined;\n\n\n  contactTypeChoices = [\n    { name: ContactType[0], value: 0 },\n    { name: ContactType[1], value: 1 },\n    { name: ContactType[2], value: 2 },\n    { name: ContactType[3], value: 3 },\n    { name: ContactType[4], value: 4 },\n    { name: ContactType[5], value: 5 },\n    { name: ContactType[6], value: 6 },\n    { name: ContactType[7], value: 7 },\n    { name: ContactType[8], value: 8 },\n    { name: ContactType[9], value: 9 },\n    { name: ContactType[10], value: 10 },\n    { name: ContactType[11], value: 11 },\n    { name: ContactType[12], value: 12 },\n    { name: ContactType[13], value: 13 },\n    { name: ContactType[14], value: 14 },\n  ]\n  contextKnownFrom = [\n    { name: Context[0], value: 0 },\n    { name: Context[1], value: 1 },\n    { name: Context[2], value: 2 },\n    { name: Context[3], value: 3 },\n    { name: Context[4], value: 4 },\n    { name: Context[5], value: 5 },\n  ]\n  energyLevels = [\n    { name: EnergyLevel[0], value: 0 },\n    { name: EnergyLevel[1], value: 1 },\n    { name: EnergyLevel[2], value: 2 },\n    { name: EnergyLevel[3], value: 3 },\n    { name: EnergyLevel[4], value: 4 },\n    { name: EnergyLevel[5], value: 5 },\n  ]\n  priorities = [\n    { name: Priorities[0], value: 0 },\n    { name: Priorities[1], value: 1 },\n    { name: Priorities[2], value: 2 },\n    { name: Priorities[3], value: 3 },\n    { name: Priorities[4], value: 4 },\n  ]\n  statuses = [\n    { name: Statuses[0], value: 0 },\n    { name: Statuses[1], value: 1 },\n  ]\n\n  taskPipeOptions: any;\n  notePipeOptions: any;\n\n\n  editConceptControls: FormSetupModel[] = [];\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: {\n      contact: Contact,\n      tasks: Observable,\n      notes: Observable,\n      metric: TemplateRef\n    },\n    public contactMetricService: ContactMetricService,\n    private dialogRef: MatDialogRef,\n    private store: Store\n  ) { }\n\n  ngOnInit(): void {\n    this.contact = this.data.contact;\n    this.tasks$ = this.data.tasks;\n    this.notes$ = this.data.notes;\n    this.metricTemplate = this.data.metric;\n\n    this.rating = this.contactMetricService.getContactRating([\n      +this.contact.energyLevel,\n      +this.contact.priority\n    ], 10)\n\n\n    this.editConceptControls = [\n      {\n        displayName: \"Name\",\n        controlName: \"contactName\",\n        type: \"string\",\n        required: true,\n        default: this.contact.contactName,\n      },\n      {\n        displayName: \"Contact Type\",\n        controlName: \"contactType\",\n        type: \"stringChoice\",\n        required: true,\n        default: this.contact.contactType,\n        stringChoices: this.contactTypeChoices\n      },\n      {\n        displayName: \"Know From?\",\n        controlName: \"known\",\n        type: \"stringChoice\",\n        required: true,\n        default: this.contact.known,\n        stringChoices: this.contextKnownFrom\n      },\n      {\n        displayName: \"How Important?\",\n        controlName: \"priority\",\n        type: \"stringChoiceSet\",\n        required: true,\n        default: this.contact.priority,\n        stringChoices: this.priorities\n      },\n      {\n        displayName: \"Energy Level\",\n        controlName: \"energyLevel\",\n        type: \"stringChoiceSet\",\n        required: true,\n        default: this.contact.energyLevel,\n        stringChoices: this.energyLevels\n      },\n      {\n        displayName: \"Birth Date\",\n        controlName: \"birthDate\",\n        type: \"date\",\n        required: false,\n        default: this.contact.birthDate,\n      },\n      {\n        displayName: \"Other Date\",\n        controlName: \"otherDate\",\n        type: \"date\",\n        required: false,\n        default: this.contact.otherDate,\n      },\n      {\n        displayName: \"Email\",\n        controlName: \"email\",\n        type: \"email\",\n        required: false,\n        default: this.contact.email,\n      },\n      {\n        displayName: \"Phone\",\n        controlName: \"phone\",\n        type: \"string\",\n        required: true,\n        default: this.contact.phone,\n      },\n      {\n        displayName: \"Initial Notes\",\n        controlName: \"description\",\n        type: \"longString\",\n        required: false,\n        default: this.contact.description,\n      }\n    ];\n\n    this.taskPipeOptions = [\n      TaskOptions[0],\n      TaskOptions[1],\n      TaskOptions[2]\n    ]\n\n    this.notePipeOptions = [\n      NoteOptions[0],\n      NoteOptions[1],\n      NoteOptions[2],\n      NoteOptions[3]\n    ]\n\n  }\n\n  submit(event: any) {\n    this.dialogRef.close({event})\n\n  }\n\n}\n\n    \n\n    \n          \n    Contact Details\n     0\">\n    \n      \n        Stop Editing?\n        \n          Want to Edit?\n        \n      \n      {{ contact.contactName }}\n      \n      {{ contact.description }}\n    \n\n  \n      \n        Email: {{ contact.email }}\n        Phone: {{ contact.phone }}\n        Birth Date: {{ contact.birthDate }}\n        Other Date: {{ contact.otherDate }}\n        \n        \n        \n      \n    \n      \n        \n          Edit {{ contact.contactName }}\n        \n      \n    \n  \n  \n    \n      \n        \n      \n      \n        \n        \n        No Notes Data Yet\n      \n      \n        \n        \n        No Task Data Yet\n      \n    \n  \n\n    \n\n\n    \n\n    \n                \n                    ./contact-detail.component.scss\n                \n                .header {\n  text-align: center;\n  margin-bottom: 2vmax;\n\n  &__edit-choice {\n    display: grid;\n    justify-content: end;\n\n    a {\n      color: blue;\n      text-decoration: underline;\n    }\n  }\n}\n.details {\n  width: 70vw;\n  margin: auto;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(3, 1fr);\n  grid-column-gap: 0px;\n  grid-row-gap: 0px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Contact Details     0\">                  Stop Editing?                  Want to Edit?                    {{ contact.contactName }}            {{ contact.description }}                    Email: {{ contact.email }}        Phone: {{ contact.phone }}        Birth Date: {{ contact.birthDate }}        Other Date: {{ contact.otherDate }}                                                          Edit {{ contact.contactName }}                                                                            No Notes Data Yet                                    No Task Data Yet                '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'enccrm-add-contact'},{'name': 'AddNoteComponent', 'selector': 'enccrm-add-note'},{'name': 'AddTaskComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'enccrm-button'},{'name': 'ContactDetailComponent', 'selector': 'enccrm-contact-detail'},{'name': 'ContactListComponent', 'selector': 'enccrm-contact-list'},{'name': 'DashboardComponent', 'selector': 'enccrm-dashboard'},{'name': 'FormComponent', 'selector': 'enccrm-form'},{'name': 'GeneralCardComponent', 'selector': 'enccrm-general-card'},{'name': 'HeaderComponent', 'selector': 'enccrm-header'},{'name': 'LoginComponent', 'selector': 'enccrm-login'},{'name': 'ModalCardComponent', 'selector': 'enccrm-modal-card'},{'name': 'NoteDetailComponent', 'selector': 'enccrm-note-detail'},{'name': 'NoteListComponent', 'selector': 'enccrm-note-list'},{'name': 'SidenavComponent', 'selector': 'enccrm-sidenav'},{'name': 'TabComponent', 'selector': 'enccrm-tab'},{'name': 'TableComponent', 'selector': 'enccrm-table'},{'name': 'TaskDetailComponent', 'selector': 'enccrm-task-detail'},{'name': 'TasksComponent', 'selector': 'enccrm-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ContactDetailTranslatorPipe.html":{"url":"pipes/ContactDetailTranslatorPipe.html","title":"pipe - ContactDetailTranslatorPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ContactDetailTranslatorPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/contact-detail-translator.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        contactDetailTranslator\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number, valueOption: string, pipeType: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/pipes/contact-detail-translator.pipe.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    valueOption\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pipeType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        imageOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    contactType: [\n      'group',\n      'family_restroom',\n      'family_restroom',\n      'family_restroom',\n      'family_restroom', \n      'favorite_border',\n      'baby_changing_station',\n      'family_restroom',\n      'family_restroom',\n      'family_restroom',\n      'elderly',\n      'family_restroom',\n      'family_restroom',\n      'work_outline',\n      'person_outline'\n    ],\n    energyLevel:'bolt',\n    priority:'priority_high',\n    known: [\n      'house',\n      'business',\n      'attractions',\n      'maps_home_work',\n      'school',\n      'volunteer_activism'\n    ],\n    taskType:[\n      'local_phone',\n      'meeting_room',\n      'smartphone',\n      'mail'\n    ],\n    noteType:[\n      'psychology',\n      'local_phone',\n      'meeting_room',\n      'smartphone',\n      'help_center'\n    ]\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/pipes/contact-detail-translator.pipe.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { ContactType, EnergyLevel, Priorities, Statuses, ContactOptions, Context } from '@operations/contact';\nimport { NoteOptions, NoteType } from '@operations/note';\nimport { TaskOptions, TaskType } from '@operations/task';\n\n@Pipe({\n  name: 'contactDetailTranslator'\n})\nexport class ContactDetailTranslatorPipe implements PipeTransform {\n\n  imageOptions = {\n    contactType: [\n      'group',\n      'family_restroom',\n      'family_restroom',\n      'family_restroom',\n      'family_restroom', \n      'favorite_border',\n      'baby_changing_station',\n      'family_restroom',\n      'family_restroom',\n      'family_restroom',\n      'elderly',\n      'family_restroom',\n      'family_restroom',\n      'work_outline',\n      'person_outline'\n    ],\n    energyLevel:'bolt',\n    priority:'priority_high',\n    known: [\n      'house',\n      'business',\n      'attractions',\n      'maps_home_work',\n      'school',\n      'volunteer_activism'\n    ],\n    taskType:[\n      'local_phone',\n      'meeting_room',\n      'smartphone',\n      'mail'\n    ],\n    noteType:[\n      'psychology',\n      'local_phone',\n      'meeting_room',\n      'smartphone',\n      'help_center'\n    ]\n  }\n  \n\n  transform(value: number, valueOption: string, pipeType:string): string {\n  if(pipeType === 'contact') { \n    switch (valueOption) {\n\n      case ContactOptions[0]:\n        return `${ContactType[value]} ${this.imageOptions.contactType[value]} `;\n      case ContactOptions[1]:\n        let energyHTML = `${EnergyLevel[value]}`;\n        for(let i = 0; i${this.imageOptions.energyLevel}`\n        return energyHTML;\n      case ContactOptions[2]:\n        return `${Statuses[value]}`;\n      case ContactOptions[3]:\n        let priorityHTML = `${Priorities[value]}`;\n        for(let i = 0; i${this.imageOptions.priority}`\n        return priorityHTML;\n      case ContactOptions[4]:\n        return `${Context[value]} ${this.imageOptions.known[value]} `;\n    }\n  } else if(pipeType === 'task') {\n    switch (valueOption) {\n\n      case TaskOptions[0]:\n        return `${TaskType[value]} ${this.imageOptions.taskType[value]} `;\n      case TaskOptions[1]:\n        return `${Statuses[value]}`;\n      case TaskOptions[2]:\n        let priorityHTML = `${Priorities[value]}`;\n        for(let i = 0; i${this.imageOptions.priority}`\n        return priorityHTML;\n    }\n  } else {\n      switch (valueOption) {\n        case NoteOptions[0]:\n          return `${NoteType[value]} ${this.imageOptions.noteType[value]} `;\n        case NoteOptions[1]:\n          return `${Statuses[value]}`;\n        case NoteOptions[2]:\n          let priorityHTML = `${Priorities[value]}`;\n          for(let i = 0; i${this.imageOptions.priority}`\n          return priorityHTML;\n      }\n  }\n    return '';\n  } \n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactEffects.html":{"url":"injectables/ContactEffects.html","title":"injectable - ContactEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ContactEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/operations/contact/state/contacts.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addContacts$\n                            \n                            \n                                deleteContacts$\n                            \n                            \n                                loadContacts$\n                            \n                            \n                                updateContacts$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, backend: BackendService)\n                    \n                \n                        \n                            \n                                Defined in src/app/operations/contact/state/contacts.effects.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backend\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addContacts$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(fromContactAction.contactActions.addContact),\n      concatMap(action => {\n\n        return this.backend.addContactToDB(action.contact).pipe(\n          map((contact: Contact) => fromContactAction.contactActions.addContactSuccess({ contact }))\n        )\n      }),\n      catchError(() => EMPTY)\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/state/contacts.effects.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteContacts$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(fromContactAction.contactActions.deleteContact),\n      concatMap((action) => {\n        return this.backend.deleteContactInDB(action.contact).pipe(\n          map((contact: Contact) => fromContactAction.contactActions.deleteContactSuccess({ contact }))\n        )\n      }),\n      catchError(error => of(fromContactAction.contactActions.deleteContactFail({ error })))\n   )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/state/contacts.effects.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadContacts$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n\n    this.actions$.pipe(\n      ofType(fromContactAction.contactActions.loadContacts),\n      concatMap(() => {\n        return this.backend.getContactsFromDB().pipe(\n          map((contacts: Contact[]) => fromContactAction.contactActions.loadContactSuccess({ contacts }))\n        )\n      }),\n      catchError(error => of(fromContactAction.contactActions.loadContactsFail({ error })))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/state/contacts.effects.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateContacts$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(fromContactAction.contactActions.updateContact),\n      concatMap((action) => \n         this.backend.updateContactInDB(action.contact.id, action.contact.changes)\n      ),\n    ),\n    {dispatch: false}\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/state/contacts.effects.ts:42\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\n\nimport { catchError, concatMap, map } from 'rxjs/operators';\n\nimport * as fromContactAction from './contact.actions';\nimport { BackendService } from '@core/services/backend.service';\nimport { Contact } from '@operations/contact/models/interfaces/contact';\nimport { EMPTY, of } from 'rxjs';\n\n\n@Injectable()\nexport class ContactEffects {\n\n\n  loadContacts$ = createEffect(() =>\n\n    this.actions$.pipe(\n      ofType(fromContactAction.contactActions.loadContacts),\n      concatMap(() => {\n        return this.backend.getContactsFromDB().pipe(\n          map((contacts: Contact[]) => fromContactAction.contactActions.loadContactSuccess({ contacts }))\n        )\n      }),\n      catchError(error => of(fromContactAction.contactActions.loadContactsFail({ error })))\n    )\n  );\n\n  addContacts$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(fromContactAction.contactActions.addContact),\n      concatMap(action => {\n\n        return this.backend.addContactToDB(action.contact).pipe(\n          map((contact: Contact) => fromContactAction.contactActions.addContactSuccess({ contact }))\n        )\n      }),\n      catchError(() => EMPTY)\n    )\n  );\n\n  updateContacts$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(fromContactAction.contactActions.updateContact),\n      concatMap((action) => \n         this.backend.updateContactInDB(action.contact.id, action.contact.changes)\n      ),\n    ),\n    {dispatch: false}\n  );\n\n  deleteContacts$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(fromContactAction.contactActions.deleteContact),\n      concatMap((action) => {\n        return this.backend.deleteContactInDB(action.contact).pipe(\n          map((contact: Contact) => fromContactAction.contactActions.deleteContactSuccess({ contact }))\n        )\n      }),\n      catchError(error => of(fromContactAction.contactActions.deleteContactFail({ error })))\n   )\n  ); \n\n\n  constructor(private actions$: Actions, private backend: BackendService) { }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactListComponent.html":{"url":"components/ContactListComponent.html","title":"component - ContactListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContactListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/operations/contact/components/contacts/contacts.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                enccrm-contact-list\n            \n\n            \n                styleUrls\n                ./contacts.component.scss\n            \n\n\n            \n                template\n                \n  Contact List\n\n\n    \n      \n        \n          Contact Types\n          \n            {{type}}\n          \n        \n         0; else noData\"\n          [data]=\"contactsRetrieved\"\n          [columns]=\"columnsForTable\"\n          [displayNames]=\"columnHeaderNames\"\n          [pipesNeeded]=\"pipeOptions\"\n          [pipeType]=\"'contact'\"\n          [linksNeeded]=\"['contactName']\"\n          (onZoom)=\"detailContact($event)\"\n        >\n        No Data Yet\n      \n      \n\n\n\n      \n          Friendship Rating:\n            \n                {{rating}}/100\n                {{diagnosis}}\n            \n      \n\n      \n          Family Member Rating:\n          \n            {{rating}}/100\n            {{diagnosis}}\n          \n      \n\n      \n          Network Value Rating:\n          \n              {{rating}}/100\n              {{diagnosis}}\n          \n      \n\n      \n        Potential Friendship Rating:\n          \n            {{rating}}/100\n            {{diagnosis}}\n          \n    \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                acquaintanceMetric\n                            \n                            \n                                columnHeaderNames\n                            \n                            \n                                columnsForTable\n                            \n                            \n                                contacts$\n                            \n                            \n                                contactsRetrieved\n                            \n                            \n                                contactsRetrievedSaved\n                            \n                            \n                                contactsRetrievedSub\n                            \n                            \n                                contactTypeFilter\n                            \n                            \n                                contactTypes\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                familyMetric\n                            \n                            \n                                    Public\n                                friendMetric\n                            \n                            \n                                    Public\n                                nonRelationMetric\n                            \n                            \n                                pipeOptions\n                            \n                            \n                                    Private\n                                subs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                contactFilter\n                            \n                            \n                                deleteContactInDB\n                            \n                            \n                                detailContact\n                            \n                            \n                                getRelatedTemplateReference\n                            \n                            \n                                loadStateThenContacts\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/operations/contact/components/contacts/contacts.component.ts:114\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        contactFilter\n                        \n                    \n                \n            \n            \n                \ncontactFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/operations/contact/components/contacts/contacts.component.ts:206\n                \n            \n\n\n            \n                \n                    Reacts to user contact type filtering on UI\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteContactInDB\n                        \n                    \n                \n            \n            \n                \ndeleteContactInDB(event: fromOperations.Contact)\n                \n            \n\n\n            \n                \n                    Defined in src/app/operations/contact/components/contacts/contacts.component.ts:258\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                fromOperations.Contact\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        detailContact\n                        \n                    \n                \n            \n            \n                \ndetailContact(event: fromOperations.Contact)\n                \n            \n\n\n            \n                \n                    Defined in src/app/operations/contact/components/contacts/contacts.component.ts:218\n                \n            \n\n\n            \n                \n                    Launches a modal showing more details of the contact clicked from the table.\nThe data passed to the modal include notes, tasks, and metrics related to the contact.\nThe modal will allow editing of the contact, updating upon close of the modal.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                fromOperations.Contact\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        (Contact) a reference to the contact clicked on in the table\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRelatedTemplateReference\n                        \n                    \n                \n            \n            \n                \ngetRelatedTemplateReference(contactType: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/operations/contact/components/contacts/contacts.component.ts:245\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    contactType\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        enum indexes on ContactType enum\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HTMLElement\n\n                    \n                    \n                        HTMLElement the applicable template reference\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadStateThenContacts\n                        \n                    \n                \n            \n            \n                \nloadStateThenContacts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/operations/contact/components/contacts/contacts.component.ts:190\n                \n            \n\n\n            \n                \n                    Gathers state from store and sets it up contact data for component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/operations/contact/components/contacts/contacts.component.ts:262\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/operations/contact/components/contacts/contacts.component.ts:178\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        acquaintanceMetric\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('acquaintanceMetric', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/components/contacts/contacts.component.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columnHeaderNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/components/contacts/contacts.component.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columnsForTable\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/components/contacts/contacts.component.ts:105\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contacts$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/components/contacts/contacts.component.ts:114\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contactsRetrieved\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Contact[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/components/contacts/contacts.component.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contactsRetrievedSaved\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Contact[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/components/contacts/contacts.component.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contactsRetrievedSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/components/contacts/contacts.component.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contactTypeFilter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/components/contacts/contacts.component.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contactTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/components/contacts/contacts.component.ts:109\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/components/contacts/contacts.component.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        familyMetric\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('familyMetric', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/components/contacts/contacts.component.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        friendMetric\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('friendMetric', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/components/contacts/contacts.component.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        nonRelationMetric\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('nonRelationMetric', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/components/contacts/contacts.component.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pipeOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/components/contacts/contacts.component.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SubSink\n\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/contact/components/contacts/contacts.component.ts:99\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, TemplateRef, ViewChild, ViewChildren } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Update } from '@ngrx/entity';\nimport { Store } from '@ngrx/store';\nimport { Contact, ContactOptions, ContactType } from '@operations/contact';\n\nimport * as fromOperations from '@operations/index';\nimport { Note, Task } from '@operations/index';\nimport { selectNotes } from '@operations/note/state';\nimport { taskActions } from '@operations/task/state';\nimport { selectTasks } from '@operations/task/state/selectors/task.selectors';\nimport * as moment from 'moment';\nimport { Observable, of, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SubSink } from 'subsink';\nimport * as fromContactState from '../../state/index';\nimport { ContactDetailComponent } from '../contact-detail/contact-detail.component';\n\n\n@Component({\n  selector: 'enccrm-contact-list',\n  template: `\n          \n            Contact List\n          \n          \n              \n                 \n                  \n                    Contact Types\n                    \n                      {{type}}\n                    \n                  \n                   0; else noData\"\n                    [data]=\"contactsRetrieved\"\n                    [columns]=\"columnsForTable\"\n                    [displayNames]=\"columnHeaderNames\"\n                    [pipesNeeded]=\"pipeOptions\"\n                    [pipeType]=\"'contact'\"\n                    [linksNeeded]=\"['contactName']\"\n                    (onZoom)=\"detailContact($event)\"\n                  >\n                  No Data Yet\n                \n                 \n\n            \n\n                \n                    Friendship Rating:\n                      \n                          {{rating}}/100\n                          {{diagnosis}}\n                      \n                 \n\n                \n                    Family Member Rating:\n                    \n                      {{rating}}/100\n                      {{diagnosis}}\n                    \n                \n\n                \n                    Network Value Rating:\n                    \n                        {{rating}}/100\n                        {{diagnosis}}\n                    \n                \n\n                \n                  Potential Friendship Rating:\n                    \n                      {{rating}}/100\n                      {{diagnosis}}\n                    \n              \n          \n  `,\n  styleUrls: ['./contacts.component.scss']\n})\nexport class ContactListComponent implements OnInit {\n\n  //  These will be used to pass custom html into the contact detail modal\n  @ViewChild(\"friendMetric\", { static: true })\n  public friendMetric!: HTMLElement;\n  @ViewChild(\"familyMetric\", { static: true })\n  public familyMetric!: HTMLElement;\n  @ViewChild(\"nonRelationMetric\", { static: true })\n  public nonRelationMetric!: HTMLElement;\n  @ViewChild(\"acquaintanceMetric\", { static: true })\n  public acquaintanceMetric!: HTMLElement;\n\n  private subs:SubSink;\n  contactsRetrievedSub: Subscription;\n  contactsRetrieved: Contact[] = [];\n  contactsRetrievedSaved: Contact[] = [];\n\n\n  columnsForTable: string[];\n\n  columnHeaderNames: string[];\n\n  contactTypes: string[];\n\n  pipeOptions: string[];\n  contactTypeFilter: FormControl;\n\n  contacts$: Observable | undefined;\n\n  constructor(private store: Store, public dialog: MatDialog) {\n\n    this.subs = new SubSink();\n    this.contactsRetrievedSub = new Subscription;\n\n    this.contactTypes = [\n      ContactType[0],\n      ContactType[1],\n      ContactType[2],\n      ContactType[3],\n      ContactType[4],\n      ContactType[5],\n      ContactType[6],\n      ContactType[7],\n      ContactType[8],\n      ContactType[9],\n      ContactType[10],\n      ContactType[11],\n      ContactType[12],\n      ContactType[13],\n      ContactType[14]\n    ]\n\n    this.contactTypeFilter = new FormControl(this.contactTypes);\n    this.pipeOptions = [\n      ContactOptions[0],\n      ContactOptions[1],\n      ContactOptions[2],\n      ContactOptions[3],\n      ContactOptions[4]\n    ]\n    this.contactTypeFilter = new FormControl;\n\n    this.columnsForTable = [\n      'contactName',\n      'email',\n      'phone',\n      'contactType', \n      'priority', \n      'energyLevel', \n      'age',\n      'birthDate',\n      'otherDate',\n      'known',\n      'description'\n    ];\n    this.columnHeaderNames = [\n      'Name',\n      'Email',\n      'Phone',\n      'Contact Type', \n      'Priority', \n      'Energy Level', \n      'Age',\n      'Birth Date',\n      'Other Date',\n      'Known From', \n      'Description'\n    ];\n\n  }\n\n  ngOnInit(): void {\n\n    this.loadStateThenContacts();\n\n    //setup Filter\n    this.subs.sink = this.contactTypeFilter.valueChanges.subscribe(() => this.contactFilter());\n\n  }\n\n  /**\n   * Gathers state from store and sets it up contact data for component\n   */\n  loadStateThenContacts(): void {\n    this.store.dispatch(fromContactState.contactActions.loadContacts());\n    this.store.dispatch(taskActions.loadTasks());\n    \n    this.contacts$ = this.store.select(fromContactState.selectContacts);\n\n    //gathering data for table display, and adding age calculation dynamically\n    this.subs.sink = this.contacts$.subscribe(data => {\n      this.contactsRetrieved = data.map(d => ({...d, age: moment(new Date()).diff(moment(new Date(d.birthDate)), 'years')}));\n      this.contactsRetrievedSaved = [...data];\n    });\n  }\n\n  /**\n   * Reacts to user contact type filtering on UI\n   */\n  contactFilter() {\n    this.contactsRetrieved = this.contactsRetrievedSaved.filter(d => this.contactTypeFilter.value.includes(ContactType[+d.contactType]));\n\n  }\n\n  /**\n   * \n   * Launches a modal showing more details of the contact clicked from the table.\n   * The data passed to the modal include notes, tasks, and metrics related to the contact.\n   * The modal will allow editing of the contact, updating upon close of the modal.\n   * @param event (Contact) a reference to the contact clicked on in the table\n   */\n  detailContact(event: fromOperations.Contact):void {\n    const dialogRef = this.dialog.open(ContactDetailComponent, {\n      panelClass: 'detail-modal',\n      data: {\n        contact: event,\n        tasks: this.store.select(selectTasks).pipe(map((tasks: Task[]) => tasks.filter(task => task.contact.value === event.id))),\n        notes: this.store.select(selectNotes).pipe(map((notes: Note[]) => notes.filter(note => note.contact.value === event.id))),\n        metric: this.getRelatedTemplateReference(+event.contactType)\n\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n        const update: Update = {\n          id: event.id,\n          changes: event\n        }\n        console.log({result});\n        this.store.dispatch(fromContactState.contactActions.updateContact({contact: update}));\n    });\n  }\n\n  /**\n   * \n   * @param contactType enum indexes on ContactType enum\n   * @returns HTMLElement the applicable template reference\n   */\n  getRelatedTemplateReference(contactType: number): HTMLElement {\n    switch (contactType) {\n      case 13:\n        return this.nonRelationMetric\n      case 0:\n        return this.friendMetric\n      case 14:\n        return this.acquaintanceMetric\n      default:\n        return this.familyMetric\n    }\n  }\n\n  deleteContactInDB(event: fromOperations.Contact) {\n    console.log(\"Need to implement\");\n  }\n\n  ngOnDestroy() {\n    this.subs.unsubscribe()\n  }\n\n\n}\n\n    \n\n\n    \n                \n                    ./contacts.component.scss\n                \n                .container {\n    height: 90%;\n    overflow: auto;\n}\n\n.metric-detail {\n    display: flex;\n    justify-content: left;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Contact List                            Contact Types                      {{type}}                           0; else noData\"          [data]=\"contactsRetrieved\"          [columns]=\"columnsForTable\"          [displayNames]=\"columnHeaderNames\"          [pipesNeeded]=\"pipeOptions\"          [pipeType]=\"\\'contact\\'\"          [linksNeeded]=\"[\\'contactName\\']\"          (onZoom)=\"detailContact($event)\"        >        No Data Yet                            Friendship Rating:                            {{rating}}/100                {{diagnosis}}                                  Family Member Rating:                      {{rating}}/100            {{diagnosis}}                                Network Value Rating:                        {{rating}}/100              {{diagnosis}}                              Potential Friendship Rating:                      {{rating}}/100            {{diagnosis}}              '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'enccrm-add-contact'},{'name': 'AddNoteComponent', 'selector': 'enccrm-add-note'},{'name': 'AddTaskComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'enccrm-button'},{'name': 'ContactDetailComponent', 'selector': 'enccrm-contact-detail'},{'name': 'ContactListComponent', 'selector': 'enccrm-contact-list'},{'name': 'DashboardComponent', 'selector': 'enccrm-dashboard'},{'name': 'FormComponent', 'selector': 'enccrm-form'},{'name': 'GeneralCardComponent', 'selector': 'enccrm-general-card'},{'name': 'HeaderComponent', 'selector': 'enccrm-header'},{'name': 'LoginComponent', 'selector': 'enccrm-login'},{'name': 'ModalCardComponent', 'selector': 'enccrm-modal-card'},{'name': 'NoteDetailComponent', 'selector': 'enccrm-note-detail'},{'name': 'NoteListComponent', 'selector': 'enccrm-note-list'},{'name': 'SidenavComponent', 'selector': 'enccrm-sidenav'},{'name': 'TabComponent', 'selector': 'enccrm-tab'},{'name': 'TableComponent', 'selector': 'enccrm-table'},{'name': 'TaskDetailComponent', 'selector': 'enccrm-task-detail'},{'name': 'TasksComponent', 'selector': 'enccrm-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactMetricService.html":{"url":"injectables/ContactMetricService.html","title":"injectable - ContactMetricService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ContactMetricService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/operations/contact/services/contact-metric.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getContactRating\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/operations/contact/services/contact-metric.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getContactRating\n                        \n                    \n                \n            \n            \n                \ngetContactRating(factors: number[], potentialRating: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/operations/contact/services/contact-metric.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    factors\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    potentialRating\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactMetricService {\n\n  constructor() { }\n\n  getContactRating(factors:number[], potentialRating:number) {\n    return (factors.reduce((a,b) => a+b, 0) / potentialRating)*100;\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContactRoutingModule.html":{"url":"modules/ContactRoutingModule.html","title":"module - ContactRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ContactRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/operations/contact/contacts.routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { AddContactComponent } from \"./components/add-contact/add-contact.component\";\nimport { ContactListComponent } from \"./components/contacts/contacts.component\";\n\n\nconst routes: Routes = [\n    { path: '', component: ContactListComponent },\n    { path: 'contact-list', component: ContactListComponent },\n    { path: 'contact-add', component: AddContactComponent }\n\n]\n\n\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ContactRoutingModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContactState.html":{"url":"interfaces/ContactState.html","title":"interface - ContactState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ContactState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/operations/contact/state/contact.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                        \n                                            loading\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityState } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\nimport * as fromOperations from '@operations/index';\nimport * as fromContactAction from './contact.actions';\n\nexport const contactFeatureKey = 'contact';\n\nexport interface ContactState extends EntityState {\n    loaded: boolean;\n    loading: boolean;\n    error: any;\n}\n\nexport const contactAdapter = createEntityAdapter();\n\nconst initialContactState = contactAdapter.getInitialState({\n    loaded: false,\n    loading: false,\n    error: null,\n})\n\n \n\n\nexport const contactReducer = createReducer(\n    initialContactState,\n    //load\n    on(fromContactAction.contactActions.loadContactSuccess, (state, action) => {\n        return contactAdapter.setAll(action.contacts, {\n            ...state,\n            loaded: true,\n            loading: false\n        });\n    }),\n    on(fromContactAction.contactActions.loadContactsFail, (state, action) => {\n        return {\n            ...state,\n            loaded: true,\n            loading: false,\n            error: action.error\n        }\n    }),\n\n    //add\n    on(fromContactAction.contactActions.addContactSuccess, (state, action) => {\n        return contactAdapter.addOne(action.contact, state)\n    }),\n    on(fromContactAction.contactActions.addContactFail, (state, action) => {\n        return { ...state, error: action.error }\n    }), \n\n    //update\n     on(fromContactAction.contactActions.updateContact, (state,action) => {\n       return contactAdapter.updateOne(action.contact,state)\n     }),\n\n    //delete\n    // on(fromContactAction.contactActions.deleteContactSuccess, (state,action) => {\n    //     return contactAdapter.removeOne(action.contact,state)\n    // }),\n    // on(fromContactAction.contactActions.deleteContactFail, (state,action) => {\n    //     return {...state,error:action.error}\n    // })\n)\n\nexport const { selectAll } = contactAdapter.getSelectors();\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContactsModule.html":{"url":"modules/ContactsModule.html","title":"module - ContactsModule","body":"\n                   \n\n\n\n\n    Modules\n    ContactsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ContactsModule\n\n\n\ncluster_ContactsModule_imports\n\n\n\ncluster_ContactsModule_declarations\n\n\n\n\nAddContactComponent\n\nAddContactComponent\n\n\n\nContactsModule\n\nContactsModule\n\nContactsModule -->\n\nAddContactComponent->ContactsModule\n\n\n\n\n\nContactDetailComponent\n\nContactDetailComponent\n\nContactsModule -->\n\nContactDetailComponent->ContactsModule\n\n\n\n\n\nContactListComponent\n\nContactListComponent\n\nContactsModule -->\n\nContactListComponent->ContactsModule\n\n\n\n\n\nRatingColorPipe\n\nRatingColorPipe\n\nContactsModule -->\n\nRatingColorPipe->ContactsModule\n\n\n\n\n\nContactRoutingModule\n\nContactRoutingModule\n\nContactsModule -->\n\nContactRoutingModule->ContactsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nContactsModule -->\n\nSharedModule->ContactsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/operations/contact/contacts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddContactComponent\n                        \n                        \n                            ContactDetailComponent\n                        \n                        \n                            ContactListComponent\n                        \n                        \n                            RatingColorPipe\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AddContactComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ContactRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { SharedModule } from '@shared/shared.module';\nimport { AddContactComponent } from './components/add-contact/add-contact.component';\nimport { ContactDetailComponent } from './components/contact-detail/contact-detail.component';\nimport { ContactListComponent } from './components/contacts/contacts.component';\nimport { ContactRoutingModule } from './contacts.routing.module';\nimport * as fromConceptReducer from './state/index';\nimport { RatingColorPipe } from './pipes/rating-color.pipe';\n\n\n@NgModule({\n  declarations: [\n    ContactListComponent,\n    AddContactComponent,\n    ContactDetailComponent,\n    RatingColorPipe\n  ],\n  imports: [\n    SharedModule,\n    ContactRoutingModule,\n    EffectsModule.forFeature([fromConceptReducer.ContactEffects]),\n  ],\n  entryComponents: [\n    AddContactComponent\n  ]\n})\nexport class ContactsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nLoginComponent->CoreModule\n\n\n\n\n\nLayoutModule \n\nLayoutModule \n\nLayoutModule  -->\n\nCoreModule->LayoutModule \n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nCoreModule->LoginComponent \n\n\n\n\n\nLayoutModule\n\nLayoutModule\n\nCoreModule -->\n\nLayoutModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LayoutModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LayoutModule\n                        \n                        \n                            LoginComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './auth/login/login.component';\nimport { LayoutModule } from './layout/layout.module';\n\n\n\n@NgModule({\n  declarations: [\n    LoginComponent\n  ],\n  imports: [\n    CommonModule,\n    LayoutModule\n  ],\n  exports: [LayoutModule, LoginComponent]\n})\nexport class CoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/analytics/components/dashboard/dashboard.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                enccrm-dashboard\n            \n\n            \n                styleUrls\n                ./dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                barChartColors\n                            \n                            \n                                    Public\n                                barChartData\n                            \n                            \n                                barChartLabels\n                            \n                            \n                                    Public\n                                barChartLegend\n                            \n                            \n                                    Public\n                                barChartType\n                            \n                            \n                                    Public\n                                chartColors\n                            \n                            \n                                contactDistribution\n                            \n                            \n                                contacts\n                            \n                            \n                                contactSub\n                            \n                            \n                                highestRatedContact\n                            \n                            \n                                highestRatedFamilyMember\n                            \n                            \n                                lowestRatedContact\n                            \n                            \n                                mostDistantFamilyMember\n                            \n                            \n                                mostDistantFriend\n                            \n                            \n                                mostImportantFriend\n                            \n                            \n                                    Public\n                                pieData\n                            \n                            \n                                    Public\n                                pieLabels\n                            \n                            \n                                    Public\n                                pieLegend\n                            \n                            \n                                    Public\n                                pieOptions\n                            \n                            \n                                    Public\n                                pieType\n                            \n                            \n                                topEnvironment\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildCharts\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(metricService: MetricsService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/analytics/components/dashboard/dashboard.component.ts:71\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        metricService\n                                                  \n                                                        \n                                                                        MetricsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/analytics/components/dashboard/dashboard.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buildCharts\n                        \n                    \n                \n            \n            \n                \nbuildCharts(contactDistribution: literal type[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/analytics/components/dashboard/dashboard.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contactDistribution\n                                    \n                                            literal type[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/analytics/components/dashboard/dashboard.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        barChartColors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color[]\n\n                    \n                \n                \n                    \n                        Default value : [{ backgroundColor: ['\t#BDB76B', '#FF4500'] }]\n                    \n                \n                    \n                        \n                                Defined in src/app/analytics/components/dashboard/dashboard.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        barChartData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ChartDataSets[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    { data: [], label: 'Contact Volume', stack: 'a' },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/analytics/components/dashboard/dashboard.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        barChartLabels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/analytics/components/dashboard/dashboard.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        barChartLegend\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/analytics/components/dashboard/dashboard.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        barChartType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ChartType\n\n                    \n                \n                \n                    \n                        Default value : 'horizontalBar'\n                    \n                \n                    \n                        \n                                Defined in src/app/analytics/components/dashboard/dashboard.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chartColors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      backgroundColor: [\n        '#FFF8DC',\n        '#FFEBCD',\n        '#FFE4C4',\n        '#FFDEAD',\n        '#F5DEB3',\n        '#DEB887',\n        '#D2B48C',\n        '#BC8F8F',\n        '#F4A460',\n        '#DAA520',\n        '#CD853F',\n        '#D2691E',\n        '#8B4513',\n        '#A0522D',\n        '#A52A2A'\n      ]\n    }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/analytics/components/dashboard/dashboard.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contactDistribution\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/analytics/components/dashboard/dashboard.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contacts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Contact[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/analytics/components/dashboard/dashboard.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contactSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/analytics/components/dashboard/dashboard.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        highestRatedContact\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Contact\n\n                    \n                \n                    \n                        \n                                Defined in src/app/analytics/components/dashboard/dashboard.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        highestRatedFamilyMember\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Contact\n\n                    \n                \n                    \n                        \n                                Defined in src/app/analytics/components/dashboard/dashboard.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lowestRatedContact\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Contact\n\n                    \n                \n                    \n                        \n                                Defined in src/app/analytics/components/dashboard/dashboard.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mostDistantFamilyMember\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Contact\n\n                    \n                \n                    \n                        \n                                Defined in src/app/analytics/components/dashboard/dashboard.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mostDistantFriend\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Contact\n\n                    \n                \n                    \n                        \n                                Defined in src/app/analytics/components/dashboard/dashboard.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mostImportantFriend\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Contact\n\n                    \n                \n                    \n                        \n                                Defined in src/app/analytics/components/dashboard/dashboard.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pieData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SingleDataSet\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/analytics/components/dashboard/dashboard.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pieLabels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Label[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/analytics/components/dashboard/dashboard.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pieLegend\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/analytics/components/dashboard/dashboard.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pieOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ChartOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    responsive: true,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/analytics/components/dashboard/dashboard.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pieType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ChartType\n\n                    \n                \n                \n                    \n                        Default value : 'pie'\n                    \n                \n                    \n                        \n                                Defined in src/app/analytics/components/dashboard/dashboard.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        topEnvironment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/analytics/components/dashboard/dashboard.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { MetricsService } from '@analytics/services/metrics.service';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { selectContacts } from '@operations/index';\nimport { Contact, ContactType } from '@operations/contact';\nimport { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\nimport { SingleDataSet, Label, monkeyPatchChartJsLegend, monkeyPatchChartJsTooltip, Color } from 'ng2-charts';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'enccrm-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  @Input() data: any;\n  contacts: Contact[] = [];\n\n  contactSub!: Subscription;\n\n  topEnvironment!: string;\n  mostImportantFriend!: Contact;\n  mostDistantFriend!: Contact;\n  highestRatedContact!: Contact;\n  lowestRatedContact!: Contact;\n  contactDistribution!: { cType: number, value: number }[];\n  highestRatedFamilyMember!: Contact;\n  mostDistantFamilyMember!: Contact;\n\n\n  public barChartType: ChartType = 'horizontalBar';\n  public barChartLegend = true;\n\n  public barChartData: ChartDataSets[] = [\n    { data: [], label: 'Contact Volume', stack: 'a' },\n  ];\n  barChartLabels: string[] = [];\n\n  // Pie\n  public pieOptions: ChartOptions = {\n    responsive: true,\n  };\n  public pieLabels: Label[] = [];\n  public pieData: SingleDataSet = [];\n  public pieType: ChartType = 'pie';\n  public pieLegend = true;\n\n  public chartColors: Color[] = [\n    {\n      backgroundColor: [\n        '#FFF8DC',\n        '#FFEBCD',\n        '#FFE4C4',\n        '#FFDEAD',\n        '#F5DEB3',\n        '#DEB887',\n        '#D2B48C',\n        '#BC8F8F',\n        '#F4A460',\n        '#DAA520',\n        '#CD853F',\n        '#D2691E',\n        '#8B4513',\n        '#A0522D',\n        '#A52A2A'\n      ]\n    }\n  ]\n\n  public barChartColors: Color[] = [{ backgroundColor: ['\t#BDB76B', '#FF4500'] }];\n\n  constructor(private metricService: MetricsService, private store: Store) {\n    monkeyPatchChartJsTooltip();\n    monkeyPatchChartJsLegend();\n  }\n\n  ngOnInit(): void {\n    this.contactSub = this.store.select(selectContacts).subscribe(contacts => {\n      this.contacts = contacts\n\n      this.topEnvironment = this.metricService\n        .getMostFrequentEnvironment(this.contacts.filter(c => c.contactType === 0));\n      this.mostImportantFriend = this.metricService\n        .getHighestofSortedContacts(this.contacts.filter(c => c.contactType === 0));\n      this.mostDistantFriend = this.metricService\n        .getLowestofSortedContacts(this.contacts.filter(c => c.contactType === 0));\n      this.highestRatedContact = this.metricService\n        .getHighestofSortedContacts(this.contacts);\n      this.lowestRatedContact = this.metricService\n        .getLowestofSortedContacts(this.contacts);\n      this.highestRatedFamilyMember = this.metricService\n        .getHighestofSortedContacts(this.contacts.filter(c => ![0, 14, 13].includes(c.contactType)));\n      this.mostDistantFamilyMember = this.metricService\n        .getLowestofSortedContacts(this.contacts.filter(c => ![0, 14, 13].includes(c.contactType)));\n\n      this.contactDistribution = this.metricService\n        .getContactDistribution(this.contacts)\n\n      this.buildCharts(this.contactDistribution);\n\n\n    });\n  }\n\n  buildCharts(contactDistribution: { cType: number, value: number }[]) {\n    contactDistribution.forEach(distribution => {\n      this.pieLabels.push(ContactType[distribution.cType]);\n      this.pieData.push(distribution.value);\n\n      this.barChartLabels.push(ContactType[distribution.cType]);\n      this.barChartData[0].data?.push(distribution.value);\n\n\n    });\n\n\n  }\n\n}\n\n    \n\n    \n        \n  \n    Highlights\n    \n    \n      \n        \n        \n        \n        \n      \n      \n        \n        \n        \n        \n      \n      \n        \n        \n        \n        \n      \n      \n        \n        \n      \n    \n\n    No Data Yet\n  \n\n  \n    Contact Distribution\n     0; else noPieData\"\n    >\n      \n        \n        \n      \n    \n    \n      \n        Sorry. No Data to Measure yet.\n      \n    \n  \n  \n    Contact Volume\n    \n       0; else noBarData\"\n      >\n        \n        \n      \n      \n        \n          Sorry. No Data to Measure yet.\n        \n      \n    \n  \n\n\n\n  \n    {{ header }}\n    {{ metric }}\n  \n\n\n    \n\n    \n                \n                    ./dashboard.component.scss\n                \n                .dashboard-container {\n  height: 100%;\n\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n  grid-column-gap: 0px;\n  grid-row-gap: 0px;\n\n  .grid1 {\n    grid-area: 1 / 1 / 2 / 2;\n  }\n  .grid2 {\n    grid-area: 1 / 2 / 2 / 4;\n  }\n  .grid3 {\n    grid-area: 2 / 1 / 3 / 4;\n  }\n\n  mat-card {\n    box-shadow: 0 2rem 4rem 0 rgba(0, 0, 0, 0.2);\n    transition: 0.3s;\n    padding: auto;\n\n    margin: 0.4rem;\n\n    mat-card-title {\n      font-family: \"Montserrat\", sans-serif;\n    }\n\n    &:hover {\n      box-shadow: 0 0.5rem 2rem 0 rgba(0, 0, 0, 0.2);\n    }\n    &.pie {\n      width: 45vw;\n      height: auto;\n    }\n    &.bar {\n      width: 80vw;\n      height: 100vh;\n    }\n    &.standard-metric {\n      width: 30vw;\n      height: auto;\n    }\n    border-radius: 0.7vmax;\n\n    .card-container {\n      padding: 2rem;\n      height: 100%;\n      padding: auto;\n\n      .no-data {\n        height: 1vh;\n        text-align: center;\n        margin-top: 10vh;\n        color: var(--primary-darker-color);\n        font-weight: 500;\n        text-transform: uppercase;\n      }\n\n      &__title {\n        display: flex;\n        justify-content: center;\n        font-size: 1rem;\n        text-transform: uppercase;\n        margin-top: 2rem;\n        margin-bottom: 2rem;\n        color: var(--text-primary-color);\n      }\n      &__graph-container {\n        width: 40vw;\n        height: 100vh;\n        margin: 1 rem auto 3rem auto;\n        padding: auto;\n      }\n\n      &__bar-graph-container {\n        width: 75vw;\n        height: 100vh;\n        margin: 1 rem auto 3rem auto;\n        padding: auto;\n      }\n    }\n  }\n}\n\n.mat-card-title {\n  color: rgb(38, 38, 47);\n}\n\n.red {\n  color: red;\n  text-decoration: underline;\n}\n\n.standard-metric-container {\n  margin-top: 3vmax;\n  display: flex;\n  justify-items: center;\n}\n\n.standard-metric {\n  display: block;\n  width: 20vmax;\n  margin: 3vamx auto 0 auto;\n\n  h4 {\n    color: rgb(0, 85, 100);\n  }\n  h5 {\n    color: rgb(38, 38, 47);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Highlights                                                                                                                                                                                No Data Yet        Contact Distribution     0; else noPieData\"    >                                                  Sorry. No Data to Measure yet.                  Contact Volume           0; else noBarData\"      >                                              Sorry. No Data to Measure yet.                          {{ header }}    {{ metric }}  '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'enccrm-add-contact'},{'name': 'AddNoteComponent', 'selector': 'enccrm-add-note'},{'name': 'AddTaskComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'enccrm-button'},{'name': 'ContactDetailComponent', 'selector': 'enccrm-contact-detail'},{'name': 'ContactListComponent', 'selector': 'enccrm-contact-list'},{'name': 'DashboardComponent', 'selector': 'enccrm-dashboard'},{'name': 'FormComponent', 'selector': 'enccrm-form'},{'name': 'GeneralCardComponent', 'selector': 'enccrm-general-card'},{'name': 'HeaderComponent', 'selector': 'enccrm-header'},{'name': 'LoginComponent', 'selector': 'enccrm-login'},{'name': 'ModalCardComponent', 'selector': 'enccrm-modal-card'},{'name': 'NoteDetailComponent', 'selector': 'enccrm-note-detail'},{'name': 'NoteListComponent', 'selector': 'enccrm-note-list'},{'name': 'SidenavComponent', 'selector': 'enccrm-sidenav'},{'name': 'TabComponent', 'selector': 'enccrm-tab'},{'name': 'TableComponent', 'selector': 'enccrm-table'},{'name': 'TaskDetailComponent', 'selector': 'enccrm-task-detail'},{'name': 'TasksComponent', 'selector': 'enccrm-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Day.html":{"url":"interfaces/Day.html","title":"interface - Day","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Day\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/operations/contact/models/interfaces/day.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Day {\n    name: string;\n    date: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/EnumUserDisplayTranslatorPipe.html":{"url":"pipes/EnumUserDisplayTranslatorPipe.html","title":"pipe - EnumUserDisplayTranslatorPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  EnumUserDisplayTranslatorPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/contact-enum-display.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        display_translator\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number, valueOption: string, pipeType: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/pipes/contact-enum-display.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    valueOption\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pipeType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { ContactType, EnergyLevel, Priorities, Statuses, ContactOptions, Context } from '@operations/contact';\nimport { NoteOptions, NoteType } from '@operations/note';\nimport { TaskOptions, TaskType } from '@operations/task';\n\n\n@Pipe({\n  name: 'display_translator' \n})\nexport class EnumUserDisplayTranslatorPipe implements PipeTransform {\n\n  transform(value: number, valueOption:string,pipeType:string): string {\n    if(pipeType === 'contact') { \n      switch (valueOption) {\n\n        case ContactOptions[0]:\n          return `${ContactType[value]}`;\n        case ContactOptions[1]:\n          return ` Energy Level: ${EnergyLevel[value]}` ;\n        case ContactOptions[2]:\n          return `${Statuses[value]}`;\n        case ContactOptions[3]:\n          return ` Priority: ${Priorities[value]}`;\n        case ContactOptions[4]:\n          return ` Know From: ${Context[value]}`;\n      }\n     \n    } else if(pipeType === 'task') {\n        switch (valueOption) {\n\n          case TaskOptions[0]:\n            return `${TaskType[value]}`;\n          case TaskOptions[1]:\n            return ` Status: ${Statuses[value]}`;\n          case TaskOptions[2]:\n            return ` Priority: ${Priorities[value]}`;\n        }\n      \n    } else {\n        switch (valueOption) {\n\n          case NoteOptions[0]:\n            return `${NoteType[value]}`;\n          case NoteOptions[1]:\n            return ` Status: ${Statuses[value]}`;\n          case NoteOptions[2]:\n            return ` Priority: ${Priorities[value]}`;\n        }\n    }\n    return '';\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormComponent.html":{"url":"components/FormComponent.html","title":"component - FormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/form/form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                enccrm-form\n            \n\n            \n                styleUrls\n                ./form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                inputForm\n                            \n                            \n                                submission\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateControls\n                            \n                            \n                                indexedCreatedControls\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                controlsToCreate\n                            \n                            \n                                formatted\n                            \n                            \n                                orientation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    controlsCreated\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/form/form.component.ts:26\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        controlsToCreate\n                    \n                \n                \n                    \n                        Type :         FormSetupModel[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/form/form.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formatted\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/form/form.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        orientation\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'horizontal'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/form/form.component.ts:15\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onSubmit\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/form/form.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateControls\n                        \n                    \n                \n            \n            \n                \ngenerateControls(controlsToCreate: FormSetupModel[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/form/form.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    controlsToCreate\n                                    \n                                                FormSetupModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        indexedCreatedControls\n                        \n                    \n                \n            \n            \n                \nindexedCreatedControls(i: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/form/form.component.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/form/form.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/form/form.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        inputForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    controlsCreated: new FormArray([])\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/form/form.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submission\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/form/form.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        controlsCreated\n                    \n                \n\n                \n                    \n                        getcontrolsCreated()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/form/form.component.ts:134\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { FormSetupModel } from '@shared/models/form-setup.model';\n\nimport * as moment from 'moment';\n\n\n@Component({\n  selector: 'enccrm-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss']\n})\nexport class FormComponent implements OnInit {\n  @Input() controlsToCreate: FormSetupModel[] = [];\n  @Input() orientation: string = 'horizontal';\n  @Input() formatted: boolean = true;\n  @Output() onSubmit = new EventEmitter();\n\n\n\n\n  submission: any = {};\n\n  inputForm: FormGroup = new FormGroup({\n    controlsCreated: new FormArray([])\n  });;\n\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n    console.dir(this.controlsToCreate);\n    this.generateControls(this.controlsToCreate);\n\n\n  }\n\n  generateControls(controlsToCreate: FormSetupModel[]) {\n    let vals = [];\n    controlsToCreate.forEach(c => {\n      vals = [];\n      switch (c.type) {\n        case \"string\":\n          if (c.required) vals.push(Validators.required);\n          this.controlsCreated.push(\n            new FormControl(c.default, vals)\n          )\n          break;\n        case \"longString\":\n          if (c.required) vals.push(Validators.required);\n          this.controlsCreated.push(\n            new FormControl(c.default, vals)\n          )\n          break;\n        case \"stringChoice\":\n          if (c.required) vals.push(Validators.required);\n          this.controlsCreated.push(\n            new FormControl(c.default, vals)\n          )\n          break;\n        case \"stringChoiceSet\":\n          if (c.required) vals.push(Validators.required);\n          this.controlsCreated.push(\n            new FormControl(c.default, vals)\n          )\n          break;\n        case \"number\":\n          if (c.required) vals.push(Validators.required);\n          if (!c.numberMax && !c.numberMin) {\n\n            break;\n          }\n          vals.push(Validators.min(c.numberMin || 0));\n          vals.push(Validators.min(c.numberMax || 2));\n          this.controlsCreated.push(\n            new FormControl(c.default, vals)\n          )\n          break;\n        case \"boolean\":\n          if (c.required) vals.push(Validators.required);\n          this.controlsCreated.push(\n            new FormControl(c.default, vals)\n          )\n          break;\n        case \"autocomplete-select\":\n          if (c.required) vals.push(Validators.required);\n          this.controlsCreated.push(\n            new FormControl(c.default, vals)\n          )\n          break;\n        case \"email\":\n          if (c.required) vals.push(Validators.required, Validators.email);\n          this.controlsCreated.push(\n            new FormControl(c.default, vals)\n          )\n          break;\n        case \"password\":\n          if (c.required) vals.push(Validators.required); //@TODO: add custom validator for password strength\n          this.controlsCreated.push(\n            new FormControl(c.default, vals)\n          )\n          break;\n        case \"date\":\n          console.log(\"found date\");\n          if (c.required) vals.push(Validators.required);\n          this.controlsCreated.push(\n            new FormControl(c.default, vals)\n          )\n          break;\n      }\n    });\n\n  }\n\n  submit() {\n    this.controlsToCreate.forEach((control, i) => {\n      if (control.type === 'date') {\n        this.submission[control.controlName] = this.controlsCreated[i].value ? moment(new Date(this.controlsCreated[i].value)).format('LL') : '';\n      } else {\n        this.submission[control.controlName] = this.controlsCreated[i].value;\n      }\n\n    });\n\n    this.onSubmit.emit(this.submission);\n    // this.controlsCreated.forEach((control, i) => {\n    //   control.setValue(this.controlsToCreate[i].default)\n    // });\n    this.inputForm.reset();\n    this.submission = {};\n  }\n\n  get controlsCreated() {\n    return (this.inputForm.controls['controlsCreated'] as FormArray).controls;\n  }\n\n  indexedCreatedControls(i: number) { return this.controlsCreated[i] as FormControl }\n\n}\n\n\n\n    \n\n    \n        \n  \n    \n      \n      \n        \n      \n    \n    \n      \n        \n          \n            \n              \n                \n                \n                  Please check {{ controlsToCreate[i].displayName }}\n                \n                {{ controlsToCreate[i].displayName }}\n              \n            \n          \n          \n            \n              \n                \n                \n                  Please check {{ controlsToCreate[i].displayName }} \n                \n                {{ controlsToCreate[i].displayName }}\n              \n            \n            \n              \n                {{ controlsToCreate[i].displayName }}\n                \n                \n                  Please check {{ controlsToCreate[i].displayName }}\n                \n              \n            \n            \n              \n                {{ controlsToCreate[i].displayName }}\n                \n                \n                  Please check {{ controlsToCreate[i].displayName }}\n                \n              \n            \n            \n              \n                {{ controlsToCreate[i].displayName }}\n                \n                \n                  Please check {{ controlsToCreate[i].displayName }}\n                \n              \n            \n            \n              \n                {{ controlsToCreate[i].displayName }}\n                \n                  \n                    {{ c.name }}\n                  \n                \n                \n                  Please check {{ controlsToCreate[i].displayName }}\n                \n              \n            \n            \n              \n                {{ controlsToCreate[i].displayName }}\n                \n                \n                \n              \n            \n            \n              \n                {{ controlsToCreate[i].displayName }}\n                \n                  \n                    {{ c.name }}\n                  \n                \n                \n                  Please check {{ controlsToCreate[i].displayName }}\n                \n              \n            \n            \n              \n                \n                \n                  Please check {{ controlsToCreate[i].displayName }}\n                \n                {{ controlsToCreate[i].displayName }}\n              \n            \n            \n              \n                \n                \n                  Please check {{ controlsToCreate[i].displayName }}\n                \n                {{ controlsToCreate[i].displayName }}\n              \n            \n            \n              \n                {{ controlsToCreate[i].displayName }}\n                \n                \n                  \n                    {{ option.display }}\n                  \n                \n                \n                  Please check {{ controlsToCreate[i].displayName }}\n                \n              \n            \n          \n       \n        \n      \n    \n  \n\n  \n    \n      \n    \n    \n      \n    \n    \n      \n        \n          \n            \n              {{ controlsToCreate[i].displayName }}\n              \n              \n                Please check {{ controlsToCreate[i].displayName }}\n              \n            \n          \n          \n            \n              {{ controlsToCreate[i].displayName }}\n              \n              \n                Please check {{ controlsToCreate[i].displayName }}\n              \n            \n          \n          \n            \n              {{ controlsToCreate[i].displayName }}\n              \n              \n                Please check {{ controlsToCreate[i].displayName }}\n              \n            \n          \n          \n            \n              {{ controlsToCreate[i].displayName }}\n              \n              \n                Please check {{ controlsToCreate[i].displayName }}\n              \n            \n          \n          \n            \n              {{ controlsToCreate[i].displayName }}\n              \n                \n                  {{ c.name }}\n                \n              \n              \n                Please check {{ controlsToCreate[i].displayName }}\n              \n            \n          \n\n          \n            \n              {{ controlsToCreate[i].displayName }}\n              \n                \n                  {{ c }}\n                \n              \n              \n                Please check {{ controlsToCreate[i].displayName }}\n              \n            \n          \n          \n            \n              \n              \n                Please check {{ controlsToCreate[i].displayName }}\n              \n              {{ controlsToCreate[i].displayName }}\n            \n          \n          \n            \n              \n              \n                Please check {{ controlsToCreate[i].displayName }}\n              \n              {{ controlsToCreate[i].displayName }}\n            \n          \n\n          \n            \n              {{ controlsToCreate[i].displayName }}\n              \n              \n                \n                  {{ option.name }}\n                \n              \n              \n                Please check {{ controlsToCreate[i].displayName }}\n              \n            \n          \n        \n      \n    \n  \n\n  \n    \n      Save\n      save\n    \n  \n\n\n    \n\n    \n                \n                    ./form.component.scss\n                \n                @import \"../../../styles/main\";\n\n.edit__container {\n  margin-top: 3rem;\n  display: block;\n\n  &__header {\n    font-size: 1.5vmax;\n    text-transform: uppercase;\n    margin-bottom: 3.5rem;\n    font-family: \"Merriweather Sans\", sans-serif;\n    color: var(--text-primary-color);\n    a {\n      font-size: 0.7rem;\n    }\n  }\n\n\n\n  &__horiz-content {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    gap: .4vmax;\n    ::ng-deep .mat-form-field {\n      font-size: 1vmax;\n    }\n\n    #formatted {\n      ::ng-deep .mat-form-field {\n        height: auto;\n        font-size: 1vmax;\n        width: 20vmax;\n\n        .mat-input-element {\n          width: 20vmax;\n     \n        }\n        .mat-label {\n          font-size: 1.5vmax;\n        }\n  \n      }\n    }\n\n    .big {\n      ::ng-deep .mat-form-field {\n        height: 5vmax;\n        width: 10vmax;\n        font-size: 1vmax;\n      \n        .textarea {\n          width: 10vmax;\n     \n        }\n        .mat-label {\n          font-size: 1.5vmax;\n        }\n  \n      }\n    }\n\n  }\n\n  &__vert-content {\n    ::ng-deep .mat-form-field {\n      height: auto;\n      font-size: 1rem;\n    }\n  }\n\n  &__buttons {\n    width: 25rem;\n    margin: auto;\n\n    width: 40%;\n  }\n  .med {\n    width: 30%;\n  }\n  .small {\n    width: 15%;\n  }\n}\n\ninput {\n  width: 10rem;\n}\n\n.mat-form-field textarea {\n  height: 100%;\n  width: 100%;\n}\n\n.link-text {\n  font-size: 0.7rem;\n  color: rgb(74, 74, 163);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                            Please check {{ controlsToCreate[i].displayName }}                                {{ controlsToCreate[i].displayName }}                                                                                                                          Please check {{ controlsToCreate[i].displayName }}                                 {{ controlsToCreate[i].displayName }}                                                                    {{ controlsToCreate[i].displayName }}                                                  Please check {{ controlsToCreate[i].displayName }}                                                                                    {{ controlsToCreate[i].displayName }}                                                  Please check {{ controlsToCreate[i].displayName }}                                                                                    {{ controlsToCreate[i].displayName }}                                                  Please check {{ controlsToCreate[i].displayName }}                                                                                    {{ controlsToCreate[i].displayName }}                                                      {{ c.name }}                                                                    Please check {{ controlsToCreate[i].displayName }}                                                                                    {{ controlsToCreate[i].displayName }}                                                                                                                    {{ controlsToCreate[i].displayName }}                                                      {{ c.name }}                                                                    Please check {{ controlsToCreate[i].displayName }}                                                                                                                      Please check {{ controlsToCreate[i].displayName }}                                {{ controlsToCreate[i].displayName }}                                                                                                      Please check {{ controlsToCreate[i].displayName }}                                {{ controlsToCreate[i].displayName }}                                                                    {{ controlsToCreate[i].displayName }}                                                                      {{ option.display }}                                                                    Please check {{ controlsToCreate[i].displayName }}                                                                                                                                                                   {{ controlsToCreate[i].displayName }}                                            Please check {{ controlsToCreate[i].displayName }}                                                                        {{ controlsToCreate[i].displayName }}                                            Please check {{ controlsToCreate[i].displayName }}                                                                        {{ controlsToCreate[i].displayName }}                                            Please check {{ controlsToCreate[i].displayName }}                                                                        {{ controlsToCreate[i].displayName }}                                            Please check {{ controlsToCreate[i].displayName }}                                                                        {{ controlsToCreate[i].displayName }}                                                {{ c.name }}                                                            Please check {{ controlsToCreate[i].displayName }}                                                                        {{ controlsToCreate[i].displayName }}                                                {{ c }}                                                            Please check {{ controlsToCreate[i].displayName }}                                                                                                      Please check {{ controlsToCreate[i].displayName }}                            {{ controlsToCreate[i].displayName }}                                                                                        Please check {{ controlsToCreate[i].displayName }}                            {{ controlsToCreate[i].displayName }}                                                          {{ controlsToCreate[i].displayName }}                                                              {{ option.name }}                                                            Please check {{ controlsToCreate[i].displayName }}                                                                    Save      save      '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'enccrm-add-contact'},{'name': 'AddNoteComponent', 'selector': 'enccrm-add-note'},{'name': 'AddTaskComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'enccrm-button'},{'name': 'ContactDetailComponent', 'selector': 'enccrm-contact-detail'},{'name': 'ContactListComponent', 'selector': 'enccrm-contact-list'},{'name': 'DashboardComponent', 'selector': 'enccrm-dashboard'},{'name': 'FormComponent', 'selector': 'enccrm-form'},{'name': 'GeneralCardComponent', 'selector': 'enccrm-general-card'},{'name': 'HeaderComponent', 'selector': 'enccrm-header'},{'name': 'LoginComponent', 'selector': 'enccrm-login'},{'name': 'ModalCardComponent', 'selector': 'enccrm-modal-card'},{'name': 'NoteDetailComponent', 'selector': 'enccrm-note-detail'},{'name': 'NoteListComponent', 'selector': 'enccrm-note-list'},{'name': 'SidenavComponent', 'selector': 'enccrm-sidenav'},{'name': 'TabComponent', 'selector': 'enccrm-tab'},{'name': 'TableComponent', 'selector': 'enccrm-table'},{'name': 'TaskDetailComponent', 'selector': 'enccrm-task-detail'},{'name': 'TasksComponent', 'selector': 'enccrm-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FormSetupModel.html":{"url":"interfaces/FormSetupModel.html","title":"interface - FormSetupModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FormSetupModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/form-setup.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            autoCompleteOptions\n                                        \n                                \n                                \n                                        \n                                            controlName\n                                        \n                                \n                                \n                                        \n                                            default\n                                        \n                                \n                                \n                                        \n                                            displayName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            numberMax\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            numberMin\n                                        \n                                \n                                \n                                        \n                                            required\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            stringChoices\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autoCompleteOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        autoCompleteOptions:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        controlName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        controlName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        default:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberMax\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numberMax:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberMin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numberMin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stringChoices\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stringChoices:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from \"rxjs\";\n\nexport interface FormSetupModel {\n    displayName: string;\n    controlName: string;\n    type: string;\n    required: boolean;\n    default: any;\n    numberMax?: number;\n    numberMin?: number;\n    stringChoices?: any[]\n    autoCompleteOptions?: Observable;\n};\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GeneralCardComponent.html":{"url":"components/GeneralCardComponent.html","title":"component - GeneralCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GeneralCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/cards/general-card/general-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                enccrm-general-card\n            \n\n            \n                styleUrls\n                ./general-card.component.scss\n            \n\n\n            \n                template\n                \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/cards/general-card/general-card.component.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/cards/general-card/general-card.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'enccrm-general-card',\n  template: `\n            \n              \n             \n  `,\n  styleUrls: ['./general-card.component.scss']\n})\nexport class GeneralCardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n\n    \n                \n                    ./general-card.component.scss\n                \n                @import url(\"../../../../styles/_mixins.scss\");\n\nmat-card {\n  background-color: white;\n  width: 80vmax;\n  border-radius: 0.7vmax;\n  height: auto;\n\n  transition: 0.3s;\n\n  &:hover {\n    box-shadow: 0 0.5rem 2rem 0 rgba(0, 0, 0, 0.2);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'enccrm-add-contact'},{'name': 'AddNoteComponent', 'selector': 'enccrm-add-note'},{'name': 'AddTaskComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'enccrm-button'},{'name': 'ContactDetailComponent', 'selector': 'enccrm-contact-detail'},{'name': 'ContactListComponent', 'selector': 'enccrm-contact-list'},{'name': 'DashboardComponent', 'selector': 'enccrm-dashboard'},{'name': 'FormComponent', 'selector': 'enccrm-form'},{'name': 'GeneralCardComponent', 'selector': 'enccrm-general-card'},{'name': 'HeaderComponent', 'selector': 'enccrm-header'},{'name': 'LoginComponent', 'selector': 'enccrm-login'},{'name': 'ModalCardComponent', 'selector': 'enccrm-modal-card'},{'name': 'NoteDetailComponent', 'selector': 'enccrm-note-detail'},{'name': 'NoteListComponent', 'selector': 'enccrm-note-list'},{'name': 'SidenavComponent', 'selector': 'enccrm-sidenav'},{'name': 'TabComponent', 'selector': 'enccrm-tab'},{'name': 'TableComponent', 'selector': 'enccrm-table'},{'name': 'TaskDetailComponent', 'selector': 'enccrm-task-detail'},{'name': 'TasksComponent', 'selector': 'enccrm-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GeneralCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/layout/header/header.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                enccrm-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n            \n                template\n                  \n  \n    \n      \n        Enc CRM\n        \n          menu\n        \n        \n        Goodbye\n        logout\n        \n      \n      \n        Welcome {{user.name}}!\n      \n    \n  \n\n\n\n    \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onToggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clicked\n                            \n                            \n                                onToolbarLogout\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/layout/header/header.component.ts:37\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/layout/header/header.component.ts:37\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/layout/header/header.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onToolbarLogout\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/layout/header/header.component.ts:36\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/header/header.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/header/header.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onToggle\n                        \n                    \n                \n            \n            \n                \nonToggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/header/header.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Output, Input, EventEmitter } from '@angular/core';\nimport { User } from '@core/auth/models/users';\n@Component({\n  selector: 'enccrm-header',\n  template: `\n              \n              \n                \n                  \n                    Enc CRM\n                    \n                      menu\n                    \n                    \n                    Goodbye\n                    logout\n                    \n                  \n                  \n                    Welcome {{user.name}}!\n                  \n                \n              \n\n            \n            \n                \n            \n  `,\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  @Output() clicked = new EventEmitter();\n  @Output() onToolbarLogout = new EventEmitter();\n  @Input() user: any;\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n\n  }\n\n  onToggle() {\n    this.clicked.emit(\"sidenav toggled from toolbar\");\n  }\n  logout() {\n    this.onToolbarLogout.emit();\n  }\n\n}\n\n    \n\n\n    \n                \n                    ./header.component.scss\n                \n                .toolbar {\n    background-color: var(--primary-darker-color);\n    color: ivory;\n  \n    .row-container {\n      display:flex;\n      justify-content: space-between;\n      width: 100%;\n      &__title-elements {\n   \n        h1.title {\n          font-size: 3rem;\n          text-transform: uppercase;\n          font-family: 'Libre';\n          display: flex;\n          justify-content: center;\n          \n       \n        }\n        h1.emphasis-portion {\n            font-size: 4.2rem;\n            \n        }\n      }\n      .username {\n        font-family: 'Mate SC', serif;\n      }\n\n      #logout-toolbar {\n        margin-left: 75vw;\n        font-size: 1vmax;\n     \n        mat-icon {\n          font-size: .9vmax;\n          margin: 0;\n         \n        }\n      }\n    }\n  \n  \n    a {\n      font-size: 1.2rem;\n      font-family: \"Merriweather Sans\", sans-serif, \"Helvetica Neue\", sans-serif;\n    }\n  \n    .router-link-active {\n      color: rgb(46, 6, 36);\n      font-size: 1.3rem;\n      text-decoration: underline;\n    }\n  \n    &__content {\n      overflow: hidden;\n      background-color: var(--accent-lighter-color);\n    }\n  \n  }\n  \n  mat-icon {\n    font-size: 3rem;\n    margin-left: 2vmax;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      Enc CRM                  menu                        Goodbye        logout                            Welcome {{user.name}}!                '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'enccrm-add-contact'},{'name': 'AddNoteComponent', 'selector': 'enccrm-add-note'},{'name': 'AddTaskComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'enccrm-button'},{'name': 'ContactDetailComponent', 'selector': 'enccrm-contact-detail'},{'name': 'ContactListComponent', 'selector': 'enccrm-contact-list'},{'name': 'DashboardComponent', 'selector': 'enccrm-dashboard'},{'name': 'FormComponent', 'selector': 'enccrm-form'},{'name': 'GeneralCardComponent', 'selector': 'enccrm-general-card'},{'name': 'HeaderComponent', 'selector': 'enccrm-header'},{'name': 'LoginComponent', 'selector': 'enccrm-login'},{'name': 'ModalCardComponent', 'selector': 'enccrm-modal-card'},{'name': 'NoteDetailComponent', 'selector': 'enccrm-note-detail'},{'name': 'NoteListComponent', 'selector': 'enccrm-note-list'},{'name': 'SidenavComponent', 'selector': 'enccrm-sidenav'},{'name': 'TabComponent', 'selector': 'enccrm-tab'},{'name': 'TableComponent', 'selector': 'enccrm-table'},{'name': 'TaskDetailComponent', 'selector': 'enccrm-task-detail'},{'name': 'TasksComponent', 'selector': 'enccrm-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LayoutModule.html":{"url":"modules/LayoutModule.html","title":"module - LayoutModule","body":"\n                   \n\n\n\n\n    Modules\n    LayoutModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LayoutModule\n\n\n\ncluster_LayoutModule_exports\n\n\n\ncluster_LayoutModule_imports\n\n\n\ncluster_LayoutModule_declarations\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\n\n\nLayoutModule\n\nLayoutModule\n\nLayoutModule -->\n\nHeaderComponent->LayoutModule\n\n\n\n\n\nSidenavComponent\n\nSidenavComponent\n\nLayoutModule -->\n\nSidenavComponent->LayoutModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nLayoutModule->HeaderComponent \n\n\n\n\n\nSidenavComponent \n\nSidenavComponent \n\nSidenavComponent  -->\n\nLayoutModule->SidenavComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nLayoutModule -->\n\nSharedModule->LayoutModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/layout/layout.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HeaderComponent\n                        \n                        \n                            SidenavComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HeaderComponent\n                        \n                        \n                            SidenavComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { SharedModule } from '@shared/shared.module';\nimport { HeaderComponent } from './header/header.component';\nimport { SidenavComponent } from './sidenav/sidenav.component';\n\n\n\n@NgModule({\n  declarations: [\n    HeaderComponent,\n    SidenavComponent\n  ],\n  imports: [\n    SharedModule\n \n  ],\n  exports:[\n    HeaderComponent,\n    SidenavComponent\n  ]\n})\nexport class LayoutModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/auth/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                enccrm-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n            \n                template\n                \n   \n   \n  Maximize your relationships\n  \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/auth/login/login.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/auth/login/login.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/auth/login/login.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'enccrm-login',\n  template: `\n    \n       \n       \n      Maximize your relationships\n      \n        \n      \n    \n  `,\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n\n  }\n\n  login() {\n    this.authService.googleSignin();\n  }\n\n}\n\n    \n\n\n    \n                \n                    ./login.component.scss\n                \n                .parent-container {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  background: url(\"../../../../assets/images/background.jpg\");\n  background-repeat: no-repeat;\n  background-size: cover;\n  z-index: 1;\n\n  &__background-cover {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    padding: 80%;\n    top: 0;\n    left: 0;\n    z-index: -1000;\n    background-color: rgba(0, 0, 0, 0.7);\n  }\n\n  &__context {\n    position: absolute;\n    top: 30%;\n    left: 28%;\n    z-index: 1000;\n    font-family: \"Akaya Kanadaka\", cursive;\n    font-family: \"Merriweather\", serif;\n    font-family: \"Viaoda Libre\", cursive;\n    font-size: 4vmax;\n    color: whitesmoke;\n    z-index: 100;\n  }\n\n  &__login-button {\n    position: absolute;\n    top: 85%;\n    left: 40%;\n    z-index: 1000;\n    img {\n      width: 15vmax;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Maximize your relationships        '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'enccrm-add-contact'},{'name': 'AddNoteComponent', 'selector': 'enccrm-add-note'},{'name': 'AddTaskComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'enccrm-button'},{'name': 'ContactDetailComponent', 'selector': 'enccrm-contact-detail'},{'name': 'ContactListComponent', 'selector': 'enccrm-contact-list'},{'name': 'DashboardComponent', 'selector': 'enccrm-dashboard'},{'name': 'FormComponent', 'selector': 'enccrm-form'},{'name': 'GeneralCardComponent', 'selector': 'enccrm-general-card'},{'name': 'HeaderComponent', 'selector': 'enccrm-header'},{'name': 'LoginComponent', 'selector': 'enccrm-login'},{'name': 'ModalCardComponent', 'selector': 'enccrm-modal-card'},{'name': 'NoteDetailComponent', 'selector': 'enccrm-note-detail'},{'name': 'NoteListComponent', 'selector': 'enccrm-note-list'},{'name': 'SidenavComponent', 'selector': 'enccrm-sidenav'},{'name': 'TabComponent', 'selector': 'enccrm-tab'},{'name': 'TableComponent', 'selector': 'enccrm-table'},{'name': 'TaskDetailComponent', 'selector': 'enccrm-task-detail'},{'name': 'TasksComponent', 'selector': 'enccrm-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MaterialModule\n\n\n\ncluster_MaterialModule_imports\n\n\n\ncluster_MaterialModule_exports\n\n\n\n\nCardsModule\n\nCardsModule\n\n\n\nMaterialModule\n\nMaterialModule\n\nMaterialModule -->\n\nCardsModule->MaterialModule\n\n\n\nMaterialModule -->\n\nMaterialModule->MaterialModule\n\n\n\n\n\nCardsModule \n\nCardsModule \n\nCardsModule  -->\n\nMaterialModule->CardsModule \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nMaterialModule->MaterialModule \n\n\n\n\n\nTabModule \n\nTabModule \n\nTabModule  -->\n\nMaterialModule->TabModule \n\n\n\n\n\nTabModule\n\nTabModule\n\nMaterialModule -->\n\nTabModule->MaterialModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/material/material.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            CardsModule\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            TabModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CardsModule\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            TabModule\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\n\nimport { MatFormFieldDefaultOptions, MatFormFieldModule, MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\n\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSelectModule } from '@angular/material/select';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatChipsModule } from '@angular/material/chips';\n\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\n\nimport { FlexLayoutModule, BREAKPOINT } from '@angular/flex-layout';\n\nimport { NgxSpinnerModule } from \"ngx-spinner\";\n\nconst appearance: MatFormFieldDefaultOptions = {\n  appearance: 'fill',\n  floatLabel: 'auto'\n};\n\nconst modules = [\n  MatTableModule,\n  MatPaginatorModule,\n  MatTooltipModule,\n  MatSortModule,\n  DragDropModule,\n  MatSnackBarModule,\n  MatCardModule,\n  MatIconModule,\n  MatChipsModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatTabsModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatSidenavModule,\n  MatListModule,\n  MatGridListModule,\n  MatToolbarModule,\n  MatSelectModule,\n  MatGridListModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  MatRippleModule,\n  FlexLayoutModule,\n  NgxSpinnerModule,\n  MatProgressSpinnerModule,\n  MatAutocompleteModule\n]\n\n@NgModule({\n  declarations: [],\n  imports: modules,\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  providers: [\n    {\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\n      useValue: appearance\n    }\n  ],\n  exports: modules\n})\nexport class MaterialModule {\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MetricsService.html":{"url":"injectables/MetricsService.html","title":"injectable - MetricsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MetricsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/analytics/services/metrics.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getContactDistribution\n                            \n                            \n                                getHighestofSortedContacts\n                            \n                            \n                                getLowestofSortedContacts\n                            \n                            \n                                getMostFrequentEnvironment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/analytics/services/metrics.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getContactDistribution\n                        \n                    \n                \n            \n            \n                \ngetContactDistribution(contacts: Contact[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/analytics/services/metrics.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contacts\n                                    \n                                                Contact[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHighestofSortedContacts\n                        \n                    \n                \n            \n            \n                \ngetHighestofSortedContacts(contacts: Contact[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/analytics/services/metrics.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contacts\n                                    \n                                                Contact[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Contact\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLowestofSortedContacts\n                        \n                    \n                \n            \n            \n                \ngetLowestofSortedContacts(contacts: Contact[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/analytics/services/metrics.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contacts\n                                    \n                                                Contact[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Contact\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMostFrequentEnvironment\n                        \n                    \n                \n            \n            \n                \ngetMostFrequentEnvironment(friends: Contact[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/analytics/services/metrics.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    friends\n                                    \n                                                Contact[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Contact, Context, ContactType } from '@operations/contact';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MetricsService {\n\n  constructor() { }\n\n\n  getLowestofSortedContacts(contacts: Contact[]): Contact {\n    return contacts.sort((a, b) => (a.energyLevel + a.priority) - (b.energyLevel + b.priority))[contacts.length - 1];\n  }\n\n\n  getHighestofSortedContacts(contacts: Contact[]): Contact {\n    return contacts.sort((a, b) => (a.energyLevel + a.priority) - (b.energyLevel + b.priority))[0];\n  }\n\n  getMostFrequentEnvironment(friends: Contact[]): string {\n    const environments = [\n      { context: 0, value: 0 },\n      { context: 1, value: 0 },\n      { context: 2, value: 0 },\n      { context: 3, value: 0 },\n      { context: 4, value: 0 },\n      { context: 5, value: 0 }\n    ];\n    friends.forEach(friend => environments[friend.contactType].value++);\n    const sortedEnvironments = environments.sort((a, b) => a.value - b.value)\n    return Context[sortedEnvironments[0].value];\n  }\n\n  getContactDistribution(contacts: Contact[]): { cType: number, value: number }[] {\n    const distribution = [\n      { cType: 0, value: 0 },\n      { cType: 1, value: 0 },\n      { cType: 2, value: 0 },\n      { cType: 3, value: 0 },\n      { cType: 4, value: 0 },\n      { cType: 5, value: 0 },\n      { cType: 6, value: 0 },\n      { cType: 7, value: 0 },\n      { cType: 8, value: 0 },\n      { cType: 9, value: 0 },\n      { cType: 10, value: 0 },\n      { cType: 11, value: 0 },\n      { cType: 12, value: 0 },\n      { cType: 13, value: 0 },\n      { cType: 14, value: 0 }\n    ];\n\n    contacts.forEach(contact => {\n\n      distribution[contact.contactType].value++\n    })\n    return distribution;\n\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalCardComponent.html":{"url":"components/ModalCardComponent.html","title":"component - ModalCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModalCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/cards/modal-card/modal-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                enccrm-modal-card\n            \n\n            \n                styleUrls\n                ./modal-card.component.scss\n            \n\n\n            \n                template\n                \n  \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/cards/modal-card/modal-card.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/cards/modal-card/modal-card.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'enccrm-modal-card',\n  template: `\n    \n      \n        \n       \n    \n    `,\n  styleUrls: ['./modal-card.component.scss']\n})\nexport class ModalCardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n\n    \n                \n                    ./modal-card.component.scss\n                \n                @import url(\"../../../../styles/_mixins.scss\");\n\n.card-container {\n  display: flex;\n  justify-content: center;\n\n  mat-card {\n    background-color: white;\n    width: 100%;\n    border-radius: 0.7vmax;\n    height: auto;\n    margin-top: 3vmax;\n    transition: 0.3s;\n  \n    &:hover {\n      box-shadow: 0 0.5rem 2rem 0 rgba(0, 0, 0, 0.2);\n    }\n  }\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'enccrm-add-contact'},{'name': 'AddNoteComponent', 'selector': 'enccrm-add-note'},{'name': 'AddTaskComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'enccrm-button'},{'name': 'ContactDetailComponent', 'selector': 'enccrm-contact-detail'},{'name': 'ContactListComponent', 'selector': 'enccrm-contact-list'},{'name': 'DashboardComponent', 'selector': 'enccrm-dashboard'},{'name': 'FormComponent', 'selector': 'enccrm-form'},{'name': 'GeneralCardComponent', 'selector': 'enccrm-general-card'},{'name': 'HeaderComponent', 'selector': 'enccrm-header'},{'name': 'LoginComponent', 'selector': 'enccrm-login'},{'name': 'ModalCardComponent', 'selector': 'enccrm-modal-card'},{'name': 'NoteDetailComponent', 'selector': 'enccrm-note-detail'},{'name': 'NoteListComponent', 'selector': 'enccrm-note-list'},{'name': 'SidenavComponent', 'selector': 'enccrm-sidenav'},{'name': 'TabComponent', 'selector': 'enccrm-tab'},{'name': 'TableComponent', 'selector': 'enccrm-table'},{'name': 'TaskDetailComponent', 'selector': 'enccrm-task-detail'},{'name': 'TasksComponent', 'selector': 'enccrm-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModalCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Note.html":{"url":"interfaces/Note.html","title":"interface - Note","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Note\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/operations/note/models/interfaces/note.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            contact\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            noteType\n                                        \n                                \n                                \n                                        \n                                            priority\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contact\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contact:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noteType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        noteType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Note {\n    id: string;\n    title: string;\n    noteType: string; //choices\n    priority: string; //choices \n    body: string; //choices\n    contact:any;\n}\n  \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NoteDetailComponent.html":{"url":"components/NoteDetailComponent.html","title":"component - NoteDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NoteDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/operations/note/components/note-detail/note-detail.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                enccrm-note-detail\n            \n\n            \n                styleUrls\n                ./note-detail.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./note-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                editNoteControls\n                            \n                            \n                                editOpen\n                            \n                            \n                                note\n                            \n                            \n                                notes$\n                            \n                            \n                                noteTypeChoices\n                            \n                            \n                                priorities\n                            \n                            \n                                statuses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: literal type, dialogRef: MatDialogRef, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/operations/note/components/note-detail/note-detail.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/operations/note/components/note-detail/note-detail.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/operations/note/components/note-detail/note-detail.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/operations/note/components/note-detail/note-detail.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editNoteControls\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormSetupModel[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/note/components/note-detail/note-detail.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/note/components/note-detail/note-detail.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        note\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Note\n\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/note/components/note-detail/note-detail.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notes$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/note/components/note-detail/note-detail.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noteTypeChoices\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { name: NoteType[0], value: 0 },\n    { name: NoteType[1], value: 1 },\n    { name: NoteType[2], value: 2 },\n    { name: NoteType[3], value: 3 }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/note/components/note-detail/note-detail.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        priorities\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { name: Priorities[0], value: 0 },\n    { name: Priorities[1], value: 1 },\n    { name: Priorities[2], value: 2 },\n    { name: Priorities[3], value: 3 },\n    { name: Priorities[4], value: 4 },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/note/components/note-detail/note-detail.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statuses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { name: Statuses[0], value: 0 },\n    { name: Statuses[1], value: 1 },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/note/components/note-detail/note-detail.component.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Inject } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Store } from '@ngrx/store';\nimport { NoteType, Priorities, Statuses } from '@operations/note';\nimport { Note } from '@operations/index';\nimport { FormSetupModel } from '@shared/models/form-setup.model';\nimport { Observable } from 'rxjs';\n\n\n@Component({\n  selector: 'enccrm-note-detail',\n  templateUrl: './note-detail.component.html',\n  styleUrls: ['./note-detail.component.scss']\n})\nexport class NoteDetailComponent implements OnInit {\n\n  editOpen = false;\n  note!: Note;\n  notes$: Observable | undefined;\n\n  noteTypeChoices = [\n    { name: NoteType[0], value: 0 },\n    { name: NoteType[1], value: 1 },\n    { name: NoteType[2], value: 2 },\n    { name: NoteType[3], value: 3 }\n  ]\n  priorities = [\n    { name: Priorities[0], value: 0 },\n    { name: Priorities[1], value: 1 },\n    { name: Priorities[2], value: 2 },\n    { name: Priorities[3], value: 3 },\n    { name: Priorities[4], value: 4 },\n  ]\n  statuses = [\n    { name: Statuses[0], value: 0 },\n    { name: Statuses[1], value: 1 },\n  ]\n\n  editNoteControls: FormSetupModel[] = [];\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: { note: Note, notes: Observable },\n    private dialogRef: MatDialogRef,\n    private store: Store\n  ) { }\n\n  ngOnInit(): void {\n    this.note = this.data.note;\n    this.notes$ = this.data.notes\n\n    this.editNoteControls = [\n      {\n        displayName: \"Name\",\n        controlName: \"title\",\n        type: \"string\",\n        required: true,\n        default: '',\n      },\n      {\n        displayName: \"Note Type\",\n        controlName: \"noteType\",\n        type: \"stringChoice\",\n        required: true,\n        default: 0,\n        stringChoices: this.noteTypeChoices\n      },\n      {\n        displayName: \"How Important?\",\n        controlName: \"priority\",\n        type: \"stringChoiceSet\",\n        required: true,\n        default: 1,\n        stringChoices: this.priorities\n      },\n      {\n        displayName: \"Body\",\n        controlName: \"body\",\n        type: \"longString\",\n        required: true,\n        default: ''\n      }\n    ];\n\n  }\n\n  submit(event: any) {\n\n\n  }\n\n}\n\n    \n\n    \n        Note Details\n 0\">\n  \n    \n      Stop Editing?\n      \n        Want to Edit?\n      \n    \n    {{ note.title }}\n    {{ note.contact.display }}\n    \n    \n  \n  \n    Body: {{ note.body }}\n  \n\n  \n    \n      Edit {{ note.title }}\n    \n  \n\n\n    \n\n    \n                \n                    ./note-detail.component.scss\n                \n                .header {\n  text-align: center;\n  margin-bottom: 2vmax;\n\n  &__edit-choice {\n    display: grid;\n    justify-content: end;\n\n    a {\n      color: blue;\n      text-decoration: underline;\n    }\n  }\n}\n.details {\n  width: 70vw;\n  margin: auto;\n  // display: grid;\n  // grid-template-columns: repeat(3, 1fr);\n  // grid-template-rows: repeat(3, 1fr);\n  // grid-column-gap: 0px;\n  // grid-row-gap: 0px;\n  text-align: center;\n}\n \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Note Details 0\">            Stop Editing?              Want to Edit?              {{ note.title }}    {{ note.contact.display }}                Body: {{ note.body }}              Edit {{ note.title }}      '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'enccrm-add-contact'},{'name': 'AddNoteComponent', 'selector': 'enccrm-add-note'},{'name': 'AddTaskComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'enccrm-button'},{'name': 'ContactDetailComponent', 'selector': 'enccrm-contact-detail'},{'name': 'ContactListComponent', 'selector': 'enccrm-contact-list'},{'name': 'DashboardComponent', 'selector': 'enccrm-dashboard'},{'name': 'FormComponent', 'selector': 'enccrm-form'},{'name': 'GeneralCardComponent', 'selector': 'enccrm-general-card'},{'name': 'HeaderComponent', 'selector': 'enccrm-header'},{'name': 'LoginComponent', 'selector': 'enccrm-login'},{'name': 'ModalCardComponent', 'selector': 'enccrm-modal-card'},{'name': 'NoteDetailComponent', 'selector': 'enccrm-note-detail'},{'name': 'NoteListComponent', 'selector': 'enccrm-note-list'},{'name': 'SidenavComponent', 'selector': 'enccrm-sidenav'},{'name': 'TabComponent', 'selector': 'enccrm-tab'},{'name': 'TableComponent', 'selector': 'enccrm-table'},{'name': 'TaskDetailComponent', 'selector': 'enccrm-task-detail'},{'name': 'TasksComponent', 'selector': 'enccrm-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NoteDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NoteEffects.html":{"url":"injectables/NoteEffects.html","title":"injectable - NoteEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NoteEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/operations/note/state/effects/notes.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addNotes$\n                            \n                            \n                                deleteNotes$\n                            \n                            \n                                loadNotes$\n                            \n                            \n                                updateNotes$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, backend: BackendService)\n                    \n                \n                        \n                            \n                                Defined in src/app/operations/note/state/effects/notes.effects.ts:64\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backend\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addNotes$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(fromNotesAction.noteActions.addNote),\n      concatMap(action => {\n\n        return this.backend.addNoteInDB(action.note).pipe(\n          map((note: Note) => fromNotesAction.noteActions.addNoteSuccess({ note }))\n        )\n      }),\n      catchError(() => EMPTY)\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/note/state/effects/notes.effects.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteNotes$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(fromNotesAction.noteActions.deleteNote),\n      concatMap((action) => {\n        return this.backend.deleteNoteInDB(action.note).pipe(\n          map((note: Note) => fromNotesAction.noteActions.deleteNoteSuccess({ note }))\n        )\n      }),\n      catchError(error => of(fromNotesAction.noteActions.deleteNoteFail({ error })))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/note/state/effects/notes.effects.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadNotes$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n\n    this.actions$.pipe(\n      ofType(fromNotesAction.noteActions.loadNotes),\n      concatMap(() => {\n        return this.backend.getNotesFromDB().pipe(\n          map((notes: Note[]) => fromNotesAction.noteActions.loadNoteSuccess({ notes }))\n        )\n      }),\n      catchError(error => of(fromNotesAction.noteActions.loadNotesFail({ error })))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/note/state/effects/notes.effects.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateNotes$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(fromNotesAction.noteActions.updateNote),\n      concatMap((action) => {\n        return this.backend.updateNoteInDB(action.note).pipe(\n          map((note: Note) => fromNotesAction.noteActions.updateNoteSuccess({ note }))\n        )\n      }),\n      catchError(error => of(fromNotesAction.noteActions.updateNoteFail({ error })))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/note/state/effects/notes.effects.ts:42\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\n\nimport { catchError, concatMap, map } from 'rxjs/operators';\n\nimport * as fromNotesAction from '../actions/notes.actions';\nimport { BackendService } from '@core/services/backend.service';\nimport { Note } from '@operations/note/models/interfaces/note';\nimport { EMPTY, of } from 'rxjs';\nimport { Action } from 'rxjs/internal/scheduler/Action';\n\n\n@Injectable()\nexport class NoteEffects {\n\n  loadNotes$ = createEffect(() =>\n\n    this.actions$.pipe(\n      ofType(fromNotesAction.noteActions.loadNotes),\n      concatMap(() => {\n        return this.backend.getNotesFromDB().pipe(\n          map((notes: Note[]) => fromNotesAction.noteActions.loadNoteSuccess({ notes }))\n        )\n      }),\n      catchError(error => of(fromNotesAction.noteActions.loadNotesFail({ error })))\n    )\n  );\n\n  addNotes$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(fromNotesAction.noteActions.addNote),\n      concatMap(action => {\n\n        return this.backend.addNoteInDB(action.note).pipe(\n          map((note: Note) => fromNotesAction.noteActions.addNoteSuccess({ note }))\n        )\n      }),\n      catchError(() => EMPTY)\n    )\n  );\n\n  updateNotes$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(fromNotesAction.noteActions.updateNote),\n      concatMap((action) => {\n        return this.backend.updateNoteInDB(action.note).pipe(\n          map((note: Note) => fromNotesAction.noteActions.updateNoteSuccess({ note }))\n        )\n      }),\n      catchError(error => of(fromNotesAction.noteActions.updateNoteFail({ error })))\n    )\n  );\n\n  deleteNotes$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(fromNotesAction.noteActions.deleteNote),\n      concatMap((action) => {\n        return this.backend.deleteNoteInDB(action.note).pipe(\n          map((note: Note) => fromNotesAction.noteActions.deleteNoteSuccess({ note }))\n        )\n      }),\n      catchError(error => of(fromNotesAction.noteActions.deleteNoteFail({ error })))\n    )\n  );\n\n  constructor(private actions$: Actions, private backend: BackendService) { }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NoteListComponent.html":{"url":"components/NoteListComponent.html","title":"component - NoteListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NoteListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/operations/note/components/notes/notes.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                enccrm-note-list\n            \n\n            \n                styleUrls\n                ./notes.component.scss\n            \n\n\n            \n                template\n                Note List\n\n  \n  \n    Note Types\n    \n      {{type}}\n    \n  \n     0; else noData\"\n      [data]=\"data\"\n      [columns]=\"columns\"\n      [displayNames]=\"displayNames\"\n      [pipesNeeded]=\"pipeOptions\"\n      [pipeType]=\"'note'\"\n      [linksNeeded]=\"['title']\"\n      (onZoom)=\"detailNote($event)\"\n    >\n    No Data Yet\n  \n  \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                            \n                                data\n                            \n                            \n                                dataSaved\n                            \n                            \n                                dataSub\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                displayNames\n                            \n                            \n                                notes$\n                            \n                            \n                                noteTypeFilter\n                            \n                            \n                                noteTypes\n                            \n                            \n                                pipeOptions\n                            \n                            \n                                    Private\n                                subs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteNote\n                            \n                            \n                                detailNote\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                noteFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/operations/note/components/notes/notes.component.ts:80\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteNote\n                        \n                    \n                \n            \n            \n                \ndeleteNote(event: fromOperations.Note)\n                \n            \n\n\n            \n                \n                    Defined in src/app/operations/note/components/notes/notes.component.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                fromOperations.Note\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        detailNote\n                        \n                    \n                \n            \n            \n                \ndetailNote(event: fromOperations.Note)\n                \n            \n\n\n            \n                \n                    Defined in src/app/operations/note/components/notes/notes.component.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                fromOperations.Note\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/operations/note/components/notes/notes.component.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/operations/note/components/notes/notes.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noteFilter\n                        \n                    \n                \n            \n            \n                \nnoteFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/operations/note/components/notes/notes.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'title', //choices\n    'noteType', //choices \n    'priority',\n    'contact',\n    'body',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/note/components/notes/notes.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Note[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/note/components/notes/notes.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSaved\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Note[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/note/components/notes/notes.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/note/components/notes/notes.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/note/components/notes/notes.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'Title',\n    'Note Type',\n    'Priority', //choices\n    'Contact',\n    'Body' //choices\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/note/components/notes/notes.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notes$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/note/components/notes/notes.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noteTypeFilter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                \n                    \n                        Default value : new FormControl\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/note/components/notes/notes.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noteTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    NoteType[0],\n    NoteType[1],\n    NoteType[2],\n    NoteType[3]\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/note/components/notes/notes.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pipeOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/note/components/notes/notes.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new SubSink()\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/note/components/notes/notes.component.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Store } from '@ngrx/store';\nimport { Note, NoteOptions, NoteType } from '@operations/note';\n\nimport * as fromOperations from '@operations/index';\nimport { Task } from '@operations/index';\nimport { taskActions } from '@operations/task/state';\nimport { selectTasks } from '@operations/task/state/selectors/task.selectors';\nimport { Observable, of, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SubSink } from 'subsink';\nimport * as fromNoteState from '../../state/index';\nimport { NoteDetailComponent } from '../note-detail/note-detail.component';\n\n\n@Component({\n  selector: 'enccrm-note-list',\n  template: `\n          Note List\n          \n             \n            \n              Note Types\n              \n                {{type}}\n              \n            \n               0; else noData\"\n                [data]=\"data\"\n                [columns]=\"columns\"\n                [displayNames]=\"displayNames\"\n                [pipesNeeded]=\"pipeOptions\"\n                [pipeType]=\"'note'\"\n                [linksNeeded]=\"['title']\"\n                (onZoom)=\"detailNote($event)\"\n              >\n              No Data Yet\n            \n             \n  `,\n  styleUrls: ['./notes.component.scss']\n})\nexport class NoteListComponent implements OnInit {\n\n  private subs = new SubSink();\n\n  dataSub: Subscription = new Subscription;\n  data: Note[] = [];\n  dataSaved: Note[] = [];\n\n\n  columns: string[] = [\n    'title', //choices\n    'noteType', //choices \n    'priority',\n    'contact',\n    'body',\n  ];\n  displayNames: string[] = [\n    'Title',\n    'Note Type',\n    'Priority', //choices\n    'Contact',\n    'Body' //choices\n  ];\n\n  noteTypes: string[] = [\n    NoteType[0],\n    NoteType[1],\n    NoteType[2],\n    NoteType[3]\n  ]\n\n  pipeOptions: string[] = [];\n  noteTypeFilter: FormControl = new FormControl;\n\n  notes$: Observable | undefined;\n\n  constructor(private store: Store, public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.noteTypeFilter = new FormControl(this.noteTypes);\n    this.pipeOptions = [\n      NoteOptions[0],\n      NoteOptions[1],\n      NoteOptions[2],\n      NoteOptions[3]\n    ]\n\n    this.store.dispatch(fromNoteState.noteActions.loadNotes());\n    this.store.dispatch(taskActions.loadTasks());\n\n    this.notes$ = this.store.select(fromNoteState.selectNotes);\n\n    this.subs.sink = this.notes$.subscribe(data => {\n      this.data = data;\n      this.dataSaved = [...data];\n    });\n    this.subs.sink = this.noteTypeFilter.valueChanges.subscribe(() => this.noteFilter());\n\n  }\n\n  noteFilter() {\n    this.data = this.dataSaved.filter(d => this.noteTypeFilter.value.includes(NoteType[+d.noteType]));\n  }\n\n  detailNote(event: fromOperations.Note) {\n    const dialogRef = this.dialog.open(NoteDetailComponent, {\n      width: '90vw',\n      height: '45rem',\n      data: {\n        note: event\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n\n      if (result.action === 'delete') {\n        this.store.dispatch(fromNoteState.noteActions.deleteNote(result.note));\n      } else { //add\n\n      }\n\n    });\n  }\n\n  deleteNote(event: fromOperations.Note) {\n    console.log(\"Need to implement\");\n  }\n\n  ngOnDestroy() {\n    this.subs.unsubscribe()\n  }\n\n\n}\n\n    \n\n\n    \n                \n                    ./notes.component.scss\n                \n                .container {\n    height: 90%;\n    overflow: auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Note List        Note Types          {{type}}           0; else noData\"      [data]=\"data\"      [columns]=\"columns\"      [displayNames]=\"displayNames\"      [pipesNeeded]=\"pipeOptions\"      [pipeType]=\"\\'note\\'\"      [linksNeeded]=\"[\\'title\\']\"      (onZoom)=\"detailNote($event)\"    >    No Data Yet    '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'enccrm-add-contact'},{'name': 'AddNoteComponent', 'selector': 'enccrm-add-note'},{'name': 'AddTaskComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'enccrm-button'},{'name': 'ContactDetailComponent', 'selector': 'enccrm-contact-detail'},{'name': 'ContactListComponent', 'selector': 'enccrm-contact-list'},{'name': 'DashboardComponent', 'selector': 'enccrm-dashboard'},{'name': 'FormComponent', 'selector': 'enccrm-form'},{'name': 'GeneralCardComponent', 'selector': 'enccrm-general-card'},{'name': 'HeaderComponent', 'selector': 'enccrm-header'},{'name': 'LoginComponent', 'selector': 'enccrm-login'},{'name': 'ModalCardComponent', 'selector': 'enccrm-modal-card'},{'name': 'NoteDetailComponent', 'selector': 'enccrm-note-detail'},{'name': 'NoteListComponent', 'selector': 'enccrm-note-list'},{'name': 'SidenavComponent', 'selector': 'enccrm-sidenav'},{'name': 'TabComponent', 'selector': 'enccrm-tab'},{'name': 'TableComponent', 'selector': 'enccrm-table'},{'name': 'TaskDetailComponent', 'selector': 'enccrm-task-detail'},{'name': 'TasksComponent', 'selector': 'enccrm-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NoteListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NoteState.html":{"url":"interfaces/NoteState.html","title":"interface - NoteState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NoteState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/operations/note/state/reducers/notes.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                        \n                                            loading\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityState } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\nimport * as fromOperations from '@operations/index';\nimport * as fromNoteAction from '../actions/notes.actions';\n\nexport const noteFeatureKey = 'note';\n\nexport interface NoteState extends EntityState {\n    loaded: boolean;\n    loading: boolean;\n    error: any;\n}\n\nexport const noteAdapter = createEntityAdapter();\n\nconst initialNoteState = noteAdapter.getInitialState({\n    loaded: false,\n    loading: false,\n    error: null,\n})\n\n\n\n\nexport const noteReducer = createReducer(\n    initialNoteState,\n    //load\n    on(fromNoteAction.noteActions.loadNoteSuccess, (state, action) => {\n        return noteAdapter.setAll(action.notes, {\n            ...state,\n            loaded: true,\n            loading: false\n        });\n    }),\n    on(fromNoteAction.noteActions.loadNotesFail, (state, action) => {\n        return {\n            ...state,\n            loaded: true,\n            loading: false,\n            error: action.error\n        }\n    }),\n\n    //add\n    on(fromNoteAction.noteActions.addNoteSuccess, (state, action) => {\n        return noteAdapter.addOne(action.note, state)\n    }),\n    on(fromNoteAction.noteActions.addNoteFail, (state, action) => {\n        return { ...state, error: action.error }\n    }),\n\n    //update\n    // on(fromNoteAction.noteActions.updateNoteSuccess, (state,action) => {\n    //     return noteAdapter.updateOne(action.note,state)\n    // }),\n    // on(fromNoteAction.noteActions.updateNoteFail, (state,action) => {\n    //     return {...state,error:action.error}\n    // }),\n\n    //delete\n    // on(fromNoteAction.noteActions.deleteNoteSuccess, (state,action) => {\n    //     return noteAdapter.removeOne(action.note,state)\n    // }),\n    // on(fromNoteAction.noteActions.deleteNoteFail, (state,action) => {\n    //     return {...state,error:action.error}\n    // })\n)\n\nexport const { selectAll } = noteAdapter.getSelectors();\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotesModule.html":{"url":"modules/NotesModule.html","title":"module - NotesModule","body":"\n                   \n\n\n\n\n    Modules\n    NotesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NotesModule\n\n\n\ncluster_NotesModule_imports\n\n\n\ncluster_NotesModule_declarations\n\n\n\n\nAddNoteComponent\n\nAddNoteComponent\n\n\n\nNotesModule\n\nNotesModule\n\nNotesModule -->\n\nAddNoteComponent->NotesModule\n\n\n\n\n\nNoteDetailComponent\n\nNoteDetailComponent\n\nNotesModule -->\n\nNoteDetailComponent->NotesModule\n\n\n\n\n\nNoteListComponent\n\nNoteListComponent\n\nNotesModule -->\n\nNoteListComponent->NotesModule\n\n\n\n\n\nNotesRoutingModule\n\nNotesRoutingModule\n\nNotesModule -->\n\nNotesRoutingModule->NotesModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nNotesModule -->\n\nSharedModule->NotesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/operations/note/notes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddNoteComponent\n                        \n                        \n                            NoteDetailComponent\n                        \n                        \n                            NoteListComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            NoteDetailComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NotesRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromNotes from './state/reducers/notes.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { NoteEffects } from './state/effects/notes.effects';\nimport { NotesRoutingModule } from './notes.routing.module';\nimport { SharedModule } from '@shared/shared.module';\nimport { NoteListComponent } from './components/notes/notes.component';\nimport { AddNoteComponent } from './components/add-note/add-note.component';\nimport { NoteDetailComponent } from './components/note-detail/note-detail.component';\n\n\n\n@NgModule({\n  declarations: [NoteListComponent,AddNoteComponent,NoteDetailComponent],\n  imports: [\n    CommonModule,\n    NotesRoutingModule,\n    SharedModule,\n    StoreModule.forFeature(fromNotes.noteFeatureKey, fromNotes.noteReducer),\n    EffectsModule.forFeature([NoteEffects])\n  ],\n  entryComponents:[NoteDetailComponent]\n})\nexport class NotesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotesRoutingModule.html":{"url":"modules/NotesRoutingModule.html","title":"module - NotesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    NotesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/operations/note/notes.routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { AddNoteComponent } from \"./components/add-note/add-note.component\";\nimport { NoteListComponent } from \"./components/notes/notes.component\";\n\n\nconst routes:Routes = [\n    {path:'', component: NoteListComponent},\n    {path:'note-list', component: NoteListComponent},\n    {path:'note-add', component: AddNoteComponent}\n\n]\n \n@NgModule({\n imports:[RouterModule.forChild(routes)], \n exports:[RouterModule],  \n})\nexport class NotesRoutingModule {\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/RatingColorPipe.html":{"url":"pipes/RatingColorPipe.html","title":"pipe - RatingColorPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  RatingColorPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/operations/contact/pipes/rating-color.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        ratingColor\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/operations/contact/pipes/rating-color.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'ratingColor'\n})\nexport class RatingColorPipe implements PipeTransform {\n\n  transform(value: number): string {\n    switch (true) {\n      case value \n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_declarations\n\n\n\n\nButtonComponent\n\nButtonComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nButtonComponent->SharedModule\n\n\n\n\n\nContactDetailTranslatorPipe\n\nContactDetailTranslatorPipe\n\nSharedModule -->\n\nContactDetailTranslatorPipe->SharedModule\n\n\n\n\n\nEnumUserDisplayTranslatorPipe\n\nEnumUserDisplayTranslatorPipe\n\nSharedModule -->\n\nEnumUserDisplayTranslatorPipe->SharedModule\n\n\n\n\n\nFormComponent\n\nFormComponent\n\nSharedModule -->\n\nFormComponent->SharedModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nSharedModule -->\n\nTableComponent->SharedModule\n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nSharedModule->ButtonComponent \n\n\n\n\n\nCardsModule \n\nCardsModule \n\nCardsModule  -->\n\nSharedModule->CardsModule \n\n\n\n\n\nContactDetailTranslatorPipe \n\nContactDetailTranslatorPipe \n\nContactDetailTranslatorPipe  -->\n\nSharedModule->ContactDetailTranslatorPipe \n\n\n\n\n\nEnumUserDisplayTranslatorPipe \n\nEnumUserDisplayTranslatorPipe \n\nEnumUserDisplayTranslatorPipe  -->\n\nSharedModule->EnumUserDisplayTranslatorPipe \n\n\n\n\n\nFormComponent \n\nFormComponent \n\nFormComponent  -->\n\nSharedModule->FormComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nTabModule \n\nTabModule \n\nTabModule  -->\n\nSharedModule->TabModule \n\n\n\n\n\nTableComponent \n\nTableComponent \n\nTableComponent  -->\n\nSharedModule->TableComponent \n\n\n\n\n\nCardsModule\n\nCardsModule\n\nSharedModule -->\n\nCardsModule->SharedModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\nTabModule\n\nTabModule\n\nSharedModule -->\n\nTabModule->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ButtonComponent\n                        \n                        \n                            ContactDetailTranslatorPipe\n                        \n                        \n                            EnumUserDisplayTranslatorPipe\n                        \n                        \n                            FormComponent\n                        \n                        \n                            TableComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CardsModule\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            TabModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ButtonComponent\n                        \n                        \n                            CardsModule\n                        \n                        \n                            ContactDetailTranslatorPipe\n                        \n                        \n                            EnumUserDisplayTranslatorPipe\n                        \n                        \n                            FormComponent\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            TabModule\n                        \n                        \n                            TableComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormComponent } from './form/form.component';\nimport { CardsModule } from './cards/cards.module';\nimport { TabModule } from './tab/tab.module';\nimport { ButtonComponent } from './button/button.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from './material/material.module';\nimport { RouterModule } from '@angular/router';\nimport { EnumUserDisplayTranslatorPipe } from './pipes/contact-enum-display';\nimport { TableComponent } from './table/table.component';\nimport { ContactDetailTranslatorPipe } from './pipes/contact-detail-translator.pipe';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromTask from '../operations/task/state/reducers/task.reducer';\nimport * as fromNote from '../operations/note/state/reducers/notes.reducer';\nimport * as fromContactReducer from '@operations/contact/state';\nimport { EffectsModule } from '@ngrx/effects';\nimport { TaskEffects } from '@operations/task/state';\n\nconst modules = [\n  CardsModule,\n  TabModule,\n  CommonModule,\n  ReactiveFormsModule,\n  FormsModule,\n  MaterialModule,\n  RouterModule,\n  StoreModule.forFeature(fromTask.taskFeatureKey, fromTask.taskReducer), EffectsModule.forFeature([TaskEffects]),\n  StoreModule.forFeature(fromContactReducer.contactFeatureKey, fromContactReducer.contactReducer),\n  StoreModule.forFeature(fromNote.noteFeatureKey, fromNote.noteReducer),\n]\n\n\n@NgModule({\n  declarations: [\n    FormComponent,\n    ButtonComponent,\n    TableComponent,\n    EnumUserDisplayTranslatorPipe,\n    ContactDetailTranslatorPipe\n\n  ],\n  imports: [\n    modules\n  ],\n  exports:[\n    modules,\n    FormComponent,\n    ButtonComponent,\n    TableComponent,\n    EnumUserDisplayTranslatorPipe,\n    ContactDetailTranslatorPipe\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidenavComponent.html":{"url":"components/SidenavComponent.html","title":"component - SidenavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidenavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/layout/sidenav/sidenav.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                enccrm-sidenav\n            \n\n            \n                styleUrls\n                ./sidenav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidenav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sidenav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/layout/sidenav/sidenav.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {} as User\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/layout/sidenav/sidenav.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/sidenav/sidenav.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/sidenav/sidenav.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        sidenav\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatSidenav)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/core/layout/sidenav/sidenav.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { User } from '@core/auth/models/users';\nimport { Store } from '@ngrx/store';\n\n@Component({\n  selector: 'enccrm-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent implements OnInit {\n\n  @Input() user: User = {} as User;\n  @ViewChild(MatSidenav) sidenav: any;\n\n  constructor(private store:Store) { }\n\n  ngOnInit(): void {\n\n  }\n\n  toggle() {\n    this.sidenav.toggle()\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        Welcome {{ user.displayName }}\n      \n      \n    \n    \n      \n        \n          contacts\n           Contacts \n        \n        \n          \n            \n              Contact List\n            \n          \n   \n          \n            \n              Add Contact\n            \n          \n        \n          \n          \n            add_task\n             Tasks \n          \n          \n            \n              \n                Task List\n              \n            \n     \n            \n              \n                Add Task\n              \n            \n          \n        \n            \n            \n              text_snippet\n               Notes \n            \n            \n              \n                \n                  Note List\n                \n              \n       \n              \n                \n                  Add Note\n                \n              \n            \n        \n          leaderboard\n           Metrics \n        \n        \n          \n            \n               Dashboard \n            \n           \n  \n        \n      \n    \n  \n\n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./sidenav.component.scss\n                \n                mat-sidenav-container {\n  padding: 0;\n  // height: 100vh;\n  // width: 100vw;\n  height: 100%;\n  width: 100%;\n  // overflow-y:hidden;\n  // position: relative;\n  background-color: var(--accent-color);\n\n  color: #361c12;\n\n  mat-sidenav {\n    padding: 0;\n    display: flex;\n    justify-content: center;\n    width: 14vmax;\n    height: 100%;\n    overflow: hidden;\n    -ms-overflow-style: none; /* IE and Edge */\n    scrollbar-width: none; /* Firefox */\n    // background-color: #fdeaff;\n    position: relative;\n\n    background: #cc997f;\n    background: -webkit-linear-gradient(bottom right, #cc997f, #efe0d8);\n    background: -moz-linear-gradient(bottom right, #cc997f, #efe0d8);\n    background: linear-gradient(to top left, #cc997f, #efe0d8);\n\n    .profile-photo-container {\n      width: 95%;\n      margin: 2vmax auto;\n      text-align: center;\n\n      img {\n        border-radius: 50%;\n        background-size: contain;\n        // position: absolute;\n        // top:-2%;\n        // left: 0;\n        width: 50%;\n      }\n      .content {\n      }\n    }\n  }\n  .links {\n    height: auto;\n    overflow-y: hidden;\n    &__header {\n      font-size: .9vmax;\n      font-weight: 500;\n      margin: 1vmax 0.1vmax -5vmax 1;\n      text-transform: uppercase;\n    }\n\n  \n    mat-nav-list {\n      margin-top: -2vh;\n      mat-icon {\n        font-weight: 500;\n        margin-right: 0.2vmax;\n      }\n\n      #logout {\n        margin-top: 5vh;\n      }\n    }\n  }\n \n  mat-sidenav-content {\n    width: 100;\n    height: 100%;\n    position: absolute;\n    top: 2vmax;\n    left: 10vmax;\n  }\n}\n\n.link-text {\n  // margin: 0.5vh 0;\n  font-size: .8vmax;\n  color: rgb(43, 39, 68);\n  font-weight: 500;\n}\n\na {\n  font-size: 1.2vmax;\n\n  &:active,\n  a:focus,\n  a:target {\n    text-indent: 1vmax;\n    font-size: 1.2vmax;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Welcome {{ user.displayName }}                                            contacts           Contacts                                                     Contact List                                                             Add Contact                                                              add_task             Tasks                                                               Task List                                                                         Add Task                                                                                  text_snippet               Notes                                                                         Note List                                                                                     Add Note                                                            leaderboard           Metrics                                                      Dashboard                                                                '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'enccrm-add-contact'},{'name': 'AddNoteComponent', 'selector': 'enccrm-add-note'},{'name': 'AddTaskComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'enccrm-button'},{'name': 'ContactDetailComponent', 'selector': 'enccrm-contact-detail'},{'name': 'ContactListComponent', 'selector': 'enccrm-contact-list'},{'name': 'DashboardComponent', 'selector': 'enccrm-dashboard'},{'name': 'FormComponent', 'selector': 'enccrm-form'},{'name': 'GeneralCardComponent', 'selector': 'enccrm-general-card'},{'name': 'HeaderComponent', 'selector': 'enccrm-header'},{'name': 'LoginComponent', 'selector': 'enccrm-login'},{'name': 'ModalCardComponent', 'selector': 'enccrm-modal-card'},{'name': 'NoteDetailComponent', 'selector': 'enccrm-note-detail'},{'name': 'NoteListComponent', 'selector': 'enccrm-note-list'},{'name': 'SidenavComponent', 'selector': 'enccrm-sidenav'},{'name': 'TabComponent', 'selector': 'enccrm-tab'},{'name': 'TableComponent', 'selector': 'enccrm-table'},{'name': 'TaskDetailComponent', 'selector': 'enccrm-task-detail'},{'name': 'TasksComponent', 'selector': 'enccrm-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidenavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabComponent.html":{"url":"components/TabComponent.html","title":"component - TabComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TabComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/tab/tab/tab.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                enccrm-tab\n            \n\n            \n                styleUrls\n                ./tab.component.scss\n            \n\n\n            \n                template\n                  \n      \n          \n              \n          \n          \n              \n          \n           2\" label=\"{{labels[2]}}\">\n              \n          \n        \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                labels\n                            \n                            \n                                selectedIndex\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/tab/tab/tab.component.ts:26\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        labels\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/tab/tab/tab.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/tab/tab/tab.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/tab/tab/tab.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Input } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'enccrm-tab',\n  template: `\n  \n      \n           \n              \n           \n           \n              \n          \n           2\" label=\"{{labels[2]}}\"> \n              \n          \n        \n\n            `,\n  styleUrls: ['./tab.component.scss']\n})\nexport class TabComponent implements OnInit {\n\n  @Input() labels: string[] = [];\n  @Input() selectedIndex: number = 0;;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n\n    \n                \n                    ./tab.component.scss\n                \n                @import \"../../../../styles/mixins\";\n\n// mat-card {\n//   background-color: white;\n//     width: 75vmax;\n//     border-radius: .7vmax;\n//     height: auto;\n\n//     @include card-shadow;\n// }\n\n\n::ng-deep .mat-tab-group.mat-primary .mat-ink-bar{\n    background-color: #c7a4ca !important;\n    \n}\n\n::ng-deep .mat-tab-label {\n  color: #300435;\n  font-size: .9vmax;\n}\n\n::ng-deep .mat-tab-list .mat-tab-label-active {\n    color: #300435;\n    font-size: 1.4vmax;\n    font-weight: 500;\n    text-transform: uppercase;\n\n  }\n\n\n\n\n  ::ng-deep .mat-tab-header, .mat-tab-nav-bar {\n    border-bottom: 0;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                       2\" label=\"{{labels[2]}}\">                                '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'enccrm-add-contact'},{'name': 'AddNoteComponent', 'selector': 'enccrm-add-note'},{'name': 'AddTaskComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'enccrm-button'},{'name': 'ContactDetailComponent', 'selector': 'enccrm-contact-detail'},{'name': 'ContactListComponent', 'selector': 'enccrm-contact-list'},{'name': 'DashboardComponent', 'selector': 'enccrm-dashboard'},{'name': 'FormComponent', 'selector': 'enccrm-form'},{'name': 'GeneralCardComponent', 'selector': 'enccrm-general-card'},{'name': 'HeaderComponent', 'selector': 'enccrm-header'},{'name': 'LoginComponent', 'selector': 'enccrm-login'},{'name': 'ModalCardComponent', 'selector': 'enccrm-modal-card'},{'name': 'NoteDetailComponent', 'selector': 'enccrm-note-detail'},{'name': 'NoteListComponent', 'selector': 'enccrm-note-list'},{'name': 'SidenavComponent', 'selector': 'enccrm-sidenav'},{'name': 'TabComponent', 'selector': 'enccrm-tab'},{'name': 'TableComponent', 'selector': 'enccrm-table'},{'name': 'TaskDetailComponent', 'selector': 'enccrm-task-detail'},{'name': 'TasksComponent', 'selector': 'enccrm-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TabModule.html":{"url":"modules/TabModule.html","title":"module - TabModule","body":"\n                   \n\n\n\n\n    Modules\n    TabModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TabModule\n\n\n\ncluster_TabModule_declarations\n\n\n\ncluster_TabModule_imports\n\n\n\ncluster_TabModule_exports\n\n\n\n\nTabComponent\n\nTabComponent\n\n\n\nTabModule\n\nTabModule\n\nTabModule -->\n\nTabComponent->TabModule\n\n\n\n\n\nTabComponent \n\nTabComponent \n\nTabComponent  -->\n\nTabModule->TabComponent \n\n\n\n\n\nCardsModule\n\nCardsModule\n\nTabModule -->\n\nCardsModule->TabModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nTabModule -->\n\nMaterialModule->TabModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/tab/tab.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TabComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CardsModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TabComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TabComponent } from './tab/tab.component';\nimport { MaterialModule } from '@shared/material/material.module';\nimport { CardsModule } from '@shared/cards/cards.module';\n\n\n\n@NgModule({\n  declarations: [\n    TabComponent\n  ],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    CardsModule\n  ],\n  exports:[TabComponent]\n})\nexport class TabModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TableComponent.html":{"url":"components/TableComponent.html","title":"component - TableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/table/table.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                enccrm-table\n            \n\n            \n                styleUrls\n                ./table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSaved\n                            \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                paginator\n                            \n                            \n                                refColumns\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applySearchFilter\n                            \n                            \n                                drop\n                            \n                            \n                                launchModal\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClicked\n                            \n                            \n                                resetTableAndFilter\n                            \n                            \n                                setupSortAndPagination\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                columns\n                            \n                            \n                                data\n                            \n                            \n                                displayNames\n                            \n                            \n                                linksNeeded\n                            \n                            \n                                pipesNeeded\n                            \n                            \n                                pipeType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onZoom\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/table/table.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        action\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/table/table.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        columns\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/table/table.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/table/table.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        displayNames\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/table/table.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        linksNeeded\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/table/table.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pipesNeeded\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/table/table.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pipeType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/table/table.component.ts:25\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onZoom\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/table/table.component.ts:28\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applySearchFilter\n                        \n                    \n                \n            \n            \n                \napplySearchFilter(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/table/table.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drop\n                        \n                    \n                \n            \n            \n                \ndrop(event: CdkDragDrop)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/table/table.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            CdkDragDrop\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        launchModal\n                        \n                    \n                \n            \n            \n                \nlaunchModal(entity: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/table/table.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/table/table.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/table/table.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/table/table.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClicked\n                        \n                    \n                \n            \n            \n                \nonClicked(type: string, event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/table/table.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetTableAndFilter\n                        \n                    \n                \n            \n            \n                \nresetTableAndFilter(data: fromContacts.Contact[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/table/table.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                fromContacts.Contact[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupSortAndPagination\n                        \n                    \n                \n            \n            \n                \nsetupSortAndPagination()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/table/table.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dataSaved\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/table/table.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatTableDataSource\n\n                    \n                \n                \n                    \n                        Default value : new MatTableDataSource\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/table/table.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/table/table.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginator)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/table/table.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/table/table.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSort\n\n                    \n                \n                \n                    \n                        Default value : new MatSort\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatSort)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/table/table.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ViewChild, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport * as fromContacts from '@operations/contact/index';\nimport { ContactDetailComponent } from '@operations/contact/components/contact-detail/contact-detail.component';\nimport { Store } from '@ngrx/store';\n\n\n@Component({\n  selector: 'enccrm-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class TableComponent implements OnInit {\n\n  @Input() data: any[] = [];\n  @Input() columns: string[] = [];\n  @Input() displayNames: string[] = [];\n  @Input() action = false;\n  @Input() pipesNeeded: string[] = [];\n  @Input() pipeType: string = ''\n  @Input() linksNeeded: string[] = [];\n\n  @Output() onZoom = new EventEmitter();\n\n  dataSaved: any[] = [];\n\n  displayedColumns: string[] = [];\n  dataSource: MatTableDataSource = new MatTableDataSource;\n  refColumns: string[] = []\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort)\n  sort: MatSort = new MatSort;\n\n\n\n  constructor(\n    private store: Store\n  ) {\n  }\n\n  ngOnInit(): void {\n    console.dir(this.linksNeeded);\n    console.dir(this.pipesNeeded);\n    this.displayedColumns = this.displayNames;\n    this.columns = this.columns.filter(c => c !== \"id\");\n    this.dataSaved = [...this.data];\n  }\n\n  ngAfterViewInit() {\n    this.resetTableAndFilter(this.data);\n  }\n\n  ngOnChanges(): void {\n    this.resetTableAndFilter(this.data);\n  }\n\n  resetTableAndFilter(data: fromContacts.Contact[]) {\n    this.dataSource = new MatTableDataSource([...data]);\n    this.setupSortAndPagination();\n\n\n  }\n\n  applySearchFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  drop(event: CdkDragDrop) {\n    moveItemInArray(this.columns, event.previousIndex, event.currentIndex);\n  }\n\n\n  onClicked(type: string, event: any) {\n    // if(type==='zoom') {\n    //   this.rowClick(event);\n    // } else if(type==='delete') {\n    //    if(confirm(\"Are you sure you wanted to delete this concept?\")) {\n    //      this.onDelete.emit(event);\n    //    }\n    // }\n  }\n\n  setupSortAndPagination() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  launchModal(entity: any) {\n    this.onZoom.emit(entity);\n  }\n\n  // rowClick(event:fromContacts.Contact) {\n  //   const dialogRef = this.dialog.open(ContactDetailComponent, {\n  //     width: '90%',\n  //     height: '45rem',\n  //     data: {\n  //       contact:event\n  //     }\n  //   });\n\n  //   dialogRef.afterClosed().subscribe(result => {\n\n  //     if(result.action === 'update') {\n  //       if (result.type === 'concept') {\n  //         this.backend.editConcept(result.event as Contact);\n  //       } else { //note\n  //          this.backend.editNotes(result.event as INote);\n  //       }\n  //     } else { //add\n  //       if (result.type === 'concept') {\n  //         this.backend.addConcepts(result.event as Contact);\n  //       } else { //note\n  //           this.backend.addNoteInDB(result.event as INote);\n  //       }\n  //     }\n\n  //   });\n  // }\n\n\n\n\n}\n\n    \n\n    \n        \n\n\n   \n    Search...\n    \n  \n  \n         0; else noData\">\n\n        \n                    \n                    \n                            \n                                \n                                    \n                                         {{displayedColumns[i]}} \n                                        \n                                           \n                                        \n                                    \n                                \n                                \n                                    \n                                         {{displayedColumns[i]}} \n                                        \n                                            \n                                    \n                                    \n                                \n                             \n                       \n                            \n                                    \n                                        \n                                             {{displayedColumns[i]}} \n                                            \n                                               {{row[c]}}\n                                            \n                                        \n                                    \n                                    \n                                        \n                                            \n                                                 {{displayedColumns[i]}} \n                                                \n                                                    {{row[c].display}}\n                                            \n                                            \n                                        \n                                        \n                                            \n                                                 {{displayedColumns[i]}} \n                                                \n                                                    {{row[c]}}\n                                            \n                                            \n                                        \n                                    \n                            \n                   \n                    \n    \n        \n        \n    \n        \n        \n            No data matching available \"{{input.value}}\"\n        \n     \n     \n     \n         \n            No Data for this Filter.\n         \n     \n  \n\n\n\n\n\n    \n\n    \n                \n                    ./table.component.scss\n                \n                .main-container {\n    height: 65vh;\n    width: 100%;\n    // overflow-x: hidden;\n    overflow: auto;\n  \n    .mat-form-field {\n      font-size: 1rem;\n      width: 100%;\n    }\n  \n    .filter-buttons {\n      display: flex;\n      justify-content: center;\n      margin: 2rem 0;\n    }\n    \n  \n       table {\n        width: 100%;\n        border-radius: 5%;\n        height: 100%;\n\n        td,\n        th {\n          word-wrap: initial;\n          display: table-cell;\n        //   padding: 0px 5px;\n          line-break: unset;\n          width: auto;\n          white-space: nowrap;\n          overflow: hidden;\n          vertical-align: middle;\n          font-size: 1.2rem;\n          color: black;\n          \n       \n        }\n\n        td:nth-child(1),td:nth-child(2), td:nth-child(3) {\n         padding-right: 3vw;\n        }\n\n        td {\n            font-size: .9rem;\n            text-align: center;\n        }\n\n        td:last-child {\n          text-overflow: ellipsis;\n          text-align: left;\n          padding-left: 5vw;\n\n        }\n  \n  \n        tr:nth-child(even) {\n          background-color: var(--off-white);\n        }\n    \n        \n        tr:hover {\n          animation: myfirst 4s 1;\n          -webkit-animation: myfirst 4s 1; /* Safari and Chrome */\n        }\n    \n        th {\n          text-transform: uppercase;\n           background-color: var(--primary-darker-color);\n           color: white;\n        }\n\n        th:last-child {\n          padding-left: 5vw;\n        }\n\n   \n        \n      }\n    \n   \n    \n  \n    \n  // }\n  \n  .table-container {\n     height: 50vh;\n     width: 100%;\n     overflow: auto;\n  }\n  \n  \n    \n  \n    .filter-options {\n      display: flex;\n      justify-content: flex-start;\n    }\n   \n  \n    @keyframes myfirst {\n      0% {\n        background: #fae9d5;\n        \n      }\n      25% {\n        background: #f78d64;\n        color: blanchedalmond;\n        \n      }\n      75% {\n        background: #f8c182;\n        color: white;\n     \n      }\n      100% {\n        background: #fae9d5;\n       \n      }\n    }\n    \n    .table-link {\n      cursor: var(--link-cursor);\n    }\n  \n    a {\n      color: rgb(197, 83, 231);\n    }\n    \n    .mat-paginator-container {\n      font-size: var(--table-control-font-size);\n      border: var(--off-gray);\n    }\n    \n    .mat-paginator-container {\n      font-size: var(--table-control-font-size);\n      border: black;\n    }\n    \n    .noDataFilter {\n      text-align: center;\n      margin-top: 10%;\n    }\n   }\n  \n   \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       Search...                 0; else noData\">                                                                                                                                                                                         {{displayedColumns[i]}}                                                                                                                                                                                                                                                                                                             {{displayedColumns[i]}}                                                                                                                                                                                                                                                                                                                                                                                                      {{displayedColumns[i]}}                                                                                            {{row[c]}}                                                                                                                                                                                                                                                                                                 {{displayedColumns[i]}}                                                                                                     {{row[c].display}}                                                                                                                                                                                                                                                                     {{displayedColumns[i]}}                                                                                                     {{row[c]}}                                                                                                                                                                                                                                                                                           No data matching available \"{{input.value}}\"                                            No Data for this Filter.                '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'enccrm-add-contact'},{'name': 'AddNoteComponent', 'selector': 'enccrm-add-note'},{'name': 'AddTaskComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'enccrm-button'},{'name': 'ContactDetailComponent', 'selector': 'enccrm-contact-detail'},{'name': 'ContactListComponent', 'selector': 'enccrm-contact-list'},{'name': 'DashboardComponent', 'selector': 'enccrm-dashboard'},{'name': 'FormComponent', 'selector': 'enccrm-form'},{'name': 'GeneralCardComponent', 'selector': 'enccrm-general-card'},{'name': 'HeaderComponent', 'selector': 'enccrm-header'},{'name': 'LoginComponent', 'selector': 'enccrm-login'},{'name': 'ModalCardComponent', 'selector': 'enccrm-modal-card'},{'name': 'NoteDetailComponent', 'selector': 'enccrm-note-detail'},{'name': 'NoteListComponent', 'selector': 'enccrm-note-list'},{'name': 'SidenavComponent', 'selector': 'enccrm-sidenav'},{'name': 'TabComponent', 'selector': 'enccrm-tab'},{'name': 'TableComponent', 'selector': 'enccrm-table'},{'name': 'TaskDetailComponent', 'selector': 'enccrm-task-detail'},{'name': 'TasksComponent', 'selector': 'enccrm-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/operations/task/models/interfaces/task.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contact\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            priority\n                                        \n                                \n                                \n                                        \n                                            taskName\n                                        \n                                \n                                \n                                        \n                                            taskType\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contact\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contact:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        taskName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        taskName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        taskType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        taskType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Task {\n    id: string;\n    taskName: string;\n    taskType: string;\n    priority: string;\n    description: string;\n    // contact: {id:string, name:string}\n    contact:any\n}\n  \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskDetailComponent.html":{"url":"components/TaskDetailComponent.html","title":"component - TaskDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/operations/task/components/task-detail/task-detail.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                enccrm-task-detail\n            \n\n            \n                styleUrls\n                ./task-detail.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./task-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                editConceptControls\n                            \n                            \n                                editOpen\n                            \n                            \n                                priorities\n                            \n                            \n                                statuses\n                            \n                            \n                                task\n                            \n                            \n                                taskTypeChoices\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: literal type, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/operations/task/components/task-detail/task-detail.component.ts:68\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/operations/task/components/task-detail/task-detail.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/operations/task/components/task-detail/task-detail.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/operations/task/components/task-detail/task-detail.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editConceptControls\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormSetupModel[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      displayName: \"Name\",\n      controlName: \"taskName\",\n      type: \"string\",\n      required: true,\n      default: '',\n    },\n    {\n      displayName: \"Task Type\",\n      controlName: \"taskType\",\n      type: \"stringChoice\",\n      required: true,\n      default: 14,\n      stringChoices: this.taskTypeChoices\n    },\n    {\n      displayName: \"How Important?\",\n      controlName: \"priority\",\n      type: \"stringChoiceSet\",\n      required: true,\n      default: 1,\n      stringChoices: this.priorities\n    },\n    {\n      displayName: \"Description\",\n      controlName: \"description\",\n      type: \"longString\",\n      required: false,\n      default: '',\n    }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/task/components/task-detail/task-detail.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/task/components/task-detail/task-detail.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        priorities\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { name: Priorities[0], value: 0 },\n    { name: Priorities[1], value: 1 },\n    { name: Priorities[2], value: 2 },\n    { name: Priorities[3], value: 3 },\n    { name: Priorities[4], value: 4 },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/task/components/task-detail/task-detail.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statuses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { name: Statuses[0], value: 0 },\n    { name: Statuses[1], value: 1 },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/task/components/task-detail/task-detail.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task\n\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/task/components/task-detail/task-detail.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskTypeChoices\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { name: TaskType[0], value: 0 },\n    { name: TaskType[1], value: 1 },\n    { name: TaskType[2], value: 2 },\n    { name: TaskType[3], value: 3 },\n    { name: TaskType[4], value: 4 }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/task/components/task-detail/task-detail.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Priorities, Statuses, Contact } from '@operations/contact';\nimport { TaskType } from '@operations/task';\nimport { Task } from '@operations/task/models/interfaces/task';\nimport { FormSetupModel } from '@shared/models/form-setup.model';\n\n@Component({\n  selector: 'enccrm-task-detail',\n  templateUrl: './task-detail.component.html',\n  styleUrls: ['./task-detail.component.scss']\n})\nexport class TaskDetailComponent implements OnInit {\n\n  editOpen = false;\n  task!: Task;\n\n  taskTypeChoices = [\n    { name: TaskType[0], value: 0 },\n    { name: TaskType[1], value: 1 },\n    { name: TaskType[2], value: 2 },\n    { name: TaskType[3], value: 3 },\n    { name: TaskType[4], value: 4 }\n  ]\n  priorities = [\n    { name: Priorities[0], value: 0 },\n    { name: Priorities[1], value: 1 },\n    { name: Priorities[2], value: 2 },\n    { name: Priorities[3], value: 3 },\n    { name: Priorities[4], value: 4 },\n  ]\n  statuses = [\n    { name: Statuses[0], value: 0 },\n    { name: Statuses[1], value: 1 },\n  ]\n\n  editConceptControls: FormSetupModel[] = [\n    {\n      displayName: \"Name\",\n      controlName: \"taskName\",\n      type: \"string\",\n      required: true,\n      default: '',\n    },\n    {\n      displayName: \"Task Type\",\n      controlName: \"taskType\",\n      type: \"stringChoice\",\n      required: true,\n      default: 14,\n      stringChoices: this.taskTypeChoices\n    },\n    {\n      displayName: \"How Important?\",\n      controlName: \"priority\",\n      type: \"stringChoiceSet\",\n      required: true,\n      default: 1,\n      stringChoices: this.priorities\n    },\n    {\n      displayName: \"Description\",\n      controlName: \"description\",\n      type: \"longString\",\n      required: false,\n      default: '',\n    }\n  ];\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: { task: Task },\n    private dialogRef: MatDialogRef\n  ) { }\n\n  ngOnInit(): void {\n    this.task = this.data.task;\n\n\n  }\n\n  submit(event: any) {\n\n\n  }\n\n}\n\n    \n\n    \n        Task Details\n   0\">\n      \n        \n          Stop Editing?\n           \n            Want to Edit?\n          \n        \n        {{ task.taskName }}\n        \n        \n      \n      \n        {{ task.description }}\n      \n\n      \n            \n          Edit {{ task.taskName }}\n        \n      \n  \n\n  \n\n \n    \n\n    \n                \n                    ./task-detail.component.scss\n                \n                .header {\n    text-align: center;\n    margin-bottom: 2vmax;\n  \n    &__edit-choice {\n      display: grid;\n      justify-content: end;\n  \n      a {\n        color: blue;\n        text-decoration: underline;\n      }\n    }\n  }\n  .details {\n    width: 70vw;\n    margin: auto;\n    text-align: center;\n  }\n   \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Task Details   0\">                        Stop Editing?                       Want to Edit?                          {{ task.taskName }}                                    {{ task.description }}                                  Edit {{ task.taskName }}                   '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'enccrm-add-contact'},{'name': 'AddNoteComponent', 'selector': 'enccrm-add-note'},{'name': 'AddTaskComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'enccrm-button'},{'name': 'ContactDetailComponent', 'selector': 'enccrm-contact-detail'},{'name': 'ContactListComponent', 'selector': 'enccrm-contact-list'},{'name': 'DashboardComponent', 'selector': 'enccrm-dashboard'},{'name': 'FormComponent', 'selector': 'enccrm-form'},{'name': 'GeneralCardComponent', 'selector': 'enccrm-general-card'},{'name': 'HeaderComponent', 'selector': 'enccrm-header'},{'name': 'LoginComponent', 'selector': 'enccrm-login'},{'name': 'ModalCardComponent', 'selector': 'enccrm-modal-card'},{'name': 'NoteDetailComponent', 'selector': 'enccrm-note-detail'},{'name': 'NoteListComponent', 'selector': 'enccrm-note-list'},{'name': 'SidenavComponent', 'selector': 'enccrm-sidenav'},{'name': 'TabComponent', 'selector': 'enccrm-tab'},{'name': 'TableComponent', 'selector': 'enccrm-table'},{'name': 'TaskDetailComponent', 'selector': 'enccrm-task-detail'},{'name': 'TasksComponent', 'selector': 'enccrm-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TaskDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskEffects.html":{"url":"injectables/TaskEffects.html","title":"injectable - TaskEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/operations/task/state/effects/task.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addTasks$\n                            \n                            \n                                deleteTasks$\n                            \n                            \n                                loadTasks$\n                            \n                            \n                                updateTasks$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, backend: BackendService)\n                    \n                \n                        \n                            \n                                Defined in src/app/operations/task/state/effects/task.effects.ts:63\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backend\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addTasks$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(fromTaskAction.taskActions.addTask),\n      concatMap(action => {\n\n        return this.backend.addTaskInDB(action.task).pipe(\n          map((task: Task) => fromTaskAction.taskActions.addTaskSuccess({ task }))\n        )\n      }),\n      catchError(() => EMPTY)\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/task/state/effects/task.effects.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTasks$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(fromTaskAction.taskActions.deleteTask),\n      concatMap((action) => {\n        return this.backend.deleteTaskInDB(action.task).pipe(\n          map((task: Task) => fromTaskAction.taskActions.deleteTaskSuccess({ task }))\n        )\n      }),\n      catchError(error => of(fromTaskAction.taskActions.deleteTaskFail({ error })))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/task/state/effects/task.effects.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadTasks$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n\n    this.actions$.pipe(\n      ofType(fromTaskAction.taskActions.loadTasks),\n      concatMap(() => {\n        return this.backend.getTasksFromDB().pipe(\n          map((tasks: Task[]) => fromTaskAction.taskActions.loadTaskSuccess({ tasks }))\n        )\n      }),\n      catchError(error => of(fromTaskAction.taskActions.loadTasksFail({ error })))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/task/state/effects/task.effects.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTasks$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(fromTaskAction.taskActions.updateTask),\n      concatMap((action) => {\n        return this.backend.updateTaskInDB(action.task).pipe(\n          map((task: Task) => fromTaskAction.taskActions.updateTaskSuccess({ task }))\n        )\n      }),\n      catchError(error => of(fromTaskAction.taskActions.updateTaskFail({ error })))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/task/state/effects/task.effects.ts:41\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { catchError, map, concatMap } from 'rxjs/operators';\nimport { Observable, EMPTY, of } from 'rxjs';\n\nimport * as fromTaskAction from '../actions/task.actions';\nimport { BackendService } from '@core/services/backend.service';\nimport { Task } from '@operations/task';\n\n\n\n@Injectable()\nexport class TaskEffects {\n\n  loadTasks$ = createEffect(() =>\n\n    this.actions$.pipe(\n      ofType(fromTaskAction.taskActions.loadTasks),\n      concatMap(() => {\n        return this.backend.getTasksFromDB().pipe(\n          map((tasks: Task[]) => fromTaskAction.taskActions.loadTaskSuccess({ tasks }))\n        )\n      }),\n      catchError(error => of(fromTaskAction.taskActions.loadTasksFail({ error })))\n    )\n  );\n\n  addTasks$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(fromTaskAction.taskActions.addTask),\n      concatMap(action => {\n\n        return this.backend.addTaskInDB(action.task).pipe(\n          map((task: Task) => fromTaskAction.taskActions.addTaskSuccess({ task }))\n        )\n      }),\n      catchError(() => EMPTY)\n    )\n  );\n\n  updateTasks$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(fromTaskAction.taskActions.updateTask),\n      concatMap((action) => {\n        return this.backend.updateTaskInDB(action.task).pipe(\n          map((task: Task) => fromTaskAction.taskActions.updateTaskSuccess({ task }))\n        )\n      }),\n      catchError(error => of(fromTaskAction.taskActions.updateTaskFail({ error })))\n    )\n  );\n\n  deleteTasks$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(fromTaskAction.taskActions.deleteTask),\n      concatMap((action) => {\n        return this.backend.deleteTaskInDB(action.task).pipe(\n          map((task: Task) => fromTaskAction.taskActions.deleteTaskSuccess({ task }))\n        )\n      }),\n      catchError(error => of(fromTaskAction.taskActions.deleteTaskFail({ error })))\n    )\n  );\n\n\n  constructor(private actions$: Actions, private backend: BackendService) { }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TaskEnumDisplayPipe.html":{"url":"pipes/TaskEnumDisplayPipe.html","title":"pipe - TaskEnumDisplayPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TaskEnumDisplayPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/task-enum-display.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        task_display_translator\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number, valueDisplayType: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/pipes/task-enum-display.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    valueDisplayType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { TaskOptions, TaskType, Priorities, Statuses } from '@operations/task';\n\n\n@Pipe({\n  name: 'task_display_translator' \n})\nexport class TaskEnumDisplayPipe implements PipeTransform {\n\n  transform(value: number, valueDisplayType:string): string {\n        switch (valueDisplayType) {\n\n          case TaskOptions[0]:\n            return `${TaskType[value]}`;\n          case TaskOptions[1]:\n            return ` Status: ${Statuses[value]}`;\n          case TaskOptions[2]:\n            return ` Priority: ${Priorities[value]}`;\n        }\n      \n    return '';\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_declarations\n\n\n\ncluster_TaskModule_imports\n\n\n\n\nAddTaskComponent\n\nAddTaskComponent\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nAddTaskComponent->TaskModule\n\n\n\n\n\nTaskDetailComponent\n\nTaskDetailComponent\n\nTaskModule -->\n\nTaskDetailComponent->TaskModule\n\n\n\n\n\nTasksComponent\n\nTasksComponent\n\nTaskModule -->\n\nTasksComponent->TaskModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTaskModule -->\n\nSharedModule->TaskModule\n\n\n\n\n\nTaskRoutingModule\n\nTaskRoutingModule\n\nTaskModule -->\n\nTaskRoutingModule->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/operations/task/task.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddTaskComponent\n                        \n                        \n                            TaskDetailComponent\n                        \n                        \n                            TasksComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            TaskDetailComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TaskRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { EffectsModule } from \"@ngrx/effects\";\nimport { StoreModule } from \"@ngrx/store\";\nimport * as fromTask from './state/reducers/task.reducer';\nimport { TaskEffects } from './state/effects/task.effects';\nimport { TasksComponent } from './components/tasks/tasks.component';\nimport { SharedModule } from \"@shared/shared.module\";\nimport { TaskRoutingModule } from \"./task.routing.module\";\nimport { TaskDetailComponent } from \"./components/task-detail/task-detail.component\";\nimport { AddTaskComponent } from \"./components/add-task/add-task.component\";\n\n@NgModule({\n    declarations:[\n    TasksComponent,\n    TaskDetailComponent,\n    AddTaskComponent\n  ],\n    imports:[\n        // StoreModule.forFeature(fromTask.taskFeatureKey, fromTask.taskReducer), EffectsModule.forFeature([TaskEffects]),\n        SharedModule,\n        TaskRoutingModule\n    ],\n    exports:[],\n    entryComponents:[TaskDetailComponent]\n})\nexport class TaskModule {\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskRoutingModule.html":{"url":"modules/TaskRoutingModule.html","title":"module - TaskRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/operations/task/task.routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { AddTaskComponent } from \"./components/add-task/add-task.component\";\nimport { TasksComponent } from \"./components/tasks/tasks.component\";\n\n\n\nconst routes:Routes = [\n    {path:'', component:TasksComponent},\n    {path:'task-list', component:TasksComponent},\n    {path:'task-add', component:AddTaskComponent}\n\n]\n\n\n\n@NgModule({\n    imports:[RouterModule.forChild(routes)],\n    exports:[RouterModule]\n})\nexport class TaskRoutingModule {} \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TaskState.html":{"url":"interfaces/TaskState.html","title":"interface - TaskState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TaskState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/operations/task/state/reducers/task.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                        \n                                            loading\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Action, createReducer, on } from '@ngrx/store';\nimport { createEntityAdapter, EntityState } from '@ngrx/entity';\n\nimport * as TaskActions from '../actions/task.actions';\nimport * as fromOperations from '@operations/index';\nimport * as fromTaskAction from '../actions/task.actions';\n\nexport const taskFeatureKey = 'task';\n\nexport interface TaskState extends EntityState {\n  loaded: boolean;\n  loading: boolean;\n  error: any;\n}\n\nexport const taskAdapter = createEntityAdapter();\n\nconst initialTaskState = taskAdapter.getInitialState({\n  loaded: false,\n  loading: false,\n  error: null,\n})\n\n\nexport const taskReducer = createReducer(\n  initialTaskState,\n\n  on(TaskActions.taskActions.loadTaskSuccess, (state, action) => {\n    return taskAdapter.setAll(action.tasks, {\n      ...state,\n      loaded: true,\n      loading: false\n    });\n  }),\n  on(TaskActions.taskActions.loadTasksFail, (state, action) => {\n    return {\n      ...state,\n      loaded: true,\n      loading: false,\n      error: action.error\n    }\n  }),\n\n  on(TaskActions.taskActions.addTaskSuccess, (state, action) => {\n    return taskAdapter.addOne(action.task, state)\n  }),\n  on(TaskActions.taskActions.addTaskFail, (state, action) => {\n    return { ...state, error: action.error }\n  }),\n\n);\n\nexport const { selectAll } = taskAdapter.getSelectors();\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TasksComponent.html":{"url":"components/TasksComponent.html","title":"component - TasksComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TasksComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/operations/task/components/tasks/tasks.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                enccrm-tasks\n            \n\n            \n                styleUrls\n                ./tasks.component.scss\n            \n\n\n            \n                template\n                 \n  Task List\n\n\n    \n      \n      \n        Task Types\n        \n          {{type}}\n        \n      \n         0; else noData\"\n          [data]=\"data\"\n          [columns]=\"columns\"\n          [displayNames]=\"displayNames\"\n          [pipesNeeded]=\"pipeOptions\"\n          [pipeType]=\"'task'\"\n          [linksNeeded]=\"['taskName']\"\n          (onZoom)=\"detailTask($event)\"\n        >\n        No Data Yet\n      \n      \n  \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                            \n                                data\n                            \n                            \n                                dataSaved\n                            \n                            \n                                dataSub\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                displayNames\n                            \n                            \n                                pipeOptions\n                            \n                            \n                                    Private\n                                subs\n                            \n                            \n                                tasks$\n                            \n                            \n                                taskTypeFilter\n                            \n                            \n                                taskTypes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteTaskInDB\n                            \n                            \n                                detailTask\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                taskFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/operations/task/components/tasks/tasks.component.ts:80\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTaskInDB\n                        \n                    \n                \n            \n            \n                \ndeleteTaskInDB(event: fromOperations.Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/operations/task/components/tasks/tasks.component.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                fromOperations.Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        detailTask\n                        \n                    \n                \n            \n            \n                \ndetailTask(event: fromOperations.Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/operations/task/components/tasks/tasks.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                fromOperations.Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/operations/task/components/tasks/tasks.component.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/operations/task/components/tasks/tasks.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskFilter\n                        \n                    \n                \n            \n            \n                \ntaskFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/operations/task/components/tasks/tasks.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'taskName',\n    'taskType', //choices\n    'priority', //choices \n    'contact',\n    'description'\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/task/components/tasks/tasks.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/task/components/tasks/tasks.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSaved\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/task/components/tasks/tasks.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/task/components/tasks/tasks.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/task/components/tasks/tasks.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'Name',\n    'Task Type', //choices\n    'Priority', //choices\n    'Contact',\n    'Description'\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/task/components/tasks/tasks.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pipeOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/task/components/tasks/tasks.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new SubSink()\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/task/components/tasks/tasks.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tasks$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/task/components/tasks/tasks.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskTypeFilter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                \n                    \n                        Default value : new FormControl\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/task/components/tasks/tasks.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    TaskType[0],\n    TaskType[1],\n    TaskType[2],\n    TaskType[3]\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/operations/task/components/tasks/tasks.component.ts:70\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Store } from '@ngrx/store';\nimport { Task, TaskOptions, TaskType } from '@operations/task';\nimport * as fromOperations from '@operations/index';\nimport { Observable, of, Subscription } from 'rxjs';\nimport { SubSink } from 'subsink';\nimport * as fromTaskState from '../../state/index';\nimport { TaskDetailComponent } from '../task-detail/task-detail.component';\nimport { selectTasks } from '@operations/task/state/selectors/task.selectors';\n\n@Component({\n  selector: 'enccrm-tasks',\n  template:\n    ` \n  \n    Task List\n  \n  \n      \n         \n        \n          Task Types\n          \n            {{type}}\n          \n        \n           0; else noData\"\n            [data]=\"data\"\n            [columns]=\"columns\"\n            [displayNames]=\"displayNames\"\n            [pipesNeeded]=\"pipeOptions\"\n            [pipeType]=\"'task'\"\n            [linksNeeded]=\"['taskName']\" \n            (onZoom)=\"detailTask($event)\"\n          >\n          No Data Yet\n        \n        \n    \n  `,\n  styleUrls: ['./tasks.component.scss']\n})\nexport class TasksComponent implements OnInit {\n\n  private subs = new SubSink();\n\n  dataSub: Subscription = new Subscription;\n  data: any[] = [];\n  dataSaved: any[] = [];\n\n\n  columns: string[] = [\n    'taskName',\n    'taskType', //choices\n    'priority', //choices \n    'contact',\n    'description'\n  ];\n  displayNames: string[] = [\n    'Name',\n    'Task Type', //choices\n    'Priority', //choices\n    'Contact',\n    'Description'\n  ];\n\n  taskTypes: string[] = [\n    TaskType[0],\n    TaskType[1],\n    TaskType[2],\n    TaskType[3]\n  ]\n\n  pipeOptions: string[] = [];\n  taskTypeFilter: FormControl = new FormControl;\n\n  tasks$: Observable | undefined;\n\n  constructor(private store: Store, public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.taskTypeFilter = new FormControl(this.taskTypes);\n    this.pipeOptions = [\n      TaskOptions[0],\n      TaskOptions[1],\n      TaskOptions[2]\n    ]\n\n    this.tasks$ = this.store.select(selectTasks);\n\n\n    this.subs.sink = this.tasks$.subscribe(data => {\n\n      this.data = data;\n      this.dataSaved = [...data];\n    });\n    this.subs.sink = this.taskTypeFilter.valueChanges.subscribe(() => this.taskFilter());\n\n  }\n\n  taskFilter() {\n    this.data = this.dataSaved.filter(d => this.taskTypeFilter.value.includes(TaskType[+d.taskType]));\n  }\n\n  detailTask(event: fromOperations.Task) {\n\n    const dialogRef = this.dialog.open(TaskDetailComponent, {\n      width: '90vw',\n      height: '45rem',\n      data: {\n        task: event\n\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n\n      if (result.action === 'delete') {\n        this.store.dispatch(fromTaskState.taskActions.deleteTask(result.task));\n      } else { //add\n\n      }\n\n    });\n  }\n\n  deleteTaskInDB(event: fromOperations.Task) {\n    console.log(\"Need to implement\");\n  }\n\n  ngOnDestroy() {\n    this.subs.unsubscribe()\n  }\n\n}\n\n    \n\n\n    \n                \n                    ./tasks.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   Task List                        Task Types                  {{type}}                       0; else noData\"          [data]=\"data\"          [columns]=\"columns\"          [displayNames]=\"displayNames\"          [pipesNeeded]=\"pipeOptions\"          [pipeType]=\"\\'task\\'\"          [linksNeeded]=\"[\\'taskName\\']\"          (onZoom)=\"detailTask($event)\"        >        No Data Yet              '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'enccrm-add-contact'},{'name': 'AddNoteComponent', 'selector': 'enccrm-add-note'},{'name': 'AddTaskComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'enccrm-button'},{'name': 'ContactDetailComponent', 'selector': 'enccrm-contact-detail'},{'name': 'ContactListComponent', 'selector': 'enccrm-contact-list'},{'name': 'DashboardComponent', 'selector': 'enccrm-dashboard'},{'name': 'FormComponent', 'selector': 'enccrm-form'},{'name': 'GeneralCardComponent', 'selector': 'enccrm-general-card'},{'name': 'HeaderComponent', 'selector': 'enccrm-header'},{'name': 'LoginComponent', 'selector': 'enccrm-login'},{'name': 'ModalCardComponent', 'selector': 'enccrm-modal-card'},{'name': 'NoteDetailComponent', 'selector': 'enccrm-note-detail'},{'name': 'NoteListComponent', 'selector': 'enccrm-note-list'},{'name': 'SidenavComponent', 'selector': 'enccrm-sidenav'},{'name': 'TabComponent', 'selector': 'enccrm-tab'},{'name': 'TableComponent', 'selector': 'enccrm-table'},{'name': 'TaskDetailComponent', 'selector': 'enccrm-task-detail'},{'name': 'TasksComponent', 'selector': 'enccrm-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TasksComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/auth/models/users.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            days\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            displayName\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            photoURL\n                                        \n                                \n                                \n                                        \n                                            uid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        days\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        days:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photoURL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        photoURL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n\n    uid: string;\n    email: string;\n    photoURL?: string;\n    displayName?: string;\n    days?: number;\n\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/analytics/components/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                src/app/analytics/services/metrics.service.ts\n            \n            injectable\n            MetricsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/auth/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/auth/models/users.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/auth/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/layout/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/layout/sidenav/sidenav.component.ts\n            \n            component\n            SidenavComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/services/backend.service.ts\n            \n            injectable\n            BackendService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/operations/contact/components/add-contact/add-contact.component.ts\n            \n            component\n            AddContactComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/operations/contact/components/contact-detail/contact-detail.component.ts\n            \n            component\n            ContactDetailComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/operations/contact/components/contacts/contacts.component.ts\n            \n            component\n            ContactListComponent\n            \n                12 %\n                (3/24)\n            \n        \n        \n            \n                \n                src/app/operations/contact/models/interfaces/contact.ts\n            \n            interface\n            Contact\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/operations/contact/models/interfaces/day.ts\n            \n            interface\n            Day\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/operations/contact/pipes/rating-color.pipe.ts\n            \n            pipe\n            RatingColorPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/operations/contact/services/contact-metric.service.ts\n            \n            injectable\n            ContactMetricService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/operations/contact/state/contact.actions.ts\n            \n            variable\n            contactActions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/operations/contact/state/contact.reducer.ts\n            \n            interface\n            ContactState\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/operations/contact/state/contact.reducer.ts\n            \n            variable\n            contactAdapter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/operations/contact/state/contact.reducer.ts\n            \n            variable\n            contactFeatureKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/operations/contact/state/contact.reducer.ts\n            \n            variable\n            contactReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/operations/contact/state/contact.reducer.ts\n            \n            variable\n            initialContactState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/operations/contact/state/contact.reducer.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/operations/contact/state/contact.selector.ts\n            \n            variable\n            selectContacts\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/operations/contact/state/contact.selector.ts\n            \n            variable\n            selectContactState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/operations/contact/state/contacts.effects.ts\n            \n            injectable\n            ContactEffects\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/operations/note/components/add-note/add-note.component.ts\n            \n            component\n            AddNoteComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/operations/note/components/note-detail/note-detail.component.ts\n            \n            component\n            NoteDetailComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/operations/note/components/notes/notes.component.ts\n            \n            component\n            NoteListComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/operations/note/models/interfaces/note.ts\n            \n            interface\n            Note\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/operations/note/state/actions/notes.actions.ts\n            \n            variable\n            noteActions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/operations/note/state/effects/notes.effects.ts\n            \n            injectable\n            NoteEffects\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/operations/note/state/reducers/notes.reducer.ts\n            \n            interface\n            NoteState\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/operations/note/state/reducers/notes.reducer.ts\n            \n            variable\n            initialNoteState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/operations/note/state/reducers/notes.reducer.ts\n            \n            variable\n            noteAdapter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/operations/note/state/reducers/notes.reducer.ts\n            \n            variable\n            noteFeatureKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/operations/note/state/reducers/notes.reducer.ts\n            \n            variable\n            noteReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/operations/note/state/reducers/notes.reducer.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/operations/note/state/selectors/notes.selectors.ts\n            \n            variable\n            selectNotes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/operations/note/state/selectors/notes.selectors.ts\n            \n            variable\n            selectNotesState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/operations/task/components/add-task/add-task.component.ts\n            \n            component\n            AddTaskComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/operations/task/components/task-detail/task-detail.component.ts\n            \n            component\n            TaskDetailComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/operations/task/components/tasks/tasks.component.ts\n            \n            component\n            TasksComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/operations/task/models/interfaces/task.ts\n            \n            interface\n            Task\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/operations/task/state/actions/task.actions.ts\n            \n            variable\n            taskActions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/operations/task/state/effects/task.effects.ts\n            \n            injectable\n            TaskEffects\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/operations/task/state/reducers/task.reducer.ts\n            \n            interface\n            TaskState\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/operations/task/state/reducers/task.reducer.ts\n            \n            variable\n            initialTaskState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/operations/task/state/reducers/task.reducer.ts\n            \n            variable\n            taskAdapter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/operations/task/state/reducers/task.reducer.ts\n            \n            variable\n            taskFeatureKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/operations/task/state/reducers/task.reducer.ts\n            \n            variable\n            taskReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/operations/task/state/reducers/task.reducer.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/operations/task/state/selectors/task.selectors.ts\n            \n            variable\n            selectTasks\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/operations/task/state/selectors/task.selectors.ts\n            \n            variable\n            selectTaskState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/button/button.component.ts\n            \n            component\n            ButtonComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/cards/general-card/general-card.component.ts\n            \n            component\n            GeneralCardComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/cards/modal-card/modal-card.component.ts\n            \n            component\n            ModalCardComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/form/form.component.ts\n            \n            component\n            FormComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/shared/material/material.module.ts\n            \n            variable\n            appearance\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/material/material.module.ts\n            \n            variable\n            modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/models/form-setup.model.ts\n            \n            interface\n            FormSetupModel\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/contact-detail-translator.pipe.ts\n            \n            pipe\n            ContactDetailTranslatorPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/contact-enum-display.ts\n            \n            pipe\n            EnumUserDisplayTranslatorPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/task-enum-display.ts\n            \n            pipe\n            TaskEnumDisplayPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/shared.module.ts\n            \n            variable\n            modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/tab/tab/tab.component.ts\n            \n            component\n            TabComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/table/table.component.ts\n            \n            component\n            TableComponent\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                src/app/store/reducers/index.ts\n            \n            interface\n            AppState\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/reducers/index.ts\n            \n            variable\n            reducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~12.1.4\n        \n            @angular/cdk : ^12.1.4\n        \n            @angular/common : ~12.1.4\n        \n            @angular/compiler : ~12.1.4\n        \n            @angular/core : ~12.1.4\n        \n            @angular/fire : ^6.1.5\n        \n            @angular/flex-layout : ^12.0.0-beta.34\n        \n            @angular/forms : ~12.1.4\n        \n            @angular/material : ^12.1.4\n        \n            @angular/platform-browser : ~12.1.4\n        \n            @angular/platform-browser-dynamic : ~12.1.4\n        \n            @angular/router : ~12.1.4\n        \n            @ngrx/effects : ^12.1.0\n        \n            @ngrx/entity : ^12.1.0\n        \n            @ngrx/router-store : ^12.1.0\n        \n            @ngrx/store : ^12.1.0\n        \n            @ngrx/store-devtools : ^12.2.0\n        \n            chart.js : ^2.9.3\n        \n            firebase : ^8.6.1\n        \n            moment : ^2.29.1\n        \n            ng2-charts : ^2.3.0\n        \n            ngx-spinner : ^11.0.1\n        \n            rxjs : ~6.6.0\n        \n            subsink : ^1.0.2\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ContactActionTypes   (src/.../contact.actions.ts)\n                        \n                        \n                            ContactOptions   (src/.../contact-options.ts)\n                        \n                        \n                            ContactType   (src/.../contact-type.enum.ts)\n                        \n                        \n                            Context   (src/.../context.enum.ts)\n                        \n                        \n                            EnergyLevel   (src/.../energy-level.enum.ts)\n                        \n                        \n                            NoteActionTypes   (src/.../notes.actions.ts)\n                        \n                        \n                            NoteOptions   (src/.../note-options.enum.ts)\n                        \n                        \n                            NoteType   (src/.../note-type.enum.ts)\n                        \n                        \n                            Priorities   (src/.../priorities.enum.ts)\n                        \n                        \n                            Priorities   (src/.../priorities.enum.ts)\n                        \n                        \n                            Priorities   (src/.../priorities.enum.ts)\n                        \n                        \n                            Statuses   (src/.../statuses.enum.ts)\n                        \n                        \n                            Statuses   (src/.../statuses.enum.ts)\n                        \n                        \n                            Statuses   (src/.../statuses.enum.ts)\n                        \n                        \n                            TaskActionTypes   (src/.../task.actions.ts)\n                        \n                        \n                            TaskOptions   (src/.../task-options.enum.ts)\n                        \n                        \n                            TaskOptions   (src/.../task-options.ts)\n                        \n                        \n                            TaskType   (src/.../task-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/operations/contact/state/contact.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        ContactActionTypes\n                    \n                \n                        \n                            \n                                 LOAD_CONTACTS\n                            \n                        \n                        \n                            \n                                Value : [CONTACTS LIST COMPONENT] Load CONTACTS\n                            \n                        \n                        \n                            \n                                 LOAD_CONTACTS_FAIL\n                            \n                        \n                        \n                            \n                                Value : [CONTACTS EFFECT] Load CONTACTS Fail\n                            \n                        \n                        \n                            \n                                 LOAD_CONTACTS_SUCCESS\n                            \n                        \n                        \n                            \n                                Value : [CONTACTS EFFECT] Load CONTACTS Success\n                            \n                        \n                        \n                            \n                                 ADD_CONTACT\n                            \n                        \n                        \n                            \n                                Value : [CONTACTS ADD COMPONENT] Add CONTACTS\n                            \n                        \n                        \n                            \n                                 ADD_CONTACT_FAIL\n                            \n                        \n                        \n                            \n                                Value : [CONTACTS EFFECT] Add CONTACTS Fail\n                            \n                        \n                        \n                            \n                                 ADD_CONTACT_SUCCESS\n                            \n                        \n                        \n                            \n                                Value : [CONTACTS EFFECT] Add CONTACTS Success\n                            \n                        \n                        \n                            \n                                 UPDATE_CONTACT\n                            \n                        \n                        \n                            \n                                Value : [CONTACT DETAIL COMPONENT] Update CONTACTS\n                            \n                        \n                        \n                            \n                                 UPDATE_CONTACT_FAIL\n                            \n                        \n                        \n                            \n                                Value : [CONTACTS EFFECT] Update CONTACTS Fail\n                            \n                        \n                        \n                            \n                                 UPDATE_CONTACT_SUCCESS\n                            \n                        \n                        \n                            \n                                Value : CONTACTS EFFECT] Update CONTACTS Success\n                            \n                        \n                        \n                            \n                                 DELETE_CONTACT\n                            \n                        \n                        \n                            \n                                Value : [CONTACTS COMPONENT] Delete CONTACTS\n                            \n                        \n                        \n                            \n                                 DELETE_CONTACT_FAIL\n                            \n                        \n                        \n                            \n                                Value : [CONTACTS EFFECT] Delete CONTACTS Fail\n                            \n                        \n                        \n                            \n                                 DELETE_CONTACT_SUCCESS\n                            \n                        \n                        \n                            \n                                Value : [CONTACTS EFFECT] Delete CONTACTS Success\n                            \n                        \n            \n        \n\n    src/app/operations/contact/models/enums/contact-options.ts\n    \n        \n            \n                \n                    \n                        \n                        ContactOptions\n                    \n                \n                        \n                            \n                                 contactType\n                            \n                        \n                        \n                            \n                                 energyLevel\n                            \n                        \n                        \n                            \n                                 statuses\n                            \n                        \n                        \n                            \n                                 priority\n                            \n                        \n                        \n                            \n                                 known\n                            \n                        \n            \n        \n\n    src/app/operations/contact/models/enums/contact-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ContactType\n                    \n                \n                        \n                            \n                                 Friend\n                            \n                        \n                        \n                            \n                                 Sister\n                            \n                        \n                        \n                            \n                                 Brother\n                            \n                        \n                        \n                            \n                                 Mother\n                            \n                        \n                        \n                            \n                                 Father\n                            \n                        \n                        \n                            \n                                 Spouse\n                            \n                        \n                        \n                            \n                                 Child\n                            \n                        \n                        \n                            \n                                 Cousin\n                            \n                        \n                        \n                            \n                                 Niece\n                            \n                        \n                        \n                            \n                                 Nephew\n                            \n                        \n                        \n                            \n                                 GrandParent\n                            \n                        \n                        \n                            \n                                 Aunt\n                            \n                        \n                        \n                            \n                                 Uncle\n                            \n                        \n                        \n                            \n                                 CoWorker\n                            \n                        \n                        \n                            \n                                 Acquaintance\n                            \n                        \n            \n        \n\n    src/app/operations/contact/models/enums/context.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Context\n                    \n                \n                        \n                            \n                                 Home\n                            \n                        \n                        \n                            \n                                 Work\n                            \n                        \n                        \n                            \n                                 Recreation\n                            \n                        \n                        \n                            \n                                 Random\n                            \n                        \n                        \n                            \n                                 School\n                            \n                        \n                        \n                            \n                                 Spiritual\n                            \n                        \n            \n        \n\n    src/app/operations/contact/models/enums/energy-level.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        EnergyLevel\n                    \n                \n                        \n                            \n                                 Draining\n                            \n                        \n                        \n                            \n                                 Low\n                            \n                        \n                        \n                            \n                                 Average\n                            \n                        \n                        \n                            \n                                 Positive\n                            \n                        \n                        \n                            \n                                 Invigorating\n                            \n                        \n            \n        \n\n    src/app/operations/note/state/actions/notes.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        NoteActionTypes\n                    \n                \n                        \n                            \n                                 LOAD_NOTES\n                            \n                        \n                        \n                            \n                                Value : [NOTES LIST COMPONENT] Load NOTES\n                            \n                        \n                        \n                            \n                                 LOAD_NOTES_FAIL\n                            \n                        \n                        \n                            \n                                Value : [NOTES EFFECT] Load NOTES Fail\n                            \n                        \n                        \n                            \n                                 LOAD_NOTES_SUCCESS\n                            \n                        \n                        \n                            \n                                Value : [NOTES EFFECT] Load NOTES Success\n                            \n                        \n                        \n                            \n                                 ADD_NOTE\n                            \n                        \n                        \n                            \n                                Value : [NOTES ADD COMPONENT] Add NOTES\n                            \n                        \n                        \n                            \n                                 ADD_NOTE_FAIL\n                            \n                        \n                        \n                            \n                                Value : [NOTES EFFECT] Add NOTES Fail\n                            \n                        \n                        \n                            \n                                 ADD_NOTE_SUCCESS\n                            \n                        \n                        \n                            \n                                Value : [NOTES EFFECT] Add NOTES Success\n                            \n                        \n                        \n                            \n                                 UPDATE_NOTE\n                            \n                        \n                        \n                            \n                                Value : [NOTE DETAIL COMPONENT] Update NOTES\n                            \n                        \n                        \n                            \n                                 UPDATE_NOTE_FAIL\n                            \n                        \n                        \n                            \n                                Value : [NOTES EFFECT] Update NOTES Fail\n                            \n                        \n                        \n                            \n                                 UPDATE_NOTE_SUCCESS\n                            \n                        \n                        \n                            \n                                Value : NOTES EFFECT] Update NOTES Success\n                            \n                        \n                        \n                            \n                                 DELETE_NOTE\n                            \n                        \n                        \n                            \n                                Value : [NOTES COMPONENT] Delete NOTES\n                            \n                        \n                        \n                            \n                                 DELETE_NOTE_FAIL\n                            \n                        \n                        \n                            \n                                Value : [NOTES EFFECT] Delete NOTES Fail\n                            \n                        \n                        \n                            \n                                 DELETE_NOTE_SUCCESS\n                            \n                        \n                        \n                            \n                                Value : [NOTES EFFECT] Delete NOTES Success\n                            \n                        \n            \n        \n\n    src/app/operations/note/models/enums/note-options.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        NoteOptions\n                    \n                \n                        \n                            \n                                 noteType\n                            \n                        \n                        \n                            \n                                 statuses\n                            \n                        \n                        \n                            \n                                 priority\n                            \n                        \n            \n        \n\n    src/app/operations/note/models/enums/note-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        NoteType\n                    \n                \n                        \n                            \n                                 Random\n                            \n                        \n                        \n                            \n                                 Meeting\n                            \n                        \n                        \n                            \n                                 Call\n                            \n                        \n                        \n                            \n                                 Question\n                            \n                        \n            \n        \n\n    src/app/operations/contact/models/enums/priorities.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Priorities\n                    \n                \n                        \n                            \n                                 None\n                            \n                        \n                        \n                            \n                                 Low\n                            \n                        \n                        \n                            \n                                 Medium\n                            \n                        \n                        \n                            \n                                 High\n                            \n                        \n                        \n                            \n                                 Critical\n                            \n                        \n            \n        \n\n    src/app/operations/note/models/enums/priorities.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Priorities\n                    \n                \n                        \n                            \n                                 None\n                            \n                        \n                        \n                            \n                                 Low\n                            \n                        \n                        \n                            \n                                 Medium\n                            \n                        \n                        \n                            \n                                 High\n                            \n                        \n                        \n                            \n                                 Critical\n                            \n                        \n            \n        \n\n    src/app/operations/task/models/enums/priorities.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Priorities\n                    \n                \n                        \n                            \n                                 None\n                            \n                        \n                        \n                            \n                                 Low\n                            \n                        \n                        \n                            \n                                 Medium\n                            \n                        \n                        \n                            \n                                 High\n                            \n                        \n                        \n                            \n                                 Critical\n                            \n                        \n            \n        \n\n    src/app/operations/contact/models/enums/statuses.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Statuses\n                    \n                \n                        \n                            \n                                 Living\n                            \n                        \n                        \n                            \n                                 Deceased\n                            \n                        \n            \n        \n\n    src/app/operations/note/models/enums/statuses.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Statuses\n                    \n                \n                        \n                            \n                                 Open\n                            \n                        \n                        \n                            \n                                 Closed\n                            \n                        \n            \n        \n\n    src/app/operations/task/models/enums/statuses.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Statuses\n                    \n                \n                        \n                            \n                                 Complete\n                            \n                        \n                        \n                            \n                                 Open\n                            \n                        \n            \n        \n\n    src/app/operations/task/state/actions/task.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskActionTypes\n                    \n                \n                        \n                            \n                                 LOAD_TASK\n                            \n                        \n                        \n                            \n                                Value : [TASK LIST COMPONENT] Load TASK\n                            \n                        \n                        \n                            \n                                 LOAD_TASK_FAIL\n                            \n                        \n                        \n                            \n                                Value : [TASK EFFECT] Load TASK Fail\n                            \n                        \n                        \n                            \n                                 LOAD_TASK_SUCCESS\n                            \n                        \n                        \n                            \n                                Value : [TASK EFFECT] Load TASK Success\n                            \n                        \n                        \n                            \n                                 ADD_TASK\n                            \n                        \n                        \n                            \n                                Value : [TASK ADD COMPONENT] Add TASK\n                            \n                        \n                        \n                            \n                                 ADD_TASK_FAIL\n                            \n                        \n                        \n                            \n                                Value : [TASK EFFECT] Add TASK Fail\n                            \n                        \n                        \n                            \n                                 ADD_TASK_SUCCESS\n                            \n                        \n                        \n                            \n                                Value : [TASK EFFECT] Add TASK Success\n                            \n                        \n                        \n                            \n                                 UPDATE_TASK\n                            \n                        \n                        \n                            \n                                Value : [TASK DETAIL COMPONENT] Update TASK\n                            \n                        \n                        \n                            \n                                 UPDATE_TASK_FAIL\n                            \n                        \n                        \n                            \n                                Value : [TASK EFFECT] Update TASK Fail\n                            \n                        \n                        \n                            \n                                 UPDATE_TASK_SUCCESS\n                            \n                        \n                        \n                            \n                                Value : TASK EFFECT] Update TASK Success\n                            \n                        \n                        \n                            \n                                 DELETE_TASK\n                            \n                        \n                        \n                            \n                                Value : [TASK COMPONENT] Delete TASK\n                            \n                        \n                        \n                            \n                                 DELETE_TASK_FAIL\n                            \n                        \n                        \n                            \n                                Value : [TASK EFFECT] Delete TASK Fail\n                            \n                        \n                        \n                            \n                                 DELETE_TASK_SUCCESS\n                            \n                        \n                        \n                            \n                                Value : [TASK EFFECT] Delete TASK Success\n                            \n                        \n            \n        \n\n    src/app/operations/task/models/enums/task-options.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskOptions\n                    \n                \n                        \n                            \n                                 taskType\n                            \n                        \n                        \n                            \n                                 statuses\n                            \n                        \n                        \n                            \n                                 priority\n                            \n                        \n            \n        \n\n    src/app/operations/task/models/enums/task-options.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskOptions\n                    \n                \n                        \n                            \n                                 taskType\n                            \n                        \n                        \n                            \n                                 statuses\n                            \n                        \n                        \n                            \n                                 priority\n                            \n                        \n            \n        \n\n    src/app/operations/task/models/enums/task-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskType\n                    \n                \n                        \n                            \n                                 Call\n                            \n                        \n                        \n                            \n                                 Meeting\n                            \n                        \n                        \n                            \n                                 Text\n                            \n                        \n                        \n                            \n                                 Letter\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n  Encouragement CRM\n\n  \n    A Personal CRM to Promote Encouragement Amongst Your Network\n    \n    Explore the docs »\n    \n    \n    View Demo -->\n    ·\n    Report Bug\n    ·\n    Request Feature\n  \n\n\n\n\n\n\n  Table of Contents\n  \n    \n      About The Project\n        Roadmap\n      \n        Built With\n      \n    \n    \n      Getting Started\n      \n        End User Setup\n        Developer Setup\n      \n    \n    Contributing\n    License\n    Contact\n    Acknowledgements\n  \n\n\n\n\n\nAbout The Project\n  \n  \n  CRMs help many businesses track their contacts to manage leads and current clients.  That's because they effectively offer visibility on a large and small scale.  Just like     CRMs help companies towards their goal of profit; I wanted to work on a Personal CRM, with the goal of encouragement and relationship maximization.  \n  Personal CRMS aren't new however, I wanted to really focus on assisting the user through more actionable metrics.  The CRM would be more than just a database of contacts, but   it would emulate a business-oriented CRM; giving molding data into information that you can make decisions from.  These decisions could help you enrich your network and      identify relationships that may need some work.\nView all your contacts\nYou can view all the contacts holistically on the table view.\nSort or filter by the different factors that you have used to categorize your contacts.\n\n\nConcept Detail\nDrill down into a contact to see their related notes and tasks; including some additional personalized information.\n\n\nAdd New Contacts\nEasily add more contacts to track.  \nTasks and Notes\n\n\n\nTasks\nNotes\n\n\n\n\n\n\n\n\n\nSetup tasks that are related to your contacts or take notes based on conversations.  \nAnalytics\n\n\nHere's where it all comes together!  View the meaningful metrics at a glance based on your contact creation activity.\n\nRoadmap\n\nMore work on the UI enhancement issues\n\nMore work on state management\n\nAdd 'Encouragement' features\n\nBased on contact type, bring in information on contact detail view to nurture the relationship \nContact pipeline (facilitate relationship building tracking)\nAdd reminders for important dates\nGoogle Calendar integration\nGmail integration\n\n\nUser convenience\n\nContact Import/Export\n\n\nMore Contact Detail Metrics/Highlights\n\n\n\nGetting Started\nEnd User Setup\nLaunching Soon\nDeveloper Setup\n\nClone the repogit clone https://github.com/kevinmilly/encourage-crm.git\nInstall NPM packagesnpm install\n\nBuilt With\n\n[Angular]\nFirebase\n\n\nContributing\nContributions are what make the open source community such an amazing place to be learn, inspire, and create. Any contributions you make are greatly appreciated.\n\nFork the Project\nCreate your Feature Branch (git checkout -b feature/AmazingFeature)\nCommit your Changes (git commit -m 'Add some AmazingFeature')\nPush to the Branch (git push origin feature/AmazingFeature)\nOpen a Pull Request\n\n\nLicense\nDistributed under the MIT License. See LICENSE for more information.\n\nContact\nKevin Smith - Connect with me on LinkedIn - https://www.linkedin.com/in/ksmithtech/\nEmail me at: kevinmilly@gmail.com\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AnalyticsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AnalyticsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CardsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContactRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContactsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LayoutModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TabModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AnalyticsModule\n\n\n\ncluster_AnalyticsModule_declarations\n\n\n\ncluster_AnalyticsModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_CardsModule\n\n\n\ncluster_CardsModule_declarations\n\n\n\ncluster_CardsModule_imports\n\n\n\ncluster_CardsModule_exports\n\n\n\ncluster_ContactsModule\n\n\n\ncluster_ContactsModule_declarations\n\n\n\ncluster_ContactsModule_imports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_LayoutModule\n\n\n\ncluster_LayoutModule_declarations\n\n\n\ncluster_LayoutModule_exports\n\n\n\ncluster_MaterialModule\n\n\n\ncluster_MaterialModule_imports\n\n\n\ncluster_MaterialModule_exports\n\n\n\ncluster_NotesModule\n\n\n\ncluster_NotesModule_declarations\n\n\n\ncluster_NotesModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TabModule\n\n\n\ncluster_TabModule_declarations\n\n\n\ncluster_TabModule_exports\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_declarations\n\n\n\ncluster_TaskModule_imports\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\n\n\nAnalyticsModule\n\nAnalyticsModule\n\nAnalyticsModule -->\n\nDashboardComponent->AnalyticsModule\n\n\n\n\n\nAnalyticsRoutingModule\n\nAnalyticsRoutingModule\n\nAnalyticsModule -->\n\nAnalyticsRoutingModule->AnalyticsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAnalyticsModule -->\n\nSharedModule->AnalyticsModule\n\n\n\n\n\nContactsModule\n\nContactsModule\n\nContactsModule -->\n\nSharedModule->ContactsModule\n\n\n\n\n\nLayoutModule\n\nLayoutModule\n\nLayoutModule -->\n\nSharedModule->LayoutModule\n\n\n\n\n\nCardsModule \n\nCardsModule \n\nCardsModule  -->\n\nSharedModule->CardsModule \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nTabModule \n\nTabModule \n\nTabModule  -->\n\nSharedModule->TabModule \n\n\n\n\n\nNotesModule\n\nNotesModule\n\nNotesModule -->\n\nSharedModule->NotesModule\n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nSharedModule->ButtonComponent \n\n\n\n\n\nContactDetailTranslatorPipe \n\nContactDetailTranslatorPipe \n\nContactDetailTranslatorPipe  -->\n\nSharedModule->ContactDetailTranslatorPipe \n\n\n\n\n\nEnumUserDisplayTranslatorPipe \n\nEnumUserDisplayTranslatorPipe \n\nEnumUserDisplayTranslatorPipe  -->\n\nSharedModule->EnumUserDisplayTranslatorPipe \n\n\n\n\n\nFormComponent \n\nFormComponent \n\nFormComponent  -->\n\nSharedModule->FormComponent \n\n\n\n\n\nTableComponent \n\nTableComponent \n\nTableComponent  -->\n\nSharedModule->TableComponent \n\n\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nSharedModule->TaskModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nLayoutModule \n\nLayoutModule \n\nLayoutModule  -->\n\nCoreModule->LayoutModule \n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nCoreModule->LoginComponent \n\n\n\n\n\nGeneralCardComponent\n\nGeneralCardComponent\n\n\n\nCardsModule\n\nCardsModule\n\nCardsModule -->\n\nGeneralCardComponent->CardsModule\n\n\n\n\n\nModalCardComponent\n\nModalCardComponent\n\nCardsModule -->\n\nModalCardComponent->CardsModule\n\n\n\nSharedModule -->\n\nCardsModule->SharedModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nMaterialModule -->\n\nCardsModule->MaterialModule\n\n\n\n\n\nGeneralCardComponent \n\nGeneralCardComponent \n\nGeneralCardComponent  -->\n\nCardsModule->GeneralCardComponent \n\n\n\n\n\nModalCardComponent \n\nModalCardComponent \n\nModalCardComponent  -->\n\nCardsModule->ModalCardComponent \n\n\n\n\n\nTabModule\n\nTabModule\n\nTabModule -->\n\nCardsModule->TabModule\n\n\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\nCardsModule -->\n\nMaterialModule->CardsModule\n\n\n\nMaterialModule -->\n\nMaterialModule->MaterialModule\n\n\n\nTabModule -->\n\nMaterialModule->TabModule\n\n\n\nCardsModule  -->\n\nMaterialModule->CardsModule \n\n\n\nMaterialModule  -->\n\nMaterialModule->MaterialModule \n\n\n\nTabModule  -->\n\nMaterialModule->TabModule \n\n\n\n\n\nAddContactComponent\n\nAddContactComponent\n\nContactsModule -->\n\nAddContactComponent->ContactsModule\n\n\n\n\n\nContactDetailComponent\n\nContactDetailComponent\n\nContactsModule -->\n\nContactDetailComponent->ContactsModule\n\n\n\n\n\nContactListComponent\n\nContactListComponent\n\nContactsModule -->\n\nContactListComponent->ContactsModule\n\n\n\n\n\nRatingColorPipe\n\nRatingColorPipe\n\nContactsModule -->\n\nRatingColorPipe->ContactsModule\n\n\n\n\n\nContactRoutingModule\n\nContactRoutingModule\n\nContactsModule -->\n\nContactRoutingModule->ContactsModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nCoreModule -->\n\nLoginComponent->CoreModule\n\n\n\nCoreModule -->\n\nLayoutModule->CoreModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nLayoutModule->HeaderComponent \n\n\n\n\n\nSidenavComponent \n\nSidenavComponent \n\nSidenavComponent  -->\n\nLayoutModule->SidenavComponent \n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nLayoutModule -->\n\nHeaderComponent->LayoutModule\n\n\n\n\n\nSidenavComponent\n\nSidenavComponent\n\nLayoutModule -->\n\nSidenavComponent->LayoutModule\n\n\n\nSharedModule -->\n\nTabModule->SharedModule\n\n\n\nMaterialModule -->\n\nTabModule->MaterialModule\n\n\n\n\n\nTabComponent \n\nTabComponent \n\nTabComponent  -->\n\nTabModule->TabComponent \n\n\n\n\n\nAddNoteComponent\n\nAddNoteComponent\n\nNotesModule -->\n\nAddNoteComponent->NotesModule\n\n\n\n\n\nNoteDetailComponent\n\nNoteDetailComponent\n\nNotesModule -->\n\nNoteDetailComponent->NotesModule\n\n\n\n\n\nNoteListComponent\n\nNoteListComponent\n\nNotesModule -->\n\nNoteListComponent->NotesModule\n\n\n\n\n\nNotesRoutingModule\n\nNotesRoutingModule\n\nNotesModule -->\n\nNotesRoutingModule->NotesModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nSharedModule -->\n\nButtonComponent->SharedModule\n\n\n\n\n\nContactDetailTranslatorPipe\n\nContactDetailTranslatorPipe\n\nSharedModule -->\n\nContactDetailTranslatorPipe->SharedModule\n\n\n\n\n\nEnumUserDisplayTranslatorPipe\n\nEnumUserDisplayTranslatorPipe\n\nSharedModule -->\n\nEnumUserDisplayTranslatorPipe->SharedModule\n\n\n\n\n\nFormComponent\n\nFormComponent\n\nSharedModule -->\n\nFormComponent->SharedModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nSharedModule -->\n\nTableComponent->SharedModule\n\n\n\n\n\nTabComponent\n\nTabComponent\n\nTabModule -->\n\nTabComponent->TabModule\n\n\n\n\n\nAddTaskComponent\n\nAddTaskComponent\n\nTaskModule -->\n\nAddTaskComponent->TaskModule\n\n\n\n\n\nTaskDetailComponent\n\nTaskDetailComponent\n\nTaskModule -->\n\nTaskDetailComponent->TaskModule\n\n\n\n\n\nTasksComponent\n\nTasksComponent\n\nTaskModule -->\n\nTasksComponent->TaskModule\n\n\n\n\n\nTaskRoutingModule\n\nTaskRoutingModule\n\nTaskModule -->\n\nTaskRoutingModule->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        16 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    20 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        28 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appearance   (src/.../material.module.ts)\n                        \n                        \n                            contactActions   (src/.../contact.actions.ts)\n                        \n                        \n                            contactAdapter   (src/.../contact.reducer.ts)\n                        \n                        \n                            contactFeatureKey   (src/.../contact.reducer.ts)\n                        \n                        \n                            contactReducer   (src/.../contact.reducer.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            initialContactState   (src/.../contact.reducer.ts)\n                        \n                        \n                            initialNoteState   (src/.../notes.reducer.ts)\n                        \n                        \n                            initialTaskState   (src/.../task.reducer.ts)\n                        \n                        \n                            modules   (src/.../shared.module.ts)\n                        \n                        \n                            modules   (src/.../material.module.ts)\n                        \n                        \n                            noteActions   (src/.../notes.actions.ts)\n                        \n                        \n                            noteAdapter   (src/.../notes.reducer.ts)\n                        \n                        \n                            noteFeatureKey   (src/.../notes.reducer.ts)\n                        \n                        \n                            noteReducer   (src/.../notes.reducer.ts)\n                        \n                        \n                            reducers   (src/.../index.ts)\n                        \n                        \n                            selectContacts   (src/.../contact.selector.ts)\n                        \n                        \n                            selectContactState   (src/.../contact.selector.ts)\n                        \n                        \n                            selectNotes   (src/.../notes.selectors.ts)\n                        \n                        \n                            selectNotesState   (src/.../notes.selectors.ts)\n                        \n                        \n                            selectTasks   (src/.../task.selectors.ts)\n                        \n                        \n                            selectTaskState   (src/.../task.selectors.ts)\n                        \n                        \n                            taskActions   (src/.../task.actions.ts)\n                        \n                        \n                            taskAdapter   (src/.../task.reducer.ts)\n                        \n                        \n                            taskFeatureKey   (src/.../task.reducer.ts)\n                        \n                        \n                            taskReducer   (src/.../task.reducer.ts)\n                        \n                        \n                               (src/.../contact.reducer.ts)\n                        \n                        \n                               (src/.../notes.reducer.ts)\n                        \n                        \n                               (src/.../task.reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/material/material.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appearance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatFormFieldDefaultOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  appearance: 'fill',\n  floatLabel: 'auto'\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modules\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  MatTableModule,\n  MatPaginatorModule,\n  MatTooltipModule,\n  MatSortModule,\n  DragDropModule,\n  MatSnackBarModule,\n  MatCardModule,\n  MatIconModule,\n  MatChipsModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatTabsModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatSidenavModule,\n  MatListModule,\n  MatGridListModule,\n  MatToolbarModule,\n  MatSelectModule,\n  MatGridListModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  MatRippleModule,\n  FlexLayoutModule,\n  NgxSpinnerModule,\n  MatProgressSpinnerModule,\n  MatAutocompleteModule\n]\n                    \n                \n\n\n        \n    \n\n    src/app/operations/contact/state/contact.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        contactActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    loadContacts: createAction(ContactActionTypes.LOAD_CONTACTS),\n    loadContactsFail: createAction(\n        ContactActionTypes.LOAD_CONTACTS_FAIL,\n        props()\n    ),\n    loadContactSuccess: createAction(\n        ContactActionTypes.LOAD_CONTACTS_SUCCESS,\n        props()\n    ),\n    addContact: createAction(\n        ContactActionTypes.ADD_CONTACT,\n        props()\n    ),\n    addContactFail: createAction(\n        ContactActionTypes.ADD_CONTACT_FAIL,\n        props()\n    ),\n    addContactSuccess: createAction(\n        ContactActionTypes.ADD_CONTACT_SUCCESS,\n        props()\n    ),\n    updateContact: createAction(\n        ContactActionTypes.UPDATE_CONTACT,\n        props }>()\n    ),\n    deleteContact: createAction(\n        ContactActionTypes.DELETE_CONTACT,\n        props()\n    ),\n    deleteContactFail: createAction(\n        ContactActionTypes.DELETE_CONTACT_FAIL,\n        props()\n    ),\n    deleteContactSuccess: createAction(\n        ContactActionTypes.DELETE_CONTACT_SUCCESS,\n        props()\n    )\n}\n                    \n                \n\n\n        \n    \n\n    src/app/operations/contact/state/contact.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        contactAdapter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEntityAdapter()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contactFeatureKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'contact'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contactReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n    initialContactState,\n    //load\n    on(fromContactAction.contactActions.loadContactSuccess, (state, action) => {\n        return contactAdapter.setAll(action.contacts, {\n            ...state,\n            loaded: true,\n            loading: false\n        });\n    }),\n    on(fromContactAction.contactActions.loadContactsFail, (state, action) => {\n        return {\n            ...state,\n            loaded: true,\n            loading: false,\n            error: action.error\n        }\n    }),\n\n    //add\n    on(fromContactAction.contactActions.addContactSuccess, (state, action) => {\n        return contactAdapter.addOne(action.contact, state)\n    }),\n    on(fromContactAction.contactActions.addContactFail, (state, action) => {\n        return { ...state, error: action.error }\n    }), \n\n    //update\n     on(fromContactAction.contactActions.updateContact, (state,action) => {\n       return contactAdapter.updateOne(action.contact,state)\n     }),\n\n    //delete\n    // on(fromContactAction.contactActions.deleteContactSuccess, (state,action) => {\n    //     return contactAdapter.removeOne(action.contact,state)\n    // }),\n    // on(fromContactAction.contactActions.deleteContactFail, (state,action) => {\n    //     return {...state,error:action.error}\n    // })\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialContactState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : contactAdapter.getInitialState({\n    loaded: false,\n    loading: false,\n    error: null,\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : contactAdapter.getSelectors()\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  firebaseConfig: {\n    apiKey: \"AIzaSyDwMd-XkmQr-4Mc_utGIEEzg5D7gQ8lvqQ\",\n    authDomain: \"encouragement-crm.firebaseapp.com\",\n    projectId: \"encouragement-crm\",\n    storageBucket: \"encouragement-crm.appspot.com\",\n    messagingSenderId: \"398173868163\",\n    appId: \"1:398173868163:web:292c880186afef78cf8bb6\"\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  firebaseConfig:{\n    apiKey: \"AIzaSyDwMd-XkmQr-4Mc_utGIEEzg5D7gQ8lvqQ\",\n    authDomain: \"encouragement-crm.firebaseapp.com\",\n    projectId: \"encouragement-crm\",\n    storageBucket: \"encouragement-crm.appspot.com\",\n    messagingSenderId: \"398173868163\",\n    appId: \"1:398173868163:web:292c880186afef78cf8bb6\"\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/app/operations/note/state/reducers/notes.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialNoteState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : noteAdapter.getInitialState({\n    loaded: false,\n    loading: false,\n    error: null,\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noteAdapter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEntityAdapter()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noteFeatureKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'note'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noteReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n    initialNoteState,\n    //load\n    on(fromNoteAction.noteActions.loadNoteSuccess, (state, action) => {\n        return noteAdapter.setAll(action.notes, {\n            ...state,\n            loaded: true,\n            loading: false\n        });\n    }),\n    on(fromNoteAction.noteActions.loadNotesFail, (state, action) => {\n        return {\n            ...state,\n            loaded: true,\n            loading: false,\n            error: action.error\n        }\n    }),\n\n    //add\n    on(fromNoteAction.noteActions.addNoteSuccess, (state, action) => {\n        return noteAdapter.addOne(action.note, state)\n    }),\n    on(fromNoteAction.noteActions.addNoteFail, (state, action) => {\n        return { ...state, error: action.error }\n    }),\n\n    //update\n    // on(fromNoteAction.noteActions.updateNoteSuccess, (state,action) => {\n    //     return noteAdapter.updateOne(action.note,state)\n    // }),\n    // on(fromNoteAction.noteActions.updateNoteFail, (state,action) => {\n    //     return {...state,error:action.error}\n    // }),\n\n    //delete\n    // on(fromNoteAction.noteActions.deleteNoteSuccess, (state,action) => {\n    //     return noteAdapter.removeOne(action.note,state)\n    // }),\n    // on(fromNoteAction.noteActions.deleteNoteFail, (state,action) => {\n    //     return {...state,error:action.error}\n    // })\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : noteAdapter.getSelectors()\n                    \n                \n\n\n        \n    \n\n    src/app/operations/task/state/reducers/task.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialTaskState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : taskAdapter.getInitialState({\n  loaded: false,\n  loading: false,\n  error: null,\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskAdapter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEntityAdapter()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskFeatureKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'task'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialTaskState,\n\n  on(TaskActions.taskActions.loadTaskSuccess, (state, action) => {\n    return taskAdapter.setAll(action.tasks, {\n      ...state,\n      loaded: true,\n      loading: false\n    });\n  }),\n  on(TaskActions.taskActions.loadTasksFail, (state, action) => {\n    return {\n      ...state,\n      loaded: true,\n      loading: false,\n      error: action.error\n    }\n  }),\n\n  on(TaskActions.taskActions.addTaskSuccess, (state, action) => {\n    return taskAdapter.addOne(action.task, state)\n  }),\n  on(TaskActions.taskActions.addTaskFail, (state, action) => {\n    return { ...state, error: action.error }\n  }),\n\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : taskAdapter.getSelectors()\n                    \n                \n\n\n        \n    \n\n    src/app/shared/shared.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        modules\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  CardsModule,\n  TabModule,\n  CommonModule,\n  ReactiveFormsModule,\n  FormsModule,\n  MaterialModule,\n  RouterModule,\n  StoreModule.forFeature(fromTask.taskFeatureKey, fromTask.taskReducer), EffectsModule.forFeature([TaskEffects]),\n  StoreModule.forFeature(fromContactReducer.contactFeatureKey, fromContactReducer.contactReducer),\n  StoreModule.forFeature(fromNote.noteFeatureKey, fromNote.noteReducer),\n]\n                    \n                \n\n\n        \n    \n\n    src/app/operations/note/state/actions/notes.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        noteActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    loadNotes: createAction(NoteActionTypes.LOAD_NOTES),\n    loadNotesFail: createAction(\n        NoteActionTypes.LOAD_NOTES_FAIL,\n        props()\n    ),\n    loadNoteSuccess: createAction(\n        NoteActionTypes.LOAD_NOTES_SUCCESS,\n        props()\n    ),\n    addNote: createAction(\n        NoteActionTypes.ADD_NOTE,\n        props()\n    ),\n    addNoteFail: createAction(\n        NoteActionTypes.ADD_NOTE_FAIL,\n        props()\n    ),\n    addNoteSuccess: createAction(\n        NoteActionTypes.ADD_NOTE_SUCCESS,\n        props()\n    ),\n    updateNote: createAction(\n        NoteActionTypes.UPDATE_NOTE,\n        props()\n    ),\n    updateNoteFail: createAction(\n        NoteActionTypes.UPDATE_NOTE_FAIL,\n        props()\n    ),\n    updateNoteSuccess: createAction(\n        NoteActionTypes.UPDATE_NOTE_SUCCESS,\n        props()\n    ),\n    deleteNote: createAction(\n        NoteActionTypes.DELETE_NOTE,\n        props()\n    ),\n    deleteNoteFail: createAction(\n        NoteActionTypes.DELETE_NOTE_FAIL,\n        props()\n    ),\n    deleteNoteSuccess: createAction(\n        NoteActionTypes.DELETE_NOTE_SUCCESS,\n        props()\n    )\n}\n                    \n                \n\n\n        \n    \n\n    src/app/store/reducers/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActionReducerMap\n\n                    \n                \n                \n                    \n                        Default value : {\n  contactState: fromOperation.contactReducer,\n  taskState: taskReducer,\n  noteState: noteReducer\n  \n}\n                    \n                \n\n\n        \n    \n\n    src/app/operations/contact/state/contact.selector.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        selectContacts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n    selectContactState, \n    selectAll\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectContactState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createFeatureSelector(\n    contactFeatureKey\n)\n                    \n                \n\n\n        \n    \n\n    src/app/operations/note/state/selectors/notes.selectors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        selectNotes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectNotesState,\n  fromNotes.selectAll\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectNotesState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createFeatureSelector(\n  fromNotes.noteFeatureKey\n)\n                    \n                \n\n\n        \n    \n\n    src/app/operations/task/state/selectors/task.selectors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        selectTasks\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectTaskState, \n  selectAll\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectTaskState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createFeatureSelector(\n  fromTask.taskFeatureKey\n)\n                    \n                \n\n\n        \n    \n\n    src/app/operations/task/state/actions/task.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        taskActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    loadTasks: createAction(TaskActionTypes.LOAD_TASK),\n    loadTasksFail: createAction(\n        TaskActionTypes.LOAD_TASK_FAIL,\n        props()\n    ),\n    loadTaskSuccess: createAction(\n        TaskActionTypes.LOAD_TASK_SUCCESS,\n        props()\n    ),\n    addTask: createAction(\n        TaskActionTypes.ADD_TASK, \n        props()\n    ),\n    addTaskFail:createAction(\n        TaskActionTypes.ADD_TASK_FAIL,\n        props()\n    ),\n    addTaskSuccess:createAction(\n        TaskActionTypes.ADD_TASK_SUCCESS, \n        props()\n    ),\n    updateTask: createAction(\n        TaskActionTypes.UPDATE_TASK,\n        props()\n    ),\n     updateTaskFail:createAction(\n        TaskActionTypes.UPDATE_TASK_FAIL,\n        props()\n    ),\n    updateTaskSuccess:createAction(\n        TaskActionTypes.UPDATE_TASK_SUCCESS,\n        props()\n    ),\n   deleteTask: createAction(\n        TaskActionTypes.DELETE_TASK,\n        props()\n    ),\n    deleteTaskFail: createAction(\n        TaskActionTypes.DELETE_TASK_FAIL,\n        props()\n    ),\n    deleteTaskSuccess: createAction(\n        TaskActionTypes.DELETE_TASK_SUCCESS,\n        props()\n    )\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
